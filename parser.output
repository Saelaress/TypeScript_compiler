Terminals unused in grammar

   INTERFACE
   CONSTRUCTOR
   NEW
   THIS
   DELETE
   EXPORT
   OF
   IN
   CONTINUE
   DECLARE
   CONSOLE
   IS
   PREF_DECREMENT
   PREF_INCREMENT
   POST_DECREMENT
   POST_INCREMENT


State 7 conflicts: 1 shift/reduce
State 9 conflicts: 1 shift/reduce
State 16 conflicts: 1 shift/reduce
State 21 conflicts: 1 shift/reduce
State 32 conflicts: 1 shift/reduce
State 38 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 87 conflicts: 1 shift/reduce
State 102 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce
State 130 conflicts: 1 shift/reduce
State 167 conflicts: 2 shift/reduce
State 170 conflicts: 1 shift/reduce
State 185 conflicts: 2 shift/reduce
State 186 conflicts: 2 shift/reduce
State 189 conflicts: 1 shift/reduce
State 192 conflicts: 2 shift/reduce
State 193 conflicts: 2 shift/reduce
State 194 conflicts: 1 shift/reduce
State 195 conflicts: 2 reduce/reduce
State 223 conflicts: 1 shift/reduce, 1 reduce/reduce
State 226 conflicts: 1 shift/reduce
State 227 conflicts: 1 shift/reduce
State 228 conflicts: 1 shift/reduce
State 230 conflicts: 1 shift/reduce
State 252 conflicts: 2 reduce/reduce
State 253 conflicts: 2 reduce/reduce
State 254 conflicts: 2 reduce/reduce
State 255 conflicts: 2 reduce/reduce
State 256 conflicts: 2 reduce/reduce
State 257 conflicts: 2 reduce/reduce
State 259 conflicts: 2 reduce/reduce
State 260 conflicts: 2 reduce/reduce
State 261 conflicts: 2 reduce/reduce
State 262 conflicts: 2 reduce/reduce
State 263 conflicts: 2 reduce/reduce
State 264 conflicts: 2 reduce/reduce
State 265 conflicts: 2 reduce/reduce
State 266 conflicts: 2 reduce/reduce
State 267 conflicts: 2 reduce/reduce
State 268 conflicts: 2 reduce/reduce
State 269 conflicts: 2 reduce/reduce
State 270 conflicts: 2 reduce/reduce
State 271 conflicts: 2 reduce/reduce
State 275 conflicts: 1 shift/reduce
State 291 conflicts: 1 shift/reduce, 1 reduce/reduce
State 301 conflicts: 1 shift/reduce, 1 reduce/reduce
State 302 conflicts: 1 shift/reduce, 1 reduce/reduce
State 306 conflicts: 1 shift/reduce
State 342 conflicts: 1 shift/reduce
State 348 conflicts: 1 shift/reduce
State 355 conflicts: 1 shift/reduce
State 366 conflicts: 21 shift/reduce, 2 reduce/reduce
State 388 conflicts: 1 shift/reduce
State 411 conflicts: 1 shift/reduce
State 447 conflicts: 1 shift/reduce
State 448 conflicts: 1 shift/reduce
State 462 conflicts: 1 shift/reduce
State 463 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_elem
    2        | program program_elem

    3 program_elem: class_list
    4             | function_declaration

    5 endl: ENDL
    6     | endl ENDL

    7 endl_opt: /* empty */
    8         | endl

    9 stmt_sep: ';'
   10         | endl

   11 expr_list: expr
   12          | expr_list endl_opt ',' endl_opt expr

   13 expr_list_opt: /* empty */
   14              | expr_list

   15 expr: if_expr
   16     | expr DECREMENT
   17     | DECREMENT endl_opt expr
   18     | expr INCREMENT
   19     | INCREMENT endl_opt expr
   20     | ID AS endl_opt type
   21     | '-' endl_opt expr
   22     | '+' endl_opt expr

   23 if_expr: NUMBER_LITERAL
   24        | STRING_LITERAL
   25        | TRUE_LITERAL
   26        | FALSE_LITERAL
   27        | ID
   28        | '(' endl_opt if_expr endl_opt ')'
   29        | if_expr endl_opt '.' endl_opt ID
   30        | if_expr endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   31        | ID '(' expr_list_opt ')'
   32        | if_expr '+' endl_opt if_expr
   33        | if_expr '-' endl_opt if_expr
   34        | if_expr '*' endl_opt if_expr
   35        | if_expr '/' endl_opt if_expr
   36        | if_expr '%' endl_opt if_expr
   37        | if_expr '<' endl_opt if_expr
   38        | if_expr '>' endl_opt if_expr
   39        | if_expr LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr EQUALS endl_opt if_expr
   42        | if_expr NOT_EQUALS endl_opt if_expr
   43        | if_expr '=' endl_opt if_expr
   44        | if_expr PLUS_ASSIGN endl_opt if_expr
   45        | if_expr MINUS_ASSIGN endl_opt if_expr
   46        | if_expr MUL_ASSIGN endl_opt if_expr
   47        | if_expr DIV_ASSIGN endl_opt if_expr
   48        | if_expr MOD_ASSIGN endl_opt if_expr
   49        | NOT endl_opt if_expr
   50        | if_expr AND endl_opt if_expr
   51        | if_expr OR endl_opt if_expr
   52        | if_expr '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr endl_opt dimensions_expr

   55 block_statement: '{' endl_opt stmt_list_opt '}'

   56 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement
   57        | IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt if_expr
   58        | IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

   59 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt stmt
   60           | WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt empty_stmt

   61 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'
   62              | DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

   63 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt
   64         | FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

   65 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

   66 case_list: case_stmt
   67          | case_list case_stmt

   68 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt endl_opt break_opt
   69          | CASE endl_opt expr endl_opt ':' endl_opt empty_stmt endl_opt break_opt
   70          | DEFAULT endl_opt ':' endl_opt stmt endl_opt break_opt
   71          | DEFAULT endl_opt ':' endl_opt empty_stmt endl_opt break_opt

   72 break_opt: /* empty */
   73          | BREAK stmt_sep

   74 return_statement: RETURN expr stmt_sep

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   76                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

   77 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement
   79             | CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

   80 error_type: UNKNOWN
   81           | ANY

   82 stmt_list_opt: /* empty */
   83              | stmt_list endl_opt

   84 stmt_list: stmt
   85          | empty_stmt
   86          | stmt_list stmt
   87          | stmt_list empty_stmt

   88 func_stmt_list_opt: /* empty */
   89                   | func_stmt_list

   90 func_stmt_list: func_elem
   91               | func_stmt_list func_elem

   92 func_elem: func_stmt
   93          | empty_stmt

   94 stmt: expr stmt_sep
   95     | if_stmt
   96     | while_stmt
   97     | for_stmt
   98     | do_while_stmt stmt_sep
   99     | switch_stmt
  100     | try_catch_block
  101     | block_statement
  102     | var_declaration stmt_sep
  103     | enum_declaration

  104 func_stmt: return_statement
  105          | stmt

  106 empty_stmt: ';'

  107 modifier: LET
  108         | CONST

  109 type: NUMBER
  110     | STRING
  111     | BOOLEAN
  112     | ANY
  113     | UNKNOWN
  114     | VOID
  115     | ID

  116 type_mark: ':' endl_opt type

  117 type_mark_opt: /* empty */
  118              | type_mark

  119 variable: ID endl_opt type_mark_opt

  120 var_init_opt: /* empty */
  121             | endl_opt '=' endl_opt expr

  122 var_list: variable var_init_opt
  123         | var_list endl_opt ',' endl_opt variable var_init_opt

  124 var_declaration: modifier endl_opt var_list
  125                | modifier ID endl_opt type_mark dimensions
  126                | modifier ID endl_opt type_mark endl_opt '[' endl_opt ']'
  127                | modifier ID endl_opt type_mark dimensions endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'
  128                | modifier ID endl_opt type_mark endl_opt '[' endl_opt ']' endl_opt '=' endl_opt '[' expr_list_opt ']'

  129 dimensions: '[' endl_opt ']'
  130           | dimensions '[' endl_opt ']'

  131 dimensions_expr: '[' endl_opt expr endl_opt ']'
  132                | dimensions_expr endl_opt '[' endl_opt expr endl_opt ']'

  133 param: ID endl_opt type_mark

  134 optional_param: ID endl_opt '?' endl_opt type_mark

  135 param_list: param
  136           | param_list endl_opt ',' endl_opt param
  137           | optional_param
  138           | param_list endl_opt ',' endl_opt optional_param

  139 param_list_0_or_more: '(' endl_opt param_list endl_opt ')'
  140                     | '(' ')'

  141 extends_decl: /* empty */
  142             | EXTENDS endl_opt ID

  143 implements_decl_opt: /* empty */
  144                    | implements_decl

  145 implements_decl: IMPLEMENTS endl_opt ID
  146                | implements_decl endl_opt ',' endl_opt ID

  147 property_modifier: visibility
  148                  | visibility READONLY
  149                  | READONLY
  150                  | visibility STATIC
  151                  | STATIC
  152                  | visibility STATIC READONLY

  153 visibility: PRIVATE
  154           | PROTECTED
  155           | PUBLIC

  156 class_member: property_modifier expr endl_opt stmt_sep
  157             | function_declaration
  158             | class_declaration

  159 class_visibility_member: class_member
  160                        | visibility endl_opt class_member

  161 class_visibility_member_list: class_visibility_member
  162                             | class_visibility_member_list endl_opt class_visibility_member

  163 class_body: /* empty */
  164           | class_visibility_member_list

  165 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

  166 class_list: class_declaration
  167           | class_list class_declaration

  168 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}'

  169 id_list: ID var_init_opt
  170        | id_list endl_opt ',' endl_opt ID var_init_opt


Terminals, with rules where they appear

$end (0) 0
'%' (37) 36
'(' (40) 28 30 31 56 57 58 59 60 61 62 63 64 65 78 79 139 140
')' (41) 28 30 31 56 57 58 59 60 61 62 63 64 65 78 79 139 140
'*' (42) 34
'+' (43) 22 32
',' (44) 12 123 136 138 146 170
'-' (45) 21 33
'.' (46) 29 30
'/' (47) 35
':' (58) 52 68 69 70 71 79 116
';' (59) 9 63 64 106
'<' (60) 37
'=' (61) 43 121 127 128
'>' (62) 38
'?' (63) 52 134
'[' (91) 53 126 127 128 129 130 131 132
']' (93) 53 126 127 128 129 130 131 132
'{' (123) 55 65 75 76 165 168
'}' (125) 55 65 75 76 165 168
error (256)
INTERFACE (258)
IMPLEMENTS (259) 145
CONSTRUCTOR (260)
NEW (261)
EXTENDS (262) 142
THIS (263)
CLASS (264) 165
STATIC (265) 150 151 152
RETURN (266) 74
DELETE (267)
EXPORT (268)
PUBLIC (269) 155
PROTECTED (270) 154
PRIVATE (271) 153
READONLY (272) 148 149 152
DO (273) 61 62
IF (274) 56 57 58
ELSE (275) 58
FOR (276) 63 64
OF (277)
IN (278)
WHILE (279) 59 60 61 62
BREAK (280) 73
CONTINUE (281)
DEFAULT (282) 70 71
SWITCH (283) 65
CASE (284) 68 69
TRY (285) 77
CATCH (286) 78 79
INCREMENT (287) 18 19
DECREMENT (288) 16 17
LET (289) 107
CONST (290) 108
FUNC (291) 75 76
DECLARE (292)
UNKNOWN (293) 80 113
ANY (294) 81 112
NUMBER (295) 109
STRING (296) 110
VOID (297) 114
BOOLEAN (298) 111
ENUM (299) 168
NUMBER_LITERAL (300) 23
STRING_LITERAL (301) 24
TRUE_LITERAL (302) 25
FALSE_LITERAL (303) 26
ID (304) 20 27 29 30 31 75 76 78 79 115 119 125 126 127 128 133 134
    142 145 146 165 168 169 170
CONSOLE (305)
ENDL (306) 5 6
MOD_ASSIGN (307) 48
DIV_ASSIGN (308) 47
MUL_ASSIGN (309) 46
MINUS_ASSIGN (310) 45
PLUS_ASSIGN (311) 44
OR (312) 51
AND (313) 50
AS (314) 20
IS (315)
GREATER_OR_EQUAL (316) 40
LESS_OR_EQUAL (317) 39
NOT_EQUALS (318) 42
EQUALS (319) 41
PREF_DECREMENT (320)
PREF_INCREMENT (321)
POST_DECREMENT (322)
POST_INCREMENT (323)
UMINUS (324)
UPLUS (325)
NOT (326) 49


Nonterminals, with rules where they appear

$accept (91)
    on left: 0
program (92)
    on left: 1 2, on right: 0 2
program_elem (93)
    on left: 3 4, on right: 1 2
endl (94)
    on left: 5 6, on right: 6 8 10
endl_opt (95)
    on left: 7 8, on right: 12 17 19 20 21 22 28 29 30 32 33 34 35
    36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
    57 58 59 60 61 62 63 64 65 68 69 70 71 75 76 77 78 79 83 116 119
    121 123 124 125 126 127 128 129 130 131 132 133 134 136 138 139
    142 145 146 156 160 162 165 168 170
stmt_sep (96)
    on left: 9 10, on right: 73 74 94 98 102 156
expr_list (97)
    on left: 11 12, on right: 12 14 53
expr_list_opt (98)
    on left: 13 14, on right: 30 31 127 128
expr (99)
    on left: 15 16 17 18 19 20 21 22, on right: 11 12 16 17 18 19 21
    22 61 62 63 64 65 68 69 74 94 121 131 132 156
if_expr (100)
    on left: 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
    41 42 43 44 45 46 47 48 49 50 51 52 53 54, on right: 15 28 29 30
    32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
    53 54 56 57 58 59 60 63 64
block_statement (101)
    on left: 55, on right: 56 58 77 78 79 101
if_stmt (102)
    on left: 56 57 58, on right: 95
while_stmt (103)
    on left: 59 60, on right: 96
do_while_stmt (104)
    on left: 61 62, on right: 98
for_stmt (105)
    on left: 63 64, on right: 97
switch_stmt (106)
    on left: 65, on right: 99
case_list (107)
    on left: 66 67, on right: 65 67
case_stmt (108)
    on left: 68 69 70 71, on right: 66 67
break_opt (109)
    on left: 72 73, on right: 68 69 70 71
return_statement (110)
    on left: 74, on right: 104
function_declaration (111)
    on left: 75 76, on right: 4 157
try_catch_block (112)
    on left: 77, on right: 100
catch_clause (113)
    on left: 78 79, on right: 77
error_type (114)
    on left: 80 81, on right: 79
stmt_list_opt (115)
    on left: 82 83, on right: 55
stmt_list (116)
    on left: 84 85 86 87, on right: 83 86 87
func_stmt_list_opt (117)
    on left: 88 89, on right: 75 76
func_stmt_list (118)
    on left: 90 91, on right: 89 91
func_elem (119)
    on left: 92 93, on right: 90 91
stmt (120)
    on left: 94 95 96 97 98 99 100 101 102 103, on right: 59 61 63
    68 70 84 86 105
func_stmt (121)
    on left: 104 105, on right: 92
empty_stmt (122)
    on left: 106, on right: 60 62 64 69 71 85 87 93
modifier (123)
    on left: 107 108, on right: 124 125 126 127 128
type (124)
    on left: 109 110 111 112 113 114 115, on right: 20 116
type_mark (125)
    on left: 116, on right: 75 118 125 126 127 128 133 134
type_mark_opt (126)
    on left: 117 118, on right: 119
variable (127)
    on left: 119, on right: 122 123
var_init_opt (128)
    on left: 120 121, on right: 122 123 169 170
var_list (129)
    on left: 122 123, on right: 123 124
var_declaration (130)
    on left: 124 125 126 127 128, on right: 102
dimensions (131)
    on left: 129 130, on right: 125 127 130
dimensions_expr (132)
    on left: 131 132, on right: 54 132
param (133)
    on left: 133, on right: 135 136
optional_param (134)
    on left: 134, on right: 137 138
param_list (135)
    on left: 135 136 137 138, on right: 136 138 139
param_list_0_or_more (136)
    on left: 139 140, on right: 75 76
extends_decl (137)
    on left: 141 142, on right: 165
implements_decl_opt (138)
    on left: 143 144, on right: 165
implements_decl (139)
    on left: 145 146, on right: 144 146
property_modifier (140)
    on left: 147 148 149 150 151 152, on right: 156
visibility (141)
    on left: 153 154 155, on right: 147 148 150 152 160
class_member (142)
    on left: 156 157 158, on right: 159 160
class_visibility_member (143)
    on left: 159 160, on right: 161 162
class_visibility_member_list (144)
    on left: 161 162, on right: 162 164
class_body (145)
    on left: 163 164, on right: 165
class_declaration (146)
    on left: 165, on right: 158 166 167
class_list (147)
    on left: 166 167, on right: 3 167
enum_declaration (148)
    on left: 168, on right: 103
id_list (149)
    on left: 169 170, on right: 168 170


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1
    FUNC   shift, and go to state 2

    program               go to state 3
    program_elem          go to state 4
    function_declaration  go to state 5
    class_declaration     go to state 6
    class_list            go to state 7


State 1

  165 class_declaration: CLASS . endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 10


State 2

   75 function_declaration: FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   76                     | FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 11


State 3

    0 $accept: program . $end
    2 program: program . program_elem

    $end   shift, and go to state 12
    CLASS  shift, and go to state 1
    FUNC   shift, and go to state 2

    program_elem          go to state 13
    function_declaration  go to state 5
    class_declaration     go to state 6
    class_list            go to state 7


State 4

    1 program: program_elem .

    $default  reduce using rule 1 (program)


State 5

    4 program_elem: function_declaration .

    $default  reduce using rule 4 (program_elem)


State 6

  166 class_list: class_declaration .

    $default  reduce using rule 166 (class_list)


State 7

    3 program_elem: class_list .
  167 class_list: class_list . class_declaration

    CLASS  shift, and go to state 1

    CLASS     [reduce using rule 3 (program_elem)]
    $default  reduce using rule 3 (program_elem)

    class_declaration  go to state 14


State 8

    5 endl: ENDL .

    $default  reduce using rule 5 (endl)


State 9

    6 endl: endl . ENDL
    8 endl_opt: endl .

    ENDL  shift, and go to state 15

    ENDL      [reduce using rule 8 (endl_opt)]
    $default  reduce using rule 8 (endl_opt)


State 10

  165 class_declaration: CLASS endl_opt . ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    ID  shift, and go to state 16


State 11

   75 function_declaration: FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   76                     | FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    ID  shift, and go to state 17


State 12

    0 $accept: program $end .

    $default  accept


State 13

    2 program: program program_elem .

    $default  reduce using rule 2 (program)


State 14

  167 class_list: class_list class_declaration .

    $default  reduce using rule 167 (class_list)


State 15

    6 endl: endl ENDL .

    $default  reduce using rule 6 (endl)


State 16

  165 class_declaration: CLASS endl_opt ID . endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 18


State 17

   75 function_declaration: FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   76                     | FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 19


State 18

  165 class_declaration: CLASS endl_opt ID endl_opt . extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    EXTENDS  shift, and go to state 20

    $default  reduce using rule 141 (extends_decl)

    extends_decl  go to state 21


State 19

   75 function_declaration: FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   76                     | FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    '('  shift, and go to state 22

    param_list_0_or_more  go to state 23


State 20

  142 extends_decl: EXTENDS . endl_opt ID

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 24


State 21

  165 class_declaration: CLASS endl_opt ID endl_opt extends_decl . endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 25


State 22

  139 param_list_0_or_more: '(' . endl_opt param_list endl_opt ')'
  140                     | '(' . ')'

    ENDL  shift, and go to state 8
    ')'   shift, and go to state 26

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 27


State 23

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   76                     | FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 28


State 24

  142 extends_decl: EXTENDS endl_opt . ID

    ID  shift, and go to state 29


State 25

  165 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt . implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    IMPLEMENTS  shift, and go to state 30

    $default  reduce using rule 143 (implements_decl_opt)

    implements_decl_opt  go to state 31
    implements_decl      go to state 32


State 26

  140 param_list_0_or_more: '(' ')' .

    $default  reduce using rule 140 (param_list_0_or_more)


State 27

  139 param_list_0_or_more: '(' endl_opt . param_list endl_opt ')'

    ID  shift, and go to state 33

    param           go to state 34
    optional_param  go to state 35
    param_list      go to state 36


State 28

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   76                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . '{' endl_opt func_stmt_list_opt endl_opt '}'

    ':'  shift, and go to state 37
    '{'  shift, and go to state 38

    type_mark  go to state 39


State 29

  142 extends_decl: EXTENDS endl_opt ID .

    $default  reduce using rule 142 (extends_decl)


State 30

  145 implements_decl: IMPLEMENTS . endl_opt ID

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 40


State 31

  165 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt . endl_opt '{' endl_opt class_body endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 41


State 32

  144 implements_decl_opt: implements_decl .
  146 implements_decl: implements_decl . endl_opt ',' endl_opt ID

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 144 (implements_decl_opt)]
    '{'       reduce using rule 144 (implements_decl_opt)
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 42


State 33

  133 param: ID . endl_opt type_mark
  134 optional_param: ID . endl_opt '?' endl_opt type_mark

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 43


State 34

  135 param_list: param .

    $default  reduce using rule 135 (param_list)


State 35

  137 param_list: optional_param .

    $default  reduce using rule 137 (param_list)


State 36

  136 param_list: param_list . endl_opt ',' endl_opt param
  138           | param_list . endl_opt ',' endl_opt optional_param
  139 param_list_0_or_more: '(' endl_opt param_list . endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 44


State 37

  116 type_mark: ':' . endl_opt type

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 45


State 38

   76 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' . endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 46


State 39

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark . endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 47


State 40

  145 implements_decl: IMPLEMENTS endl_opt . ID

    ID  shift, and go to state 48


State 41

  165 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt . '{' endl_opt class_body endl_opt '}'

    '{'  shift, and go to state 49


State 42

  146 implements_decl: implements_decl endl_opt . ',' endl_opt ID

    ','  shift, and go to state 50


State 43

  133 param: ID endl_opt . type_mark
  134 optional_param: ID endl_opt . '?' endl_opt type_mark

    '?'  shift, and go to state 51
    ':'  shift, and go to state 37

    type_mark  go to state 52


State 44

  136 param_list: param_list endl_opt . ',' endl_opt param
  138           | param_list endl_opt . ',' endl_opt optional_param
  139 param_list_0_or_more: '(' endl_opt param_list endl_opt . ')'

    ')'  shift, and go to state 53
    ','  shift, and go to state 54


State 45

  116 type_mark: ':' endl_opt . type

    UNKNOWN  shift, and go to state 55
    ANY      shift, and go to state 56
    NUMBER   shift, and go to state 57
    STRING   shift, and go to state 58
    VOID     shift, and go to state 59
    BOOLEAN  shift, and go to state 60
    ID       shift, and go to state 61

    type  go to state 62


State 46

   76 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt . func_stmt_list_opt endl_opt '}'

    RETURN          shift, and go to state 63
    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    $default  reduce using rule 88 (func_stmt_list_opt)

    expr                go to state 86
    if_expr             go to state 87
    block_statement     go to state 88
    if_stmt             go to state 89
    while_stmt          go to state 90
    do_while_stmt       go to state 91
    for_stmt            go to state 92
    switch_stmt         go to state 93
    return_statement    go to state 94
    try_catch_block     go to state 95
    func_stmt_list_opt  go to state 96
    func_stmt_list      go to state 97
    func_elem           go to state 98
    stmt                go to state 99
    func_stmt           go to state 100
    empty_stmt          go to state 101
    modifier            go to state 102
    var_declaration     go to state 103
    enum_declaration    go to state 104


State 47

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt . '{' endl_opt func_stmt_list_opt endl_opt '}'

    '{'  shift, and go to state 105


State 48

  145 implements_decl: IMPLEMENTS endl_opt ID .

    $default  reduce using rule 145 (implements_decl)


State 49

  165 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' . endl_opt class_body endl_opt '}'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 106


State 50

  146 implements_decl: implements_decl endl_opt ',' . endl_opt ID

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 107


State 51

  134 optional_param: ID endl_opt '?' . endl_opt type_mark

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 108


State 52

  133 param: ID endl_opt type_mark .

    $default  reduce using rule 133 (param)


State 53

  139 param_list_0_or_more: '(' endl_opt param_list endl_opt ')' .

    $default  reduce using rule 139 (param_list_0_or_more)


State 54

  136 param_list: param_list endl_opt ',' . endl_opt param
  138           | param_list endl_opt ',' . endl_opt optional_param

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 109


State 55

  113 type: UNKNOWN .

    $default  reduce using rule 113 (type)


State 56

  112 type: ANY .

    $default  reduce using rule 112 (type)


State 57

  109 type: NUMBER .

    $default  reduce using rule 109 (type)


State 58

  110 type: STRING .

    $default  reduce using rule 110 (type)


State 59

  114 type: VOID .

    $default  reduce using rule 114 (type)


State 60

  111 type: BOOLEAN .

    $default  reduce using rule 111 (type)


State 61

  115 type: ID .

    $default  reduce using rule 115 (type)


State 62

  116 type_mark: ':' endl_opt type .

    $default  reduce using rule 116 (type_mark)


State 63

   74 return_statement: RETURN . expr stmt_sep

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 110
    if_expr  go to state 87


State 64

   61 do_while_stmt: DO . endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'
   62              | DO . endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 111


State 65

   56 if_stmt: IF . endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement
   57        | IF . endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt if_expr
   58        | IF . endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 112


State 66

   63 for_stmt: FOR . endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt
   64         | FOR . endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 113


State 67

   59 while_stmt: WHILE . endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt stmt
   60           | WHILE . endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 114


State 68

   65 switch_stmt: SWITCH . endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 115


State 69

   77 try_catch_block: TRY . endl_opt block_statement endl_opt catch_clause

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 116


State 70

   19 expr: INCREMENT . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 117


State 71

   17 expr: DECREMENT . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 118


State 72

  107 modifier: LET .

    $default  reduce using rule 107 (modifier)


State 73

  108 modifier: CONST .

    $default  reduce using rule 108 (modifier)


State 74

  168 enum_declaration: ENUM . endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 119


State 75

   23 if_expr: NUMBER_LITERAL .

    $default  reduce using rule 23 (if_expr)


State 76

   24 if_expr: STRING_LITERAL .

    $default  reduce using rule 24 (if_expr)


State 77

   25 if_expr: TRUE_LITERAL .

    $default  reduce using rule 25 (if_expr)


State 78

   26 if_expr: FALSE_LITERAL .

    $default  reduce using rule 26 (if_expr)


State 79

   20 expr: ID . AS endl_opt type
   27 if_expr: ID .
   31        | ID . '(' expr_list_opt ')'

    AS   shift, and go to state 120
    '('  shift, and go to state 121

    $default  reduce using rule 27 (if_expr)


State 80

  106 empty_stmt: ';' .

    $default  reduce using rule 106 (empty_stmt)


State 81

   22 expr: '+' . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 122


State 82

   21 expr: '-' . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 123


State 83

   49 if_expr: NOT . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 124


State 84

   28 if_expr: '(' . endl_opt if_expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 125


State 85

   55 block_statement: '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 126


State 86

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   94 stmt: expr . stmt_sep

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ';'        shift, and go to state 129
    ENDL       shift, and go to state 8

    endl      go to state 130
    stmt_sep  go to state 131


State 87

   15 expr: if_expr .
   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    ENDL              shift, and go to state 8
    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '?'               shift, and go to state 138
    OR                shift, and go to state 139
    AND               shift, and go to state 140
    '<'               shift, and go to state 141
    '>'               shift, and go to state 142
    GREATER_OR_EQUAL  shift, and go to state 143
    LESS_OR_EQUAL     shift, and go to state 144
    NOT_EQUALS        shift, and go to state 145
    EQUALS            shift, and go to state 146
    '+'               shift, and go to state 147
    '-'               shift, and go to state 148
    '*'               shift, and go to state 149
    '/'               shift, and go to state 150
    '%'               shift, and go to state 151

    ENDL      [reduce using rule 15 (expr)]
    '['       reduce using rule 7 (endl_opt)
    '.'       reduce using rule 7 (endl_opt)
    $default  reduce using rule 15 (expr)

    endl      go to state 9
    endl_opt  go to state 152


State 88

  101 stmt: block_statement .

    $default  reduce using rule 101 (stmt)


State 89

   95 stmt: if_stmt .

    $default  reduce using rule 95 (stmt)


State 90

   96 stmt: while_stmt .

    $default  reduce using rule 96 (stmt)


State 91

   98 stmt: do_while_stmt . stmt_sep

    ';'   shift, and go to state 129
    ENDL  shift, and go to state 8

    endl      go to state 130
    stmt_sep  go to state 153


State 92

   97 stmt: for_stmt .

    $default  reduce using rule 97 (stmt)


State 93

   99 stmt: switch_stmt .

    $default  reduce using rule 99 (stmt)


State 94

  104 func_stmt: return_statement .

    $default  reduce using rule 104 (func_stmt)


State 95

  100 stmt: try_catch_block .

    $default  reduce using rule 100 (stmt)


State 96

   76 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt . endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 154


State 97

   89 func_stmt_list_opt: func_stmt_list .
   91 func_stmt_list: func_stmt_list . func_elem

    RETURN          shift, and go to state 63
    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    $default  reduce using rule 89 (func_stmt_list_opt)

    expr              go to state 86
    if_expr           go to state 87
    block_statement   go to state 88
    if_stmt           go to state 89
    while_stmt        go to state 90
    do_while_stmt     go to state 91
    for_stmt          go to state 92
    switch_stmt       go to state 93
    return_statement  go to state 94
    try_catch_block   go to state 95
    func_elem         go to state 155
    stmt              go to state 99
    func_stmt         go to state 100
    empty_stmt        go to state 101
    modifier          go to state 102
    var_declaration   go to state 103
    enum_declaration  go to state 104


State 98

   90 func_stmt_list: func_elem .

    $default  reduce using rule 90 (func_stmt_list)


State 99

  105 func_stmt: stmt .

    $default  reduce using rule 105 (func_stmt)


State 100

   92 func_elem: func_stmt .

    $default  reduce using rule 92 (func_elem)


State 101

   93 func_elem: empty_stmt .

    $default  reduce using rule 93 (func_elem)


State 102

  124 var_declaration: modifier . endl_opt var_list
  125                | modifier . ID endl_opt type_mark dimensions
  126                | modifier . ID endl_opt type_mark endl_opt '[' endl_opt ']'
  127                | modifier . ID endl_opt type_mark dimensions endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'
  128                | modifier . ID endl_opt type_mark endl_opt '[' endl_opt ']' endl_opt '=' endl_opt '[' expr_list_opt ']'

    ID    shift, and go to state 156
    ENDL  shift, and go to state 8

    ID  [reduce using rule 7 (endl_opt)]

    endl      go to state 9
    endl_opt  go to state 157


State 103

  102 stmt: var_declaration . stmt_sep

    ';'   shift, and go to state 129
    ENDL  shift, and go to state 8

    endl      go to state 130
    stmt_sep  go to state 158


State 104

  103 stmt: enum_declaration .

    $default  reduce using rule 103 (stmt)


State 105

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' . endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 159


State 106

  165 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt . class_body endl_opt '}'

    CLASS      shift, and go to state 1
    STATIC     shift, and go to state 160
    PUBLIC     shift, and go to state 161
    PROTECTED  shift, and go to state 162
    PRIVATE    shift, and go to state 163
    READONLY   shift, and go to state 164
    FUNC       shift, and go to state 2

    $default  reduce using rule 163 (class_body)

    function_declaration          go to state 165
    property_modifier             go to state 166
    visibility                    go to state 167
    class_member                  go to state 168
    class_visibility_member       go to state 169
    class_visibility_member_list  go to state 170
    class_body                    go to state 171
    class_declaration             go to state 172


State 107

  146 implements_decl: implements_decl endl_opt ',' endl_opt . ID

    ID  shift, and go to state 173


State 108

  134 optional_param: ID endl_opt '?' endl_opt . type_mark

    ':'  shift, and go to state 37

    type_mark  go to state 174


State 109

  136 param_list: param_list endl_opt ',' endl_opt . param
  138           | param_list endl_opt ',' endl_opt . optional_param

    ID  shift, and go to state 33

    param           go to state 175
    optional_param  go to state 176


State 110

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   74 return_statement: RETURN expr . stmt_sep

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ';'        shift, and go to state 129
    ENDL       shift, and go to state 8

    endl      go to state 130
    stmt_sep  go to state 177


State 111

   61 do_while_stmt: DO endl_opt . stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'
   62              | DO endl_opt . empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    expr              go to state 86
    if_expr           go to state 87
    block_statement   go to state 88
    if_stmt           go to state 89
    while_stmt        go to state 90
    do_while_stmt     go to state 91
    for_stmt          go to state 92
    switch_stmt       go to state 93
    try_catch_block   go to state 95
    stmt              go to state 178
    empty_stmt        go to state 179
    modifier          go to state 102
    var_declaration   go to state 103
    enum_declaration  go to state 104


State 112

   56 if_stmt: IF endl_opt . '(' endl_opt if_expr endl_opt ')' endl_opt block_statement
   57        | IF endl_opt . '(' endl_opt if_expr endl_opt ')' endl_opt if_expr
   58        | IF endl_opt . '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    '('  shift, and go to state 180


State 113

   63 for_stmt: FOR endl_opt . '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt
   64         | FOR endl_opt . '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    '('  shift, and go to state 181


State 114

   59 while_stmt: WHILE endl_opt . '(' endl_opt if_expr endl_opt ')' endl_opt stmt
   60           | WHILE endl_opt . '(' endl_opt if_expr endl_opt ')' endl_opt empty_stmt

    '('  shift, and go to state 182


State 115

   65 switch_stmt: SWITCH endl_opt . '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

    '('  shift, and go to state 183


State 116

   77 try_catch_block: TRY endl_opt . block_statement endl_opt catch_clause

    '{'  shift, and go to state 85

    block_statement  go to state 184


State 117

   19 expr: INCREMENT endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 185
    if_expr  go to state 87


State 118

   17 expr: DECREMENT endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 186
    if_expr  go to state 87


State 119

  168 enum_declaration: ENUM endl_opt . ID endl_opt '{' endl_opt id_list endl_opt '}'

    ID  shift, and go to state 187


State 120

   20 expr: ID AS . endl_opt type

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 188


State 121

   31 if_expr: ID '(' . expr_list_opt ')'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 189
    expr_list_opt  go to state 190
    expr           go to state 191
    if_expr        go to state 87


State 122

   22 expr: '+' endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 192
    if_expr  go to state 87


State 123

   21 expr: '-' endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 193
    if_expr  go to state 87


State 124

   49 if_expr: NOT endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 195


State 125

   28 if_expr: '(' endl_opt . if_expr endl_opt ')'

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 196


State 126

   55 block_statement: '{' endl_opt . stmt_list_opt '}'

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    $default  reduce using rule 82 (stmt_list_opt)

    expr              go to state 86
    if_expr           go to state 87
    block_statement   go to state 88
    if_stmt           go to state 89
    while_stmt        go to state 90
    do_while_stmt     go to state 91
    for_stmt          go to state 92
    switch_stmt       go to state 93
    try_catch_block   go to state 95
    stmt_list_opt     go to state 197
    stmt_list         go to state 198
    stmt              go to state 199
    empty_stmt        go to state 200
    modifier          go to state 102
    var_declaration   go to state 103
    enum_declaration  go to state 104


State 127

   18 expr: expr INCREMENT .

    $default  reduce using rule 18 (expr)


State 128

   16 expr: expr DECREMENT .

    $default  reduce using rule 16 (expr)


State 129

    9 stmt_sep: ';' .

    $default  reduce using rule 9 (stmt_sep)


State 130

    6 endl: endl . ENDL
   10 stmt_sep: endl .

    ENDL  shift, and go to state 15

    ENDL      [reduce using rule 10 (stmt_sep)]
    $default  reduce using rule 10 (stmt_sep)


State 131

   94 stmt: expr stmt_sep .

    $default  reduce using rule 94 (stmt)


State 132

   43 if_expr: if_expr '=' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 201


State 133

   48 if_expr: if_expr MOD_ASSIGN . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 202


State 134

   47 if_expr: if_expr DIV_ASSIGN . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 203


State 135

   46 if_expr: if_expr MUL_ASSIGN . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 204


State 136

   45 if_expr: if_expr MINUS_ASSIGN . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 205


State 137

   44 if_expr: if_expr PLUS_ASSIGN . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 206


State 138

   52 if_expr: if_expr '?' . endl_opt if_expr endl_opt ':' endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 207


State 139

   51 if_expr: if_expr OR . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 208


State 140

   50 if_expr: if_expr AND . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 209


State 141

   37 if_expr: if_expr '<' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 210


State 142

   38 if_expr: if_expr '>' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 211


State 143

   40 if_expr: if_expr GREATER_OR_EQUAL . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 212


State 144

   39 if_expr: if_expr LESS_OR_EQUAL . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 213


State 145

   42 if_expr: if_expr NOT_EQUALS . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 214


State 146

   41 if_expr: if_expr EQUALS . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 215


State 147

   32 if_expr: if_expr '+' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 216


State 148

   33 if_expr: if_expr '-' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 217


State 149

   34 if_expr: if_expr '*' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 218


State 150

   35 if_expr: if_expr '/' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 219


State 151

   36 if_expr: if_expr '%' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 220


State 152

   29 if_expr: if_expr endl_opt . '.' endl_opt ID
   30        | if_expr endl_opt . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   53        | if_expr endl_opt . '[' endl_opt expr_list endl_opt ']'
   54        | if_expr endl_opt . dimensions_expr

    '['  shift, and go to state 221
    '.'  shift, and go to state 222

    dimensions_expr  go to state 223


State 153

   98 stmt: do_while_stmt stmt_sep .

    $default  reduce using rule 98 (stmt)


State 154

   76 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt . '}'

    '}'  shift, and go to state 224


State 155

   91 func_stmt_list: func_stmt_list func_elem .

    $default  reduce using rule 91 (func_stmt_list)


State 156

  125 var_declaration: modifier ID . endl_opt type_mark dimensions
  126                | modifier ID . endl_opt type_mark endl_opt '[' endl_opt ']'
  127                | modifier ID . endl_opt type_mark dimensions endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'
  128                | modifier ID . endl_opt type_mark endl_opt '[' endl_opt ']' endl_opt '=' endl_opt '[' expr_list_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 225


State 157

  124 var_declaration: modifier endl_opt . var_list

    ID  shift, and go to state 226

    variable  go to state 227
    var_list  go to state 228


State 158

  102 stmt: var_declaration stmt_sep .

    $default  reduce using rule 102 (stmt)


State 159

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt . func_stmt_list_opt endl_opt '}'

    RETURN          shift, and go to state 63
    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    $default  reduce using rule 88 (func_stmt_list_opt)

    expr                go to state 86
    if_expr             go to state 87
    block_statement     go to state 88
    if_stmt             go to state 89
    while_stmt          go to state 90
    do_while_stmt       go to state 91
    for_stmt            go to state 92
    switch_stmt         go to state 93
    return_statement    go to state 94
    try_catch_block     go to state 95
    func_stmt_list_opt  go to state 229
    func_stmt_list      go to state 97
    func_elem           go to state 98
    stmt                go to state 99
    func_stmt           go to state 100
    empty_stmt          go to state 101
    modifier            go to state 102
    var_declaration     go to state 103
    enum_declaration    go to state 104


State 160

  151 property_modifier: STATIC .

    $default  reduce using rule 151 (property_modifier)


State 161

  155 visibility: PUBLIC .

    $default  reduce using rule 155 (visibility)


State 162

  154 visibility: PROTECTED .

    $default  reduce using rule 154 (visibility)


State 163

  153 visibility: PRIVATE .

    $default  reduce using rule 153 (visibility)


State 164

  149 property_modifier: READONLY .

    $default  reduce using rule 149 (property_modifier)


State 165

  157 class_member: function_declaration .

    $default  reduce using rule 157 (class_member)


State 166

  156 class_member: property_modifier . expr endl_opt stmt_sep

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 230
    if_expr  go to state 87


State 167

  147 property_modifier: visibility .
  148                  | visibility . READONLY
  150                  | visibility . STATIC
  152                  | visibility . STATIC READONLY
  160 class_visibility_member: visibility . endl_opt class_member

    STATIC    shift, and go to state 231
    READONLY  shift, and go to state 232
    ENDL      shift, and go to state 8

    CLASS      reduce using rule 7 (endl_opt)
    STATIC     [reduce using rule 7 (endl_opt)]
    PUBLIC     reduce using rule 7 (endl_opt)
    PROTECTED  reduce using rule 7 (endl_opt)
    PRIVATE    reduce using rule 7 (endl_opt)
    READONLY   [reduce using rule 7 (endl_opt)]
    FUNC       reduce using rule 7 (endl_opt)
    $default   reduce using rule 147 (property_modifier)

    endl      go to state 9
    endl_opt  go to state 233


State 168

  159 class_visibility_member: class_member .

    $default  reduce using rule 159 (class_visibility_member)


State 169

  161 class_visibility_member_list: class_visibility_member .

    $default  reduce using rule 161 (class_visibility_member_list)


State 170

  162 class_visibility_member_list: class_visibility_member_list . endl_opt class_visibility_member
  164 class_body: class_visibility_member_list .

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 164 (class_body)]
    '}'       reduce using rule 164 (class_body)
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 234


State 171

  165 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body . endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 235


State 172

  158 class_member: class_declaration .

    $default  reduce using rule 158 (class_member)


State 173

  146 implements_decl: implements_decl endl_opt ',' endl_opt ID .

    $default  reduce using rule 146 (implements_decl)


State 174

  134 optional_param: ID endl_opt '?' endl_opt type_mark .

    $default  reduce using rule 134 (optional_param)


State 175

  136 param_list: param_list endl_opt ',' endl_opt param .

    $default  reduce using rule 136 (param_list)


State 176

  138 param_list: param_list endl_opt ',' endl_opt optional_param .

    $default  reduce using rule 138 (param_list)


State 177

   74 return_statement: RETURN expr stmt_sep .

    $default  reduce using rule 74 (return_statement)


State 178

   61 do_while_stmt: DO endl_opt stmt . endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 236


State 179

   62 do_while_stmt: DO endl_opt empty_stmt . endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 237


State 180

   56 if_stmt: IF endl_opt '(' . endl_opt if_expr endl_opt ')' endl_opt block_statement
   57        | IF endl_opt '(' . endl_opt if_expr endl_opt ')' endl_opt if_expr
   58        | IF endl_opt '(' . endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 238


State 181

   63 for_stmt: FOR endl_opt '(' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt
   64         | FOR endl_opt '(' . endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 239


State 182

   59 while_stmt: WHILE endl_opt '(' . endl_opt if_expr endl_opt ')' endl_opt stmt
   60           | WHILE endl_opt '(' . endl_opt if_expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 240


State 183

   65 switch_stmt: SWITCH endl_opt '(' . endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 241


State 184

   77 try_catch_block: TRY endl_opt block_statement . endl_opt catch_clause

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 242


State 185

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   19     | INCREMENT endl_opt expr .

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    INCREMENT  [reduce using rule 19 (expr)]
    DECREMENT  [reduce using rule 19 (expr)]
    $default   reduce using rule 19 (expr)


State 186

   16 expr: expr . DECREMENT
   17     | DECREMENT endl_opt expr .
   18     | expr . INCREMENT

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    INCREMENT  [reduce using rule 17 (expr)]
    DECREMENT  [reduce using rule 17 (expr)]
    $default   reduce using rule 17 (expr)


State 187

  168 enum_declaration: ENUM endl_opt ID . endl_opt '{' endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 243


State 188

   20 expr: ID AS endl_opt . type

    UNKNOWN  shift, and go to state 55
    ANY      shift, and go to state 56
    NUMBER   shift, and go to state 57
    STRING   shift, and go to state 58
    VOID     shift, and go to state 59
    BOOLEAN  shift, and go to state 60
    ID       shift, and go to state 61

    type  go to state 244


State 189

   12 expr_list: expr_list . endl_opt ',' endl_opt expr
   14 expr_list_opt: expr_list .

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 14 (expr_list_opt)]
    ','       reduce using rule 7 (endl_opt)
    $default  reduce using rule 14 (expr_list_opt)

    endl      go to state 9
    endl_opt  go to state 245


State 190

   31 if_expr: ID '(' expr_list_opt . ')'

    ')'  shift, and go to state 246


State 191

   11 expr_list: expr .
   16 expr: expr . DECREMENT
   18     | expr . INCREMENT

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    $default  reduce using rule 11 (expr_list)


State 192

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   22     | '+' endl_opt expr .

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    INCREMENT  [reduce using rule 22 (expr)]
    DECREMENT  [reduce using rule 22 (expr)]
    $default   reduce using rule 22 (expr)


State 193

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   21     | '-' endl_opt expr .

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    INCREMENT  [reduce using rule 21 (expr)]
    DECREMENT  [reduce using rule 21 (expr)]
    $default   reduce using rule 21 (expr)


State 194

   27 if_expr: ID .
   31        | ID . '(' expr_list_opt ')'

    '('  shift, and go to state 121

    '('       [reduce using rule 27 (if_expr)]
    $default  reduce using rule 27 (if_expr)


State 195

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | NOT endl_opt if_expr .
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 49 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 49 (if_expr)]
    $default  reduce using rule 49 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 196

   28 if_expr: '(' endl_opt if_expr . endl_opt ')'
   29        | if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    ENDL              shift, and go to state 8
    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '?'               shift, and go to state 138
    OR                shift, and go to state 139
    AND               shift, and go to state 140
    '<'               shift, and go to state 141
    '>'               shift, and go to state 142
    GREATER_OR_EQUAL  shift, and go to state 143
    LESS_OR_EQUAL     shift, and go to state 144
    NOT_EQUALS        shift, and go to state 145
    EQUALS            shift, and go to state 146
    '+'               shift, and go to state 147
    '-'               shift, and go to state 148
    '*'               shift, and go to state 149
    '/'               shift, and go to state 150
    '%'               shift, and go to state 151

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 247


State 197

   55 block_statement: '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 248


State 198

   83 stmt_list_opt: stmt_list . endl_opt
   86 stmt_list: stmt_list . stmt
   87          | stmt_list . empty_stmt

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    ENDL            shift, and go to state 8
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl              go to state 9
    endl_opt          go to state 249
    expr              go to state 86
    if_expr           go to state 87
    block_statement   go to state 88
    if_stmt           go to state 89
    while_stmt        go to state 90
    do_while_stmt     go to state 91
    for_stmt          go to state 92
    switch_stmt       go to state 93
    try_catch_block   go to state 95
    stmt              go to state 250
    empty_stmt        go to state 251
    modifier          go to state 102
    var_declaration   go to state 103
    enum_declaration  go to state 104


State 199

   84 stmt_list: stmt .

    $default  reduce using rule 84 (stmt_list)


State 200

   85 stmt_list: empty_stmt .

    $default  reduce using rule 85 (stmt_list)


State 201

   43 if_expr: if_expr '=' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 252


State 202

   48 if_expr: if_expr MOD_ASSIGN endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 253


State 203

   47 if_expr: if_expr DIV_ASSIGN endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 254


State 204

   46 if_expr: if_expr MUL_ASSIGN endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 255


State 205

   45 if_expr: if_expr MINUS_ASSIGN endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 256


State 206

   44 if_expr: if_expr PLUS_ASSIGN endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 257


State 207

   52 if_expr: if_expr '?' endl_opt . if_expr endl_opt ':' endl_opt if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 258


State 208

   51 if_expr: if_expr OR endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 259


State 209

   50 if_expr: if_expr AND endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 260


State 210

   37 if_expr: if_expr '<' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 261


State 211

   38 if_expr: if_expr '>' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 262


State 212

   40 if_expr: if_expr GREATER_OR_EQUAL endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 263


State 213

   39 if_expr: if_expr LESS_OR_EQUAL endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 264


State 214

   42 if_expr: if_expr NOT_EQUALS endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 265


State 215

   41 if_expr: if_expr EQUALS endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 266


State 216

   32 if_expr: if_expr '+' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 267


State 217

   33 if_expr: if_expr '-' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 268


State 218

   34 if_expr: if_expr '*' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 269


State 219

   35 if_expr: if_expr '/' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 270


State 220

   36 if_expr: if_expr '%' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 271


State 221

   53 if_expr: if_expr endl_opt '[' . endl_opt expr_list endl_opt ']'
  131 dimensions_expr: '[' . endl_opt expr endl_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 272


State 222

   29 if_expr: if_expr endl_opt '.' . endl_opt ID
   30        | if_expr endl_opt '.' . endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 273


State 223

   54 if_expr: if_expr endl_opt dimensions_expr .
  132 dimensions_expr: dimensions_expr . endl_opt '[' endl_opt expr endl_opt ']'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 54 (if_expr)]
    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 54 (if_expr)]
    $default  reduce using rule 54 (if_expr)

    endl      go to state 9
    endl_opt  go to state 274


State 224

   76 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}' .

    $default  reduce using rule 76 (function_declaration)


State 225

  125 var_declaration: modifier ID endl_opt . type_mark dimensions
  126                | modifier ID endl_opt . type_mark endl_opt '[' endl_opt ']'
  127                | modifier ID endl_opt . type_mark dimensions endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'
  128                | modifier ID endl_opt . type_mark endl_opt '[' endl_opt ']' endl_opt '=' endl_opt '[' expr_list_opt ']'

    ':'  shift, and go to state 37

    type_mark  go to state 275


State 226

  119 variable: ID . endl_opt type_mark_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 276


State 227

  122 var_list: variable . var_init_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 120 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 120 (var_init_opt)

    endl          go to state 9
    endl_opt      go to state 277
    var_init_opt  go to state 278


State 228

  123 var_list: var_list . endl_opt ',' endl_opt variable var_init_opt
  124 var_declaration: modifier endl_opt var_list .

    ENDL  shift, and go to state 8

    ';'       reduce using rule 124 (var_declaration)
    ENDL      [reduce using rule 124 (var_declaration)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 279


State 229

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt . endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 280


State 230

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
  156 class_member: property_modifier expr . endl_opt stmt_sep

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 281


State 231

  150 property_modifier: visibility STATIC .
  152                  | visibility STATIC . READONLY

    READONLY  shift, and go to state 282

    $default  reduce using rule 150 (property_modifier)


State 232

  148 property_modifier: visibility READONLY .

    $default  reduce using rule 148 (property_modifier)


State 233

  160 class_visibility_member: visibility endl_opt . class_member

    CLASS      shift, and go to state 1
    STATIC     shift, and go to state 160
    PUBLIC     shift, and go to state 161
    PROTECTED  shift, and go to state 162
    PRIVATE    shift, and go to state 163
    READONLY   shift, and go to state 164
    FUNC       shift, and go to state 2

    function_declaration  go to state 165
    property_modifier     go to state 166
    visibility            go to state 283
    class_member          go to state 284
    class_declaration     go to state 172


State 234

  162 class_visibility_member_list: class_visibility_member_list endl_opt . class_visibility_member

    CLASS      shift, and go to state 1
    STATIC     shift, and go to state 160
    PUBLIC     shift, and go to state 161
    PROTECTED  shift, and go to state 162
    PRIVATE    shift, and go to state 163
    READONLY   shift, and go to state 164
    FUNC       shift, and go to state 2

    function_declaration     go to state 165
    property_modifier        go to state 166
    visibility               go to state 167
    class_member             go to state 168
    class_visibility_member  go to state 285
    class_declaration        go to state 172


State 235

  165 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt . '}'

    '}'  shift, and go to state 286


State 236

   61 do_while_stmt: DO endl_opt stmt endl_opt . WHILE endl_opt '(' endl_opt expr endl_opt ')'

    WHILE  shift, and go to state 287


State 237

   62 do_while_stmt: DO endl_opt empty_stmt endl_opt . WHILE endl_opt '(' endl_opt expr endl_opt ')'

    WHILE  shift, and go to state 288


State 238

   56 if_stmt: IF endl_opt '(' endl_opt . if_expr endl_opt ')' endl_opt block_statement
   57        | IF endl_opt '(' endl_opt . if_expr endl_opt ')' endl_opt if_expr
   58        | IF endl_opt '(' endl_opt . if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 289


State 239

   63 for_stmt: FOR endl_opt '(' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt
   64         | FOR endl_opt '(' endl_opt . if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 290
    if_expr  go to state 291


State 240

   59 while_stmt: WHILE endl_opt '(' endl_opt . if_expr endl_opt ')' endl_opt stmt
   60           | WHILE endl_opt '(' endl_opt . if_expr endl_opt ')' endl_opt empty_stmt

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 292


State 241

   65 switch_stmt: SWITCH endl_opt '(' endl_opt . expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 293
    if_expr  go to state 87


State 242

   77 try_catch_block: TRY endl_opt block_statement endl_opt . catch_clause

    CATCH  shift, and go to state 294

    catch_clause  go to state 295


State 243

  168 enum_declaration: ENUM endl_opt ID endl_opt . '{' endl_opt id_list endl_opt '}'

    '{'  shift, and go to state 296


State 244

   20 expr: ID AS endl_opt type .

    $default  reduce using rule 20 (expr)


State 245

   12 expr_list: expr_list endl_opt . ',' endl_opt expr

    ','  shift, and go to state 297


State 246

   31 if_expr: ID '(' expr_list_opt ')' .

    $default  reduce using rule 31 (if_expr)


State 247

   28 if_expr: '(' endl_opt if_expr endl_opt . ')'
   29        | if_expr endl_opt . '.' endl_opt ID
   30        | if_expr endl_opt . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   53        | if_expr endl_opt . '[' endl_opt expr_list endl_opt ']'
   54        | if_expr endl_opt . dimensions_expr

    '['  shift, and go to state 221
    '.'  shift, and go to state 222
    ')'  shift, and go to state 298

    dimensions_expr  go to state 223


State 248

   55 block_statement: '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 55 (block_statement)


State 249

   83 stmt_list_opt: stmt_list endl_opt .

    $default  reduce using rule 83 (stmt_list_opt)


State 250

   86 stmt_list: stmt_list stmt .

    $default  reduce using rule 86 (stmt_list)


State 251

   87 stmt_list: stmt_list empty_stmt .

    $default  reduce using rule 87 (stmt_list)


State 252

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   43        | if_expr '=' endl_opt if_expr .
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '?'               shift, and go to state 138
    OR                shift, and go to state 139
    AND               shift, and go to state 140
    '<'               shift, and go to state 141
    '>'               shift, and go to state 142
    GREATER_OR_EQUAL  shift, and go to state 143
    LESS_OR_EQUAL     shift, and go to state 144
    NOT_EQUALS        shift, and go to state 145
    EQUALS            shift, and go to state 146
    '+'               shift, and go to state 147
    '-'               shift, and go to state 148
    '*'               shift, and go to state 149
    '/'               shift, and go to state 150
    '%'               shift, and go to state 151

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 43 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 43 (if_expr)]
    $default  reduce using rule 43 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 253

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   48        | if_expr MOD_ASSIGN endl_opt if_expr .
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '?'               shift, and go to state 138
    OR                shift, and go to state 139
    AND               shift, and go to state 140
    '<'               shift, and go to state 141
    '>'               shift, and go to state 142
    GREATER_OR_EQUAL  shift, and go to state 143
    LESS_OR_EQUAL     shift, and go to state 144
    NOT_EQUALS        shift, and go to state 145
    EQUALS            shift, and go to state 146
    '+'               shift, and go to state 147
    '-'               shift, and go to state 148
    '*'               shift, and go to state 149
    '/'               shift, and go to state 150
    '%'               shift, and go to state 151

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 48 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 48 (if_expr)]
    $default  reduce using rule 48 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 254

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr DIV_ASSIGN endl_opt if_expr .
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '?'               shift, and go to state 138
    OR                shift, and go to state 139
    AND               shift, and go to state 140
    '<'               shift, and go to state 141
    '>'               shift, and go to state 142
    GREATER_OR_EQUAL  shift, and go to state 143
    LESS_OR_EQUAL     shift, and go to state 144
    NOT_EQUALS        shift, and go to state 145
    EQUALS            shift, and go to state 146
    '+'               shift, and go to state 147
    '-'               shift, and go to state 148
    '*'               shift, and go to state 149
    '/'               shift, and go to state 150
    '%'               shift, and go to state 151

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 47 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 47 (if_expr)]
    $default  reduce using rule 47 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 255

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr MUL_ASSIGN endl_opt if_expr .
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '?'               shift, and go to state 138
    OR                shift, and go to state 139
    AND               shift, and go to state 140
    '<'               shift, and go to state 141
    '>'               shift, and go to state 142
    GREATER_OR_EQUAL  shift, and go to state 143
    LESS_OR_EQUAL     shift, and go to state 144
    NOT_EQUALS        shift, and go to state 145
    EQUALS            shift, and go to state 146
    '+'               shift, and go to state 147
    '-'               shift, and go to state 148
    '*'               shift, and go to state 149
    '/'               shift, and go to state 150
    '%'               shift, and go to state 151

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 46 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 46 (if_expr)]
    $default  reduce using rule 46 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 256

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr MINUS_ASSIGN endl_opt if_expr .
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '?'               shift, and go to state 138
    OR                shift, and go to state 139
    AND               shift, and go to state 140
    '<'               shift, and go to state 141
    '>'               shift, and go to state 142
    GREATER_OR_EQUAL  shift, and go to state 143
    LESS_OR_EQUAL     shift, and go to state 144
    NOT_EQUALS        shift, and go to state 145
    EQUALS            shift, and go to state 146
    '+'               shift, and go to state 147
    '-'               shift, and go to state 148
    '*'               shift, and go to state 149
    '/'               shift, and go to state 150
    '%'               shift, and go to state 151

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 45 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 45 (if_expr)]
    $default  reduce using rule 45 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 257

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr PLUS_ASSIGN endl_opt if_expr .
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '?'               shift, and go to state 138
    OR                shift, and go to state 139
    AND               shift, and go to state 140
    '<'               shift, and go to state 141
    '>'               shift, and go to state 142
    GREATER_OR_EQUAL  shift, and go to state 143
    LESS_OR_EQUAL     shift, and go to state 144
    NOT_EQUALS        shift, and go to state 145
    EQUALS            shift, and go to state 146
    '+'               shift, and go to state 147
    '-'               shift, and go to state 148
    '*'               shift, and go to state 149
    '/'               shift, and go to state 150
    '%'               shift, and go to state 151

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 44 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 44 (if_expr)]
    $default  reduce using rule 44 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 258

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   52        | if_expr '?' endl_opt if_expr . endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    ENDL              shift, and go to state 8
    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '?'               shift, and go to state 138
    OR                shift, and go to state 139
    AND               shift, and go to state 140
    '<'               shift, and go to state 141
    '>'               shift, and go to state 142
    GREATER_OR_EQUAL  shift, and go to state 143
    LESS_OR_EQUAL     shift, and go to state 144
    NOT_EQUALS        shift, and go to state 145
    EQUALS            shift, and go to state 146
    '+'               shift, and go to state 147
    '-'               shift, and go to state 148
    '*'               shift, and go to state 149
    '/'               shift, and go to state 150
    '%'               shift, and go to state 151

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 299


State 259

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   51        | if_expr OR endl_opt if_expr .
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    AND               shift, and go to state 140
    '<'               shift, and go to state 141
    '>'               shift, and go to state 142
    GREATER_OR_EQUAL  shift, and go to state 143
    LESS_OR_EQUAL     shift, and go to state 144
    NOT_EQUALS        shift, and go to state 145
    EQUALS            shift, and go to state 146
    '+'               shift, and go to state 147
    '-'               shift, and go to state 148
    '*'               shift, and go to state 149
    '/'               shift, and go to state 150
    '%'               shift, and go to state 151

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 51 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 51 (if_expr)]
    $default  reduce using rule 51 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 260

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   50        | if_expr AND endl_opt if_expr .
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '<'               shift, and go to state 141
    '>'               shift, and go to state 142
    GREATER_OR_EQUAL  shift, and go to state 143
    LESS_OR_EQUAL     shift, and go to state 144
    NOT_EQUALS        shift, and go to state 145
    EQUALS            shift, and go to state 146
    '+'               shift, and go to state 147
    '-'               shift, and go to state 148
    '*'               shift, and go to state 149
    '/'               shift, and go to state 150
    '%'               shift, and go to state 151

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 50 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 50 (if_expr)]
    $default  reduce using rule 50 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 261

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   37        | if_expr '<' endl_opt if_expr .
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '+'  shift, and go to state 147
    '-'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150
    '%'  shift, and go to state 151

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 37 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 37 (if_expr)]
    $default  reduce using rule 37 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 262

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   38        | if_expr '>' endl_opt if_expr .
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '+'  shift, and go to state 147
    '-'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150
    '%'  shift, and go to state 151

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 38 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 38 (if_expr)]
    $default  reduce using rule 38 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 263

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr GREATER_OR_EQUAL endl_opt if_expr .
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '+'  shift, and go to state 147
    '-'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150
    '%'  shift, and go to state 151

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 40 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 40 (if_expr)]
    $default  reduce using rule 40 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 264

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr LESS_OR_EQUAL endl_opt if_expr .
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '+'  shift, and go to state 147
    '-'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150
    '%'  shift, and go to state 151

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 39 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 39 (if_expr)]
    $default  reduce using rule 39 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 265

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr NOT_EQUALS endl_opt if_expr .
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '+'  shift, and go to state 147
    '-'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150
    '%'  shift, and go to state 151

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 42 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 42 (if_expr)]
    $default  reduce using rule 42 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 266

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr EQUALS endl_opt if_expr .
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '+'  shift, and go to state 147
    '-'  shift, and go to state 148
    '*'  shift, and go to state 149
    '/'  shift, and go to state 150
    '%'  shift, and go to state 151

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 41 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 41 (if_expr)]
    $default  reduce using rule 41 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 267

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   32        | if_expr '+' endl_opt if_expr .
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '*'  shift, and go to state 149
    '/'  shift, and go to state 150
    '%'  shift, and go to state 151

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 32 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 32 (if_expr)]
    $default  reduce using rule 32 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 268

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   33        | if_expr '-' endl_opt if_expr .
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '*'  shift, and go to state 149
    '/'  shift, and go to state 150
    '%'  shift, and go to state 151

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 33 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 33 (if_expr)]
    $default  reduce using rule 33 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 269

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   34        | if_expr '*' endl_opt if_expr .
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 34 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 34 (if_expr)]
    $default  reduce using rule 34 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 270

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   35        | if_expr '/' endl_opt if_expr .
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 35 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 35 (if_expr)]
    $default  reduce using rule 35 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 271

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   36        | if_expr '%' endl_opt if_expr .
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 36 (if_expr)]
    '.'       reduce using rule 7 (endl_opt)
    '.'       [reduce using rule 36 (if_expr)]
    $default  reduce using rule 36 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 272

   53 if_expr: if_expr endl_opt '[' endl_opt . expr_list endl_opt ']'
  131 dimensions_expr: '[' endl_opt . expr endl_opt ']'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr_list  go to state 300
    expr       go to state 301
    if_expr    go to state 87


State 273

   29 if_expr: if_expr endl_opt '.' endl_opt . ID
   30        | if_expr endl_opt '.' endl_opt . ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'

    ID  shift, and go to state 302


State 274

  132 dimensions_expr: dimensions_expr endl_opt . '[' endl_opt expr endl_opt ']'

    '['  shift, and go to state 303


State 275

  125 var_declaration: modifier ID endl_opt type_mark . dimensions
  126                | modifier ID endl_opt type_mark . endl_opt '[' endl_opt ']'
  127                | modifier ID endl_opt type_mark . dimensions endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'
  128                | modifier ID endl_opt type_mark . endl_opt '[' endl_opt ']' endl_opt '=' endl_opt '[' expr_list_opt ']'

    ENDL  shift, and go to state 8
    '['   shift, and go to state 304

    '['  [reduce using rule 7 (endl_opt)]

    endl        go to state 9
    endl_opt    go to state 305
    dimensions  go to state 306


State 276

  119 variable: ID endl_opt . type_mark_opt

    ':'  shift, and go to state 37

    $default  reduce using rule 117 (type_mark_opt)

    type_mark      go to state 307
    type_mark_opt  go to state 308


State 277

  121 var_init_opt: endl_opt . '=' endl_opt expr

    '='  shift, and go to state 309


State 278

  122 var_list: variable var_init_opt .

    $default  reduce using rule 122 (var_list)


State 279

  123 var_list: var_list endl_opt . ',' endl_opt variable var_init_opt

    ','  shift, and go to state 310


State 280

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt . '}'

    '}'  shift, and go to state 311


State 281

  156 class_member: property_modifier expr endl_opt . stmt_sep

    ';'   shift, and go to state 129
    ENDL  shift, and go to state 8

    endl      go to state 130
    stmt_sep  go to state 312


State 282

  152 property_modifier: visibility STATIC READONLY .

    $default  reduce using rule 152 (property_modifier)


State 283

  147 property_modifier: visibility .
  148                  | visibility . READONLY
  150                  | visibility . STATIC
  152                  | visibility . STATIC READONLY

    STATIC    shift, and go to state 231
    READONLY  shift, and go to state 232

    $default  reduce using rule 147 (property_modifier)


State 284

  160 class_visibility_member: visibility endl_opt class_member .

    $default  reduce using rule 160 (class_visibility_member)


State 285

  162 class_visibility_member_list: class_visibility_member_list endl_opt class_visibility_member .

    $default  reduce using rule 162 (class_visibility_member_list)


State 286

  165 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}' .

    $default  reduce using rule 165 (class_declaration)


State 287

   61 do_while_stmt: DO endl_opt stmt endl_opt WHILE . endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 313


State 288

   62 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE . endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 314


State 289

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr
   56 if_stmt: IF endl_opt '(' endl_opt if_expr . endl_opt ')' endl_opt block_statement
   57        | IF endl_opt '(' endl_opt if_expr . endl_opt ')' endl_opt if_expr
   58        | IF endl_opt '(' endl_opt if_expr . endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    ENDL              shift, and go to state 8
    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '?'               shift, and go to state 138
    OR                shift, and go to state 139
    AND               shift, and go to state 140
    '<'               shift, and go to state 141
    '>'               shift, and go to state 142
    GREATER_OR_EQUAL  shift, and go to state 143
    LESS_OR_EQUAL     shift, and go to state 144
    NOT_EQUALS        shift, and go to state 145
    EQUALS            shift, and go to state 146
    '+'               shift, and go to state 147
    '-'               shift, and go to state 148
    '*'               shift, and go to state 149
    '/'               shift, and go to state 150
    '%'               shift, and go to state 151

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 315


State 290

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   63 for_stmt: FOR endl_opt '(' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 316


State 291

   15 expr: if_expr .
   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr
   64 for_stmt: FOR endl_opt '(' endl_opt if_expr . endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL              shift, and go to state 8
    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '?'               shift, and go to state 138
    OR                shift, and go to state 139
    AND               shift, and go to state 140
    '<'               shift, and go to state 141
    '>'               shift, and go to state 142
    GREATER_OR_EQUAL  shift, and go to state 143
    LESS_OR_EQUAL     shift, and go to state 144
    NOT_EQUALS        shift, and go to state 145
    EQUALS            shift, and go to state 146
    '+'               shift, and go to state 147
    '-'               shift, and go to state 148
    '*'               shift, and go to state 149
    '/'               shift, and go to state 150
    '%'               shift, and go to state 151

    INCREMENT  reduce using rule 15 (expr)
    DECREMENT  reduce using rule 15 (expr)
    ';'        reduce using rule 7 (endl_opt)
    ';'        [reduce using rule 15 (expr)]
    ENDL       [reduce using rule 15 (expr)]
    $default   reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 317


State 292

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr
   59 while_stmt: WHILE endl_opt '(' endl_opt if_expr . endl_opt ')' endl_opt stmt
   60           | WHILE endl_opt '(' endl_opt if_expr . endl_opt ')' endl_opt empty_stmt

    ENDL              shift, and go to state 8
    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '?'               shift, and go to state 138
    OR                shift, and go to state 139
    AND               shift, and go to state 140
    '<'               shift, and go to state 141
    '>'               shift, and go to state 142
    GREATER_OR_EQUAL  shift, and go to state 143
    LESS_OR_EQUAL     shift, and go to state 144
    NOT_EQUALS        shift, and go to state 145
    EQUALS            shift, and go to state 146
    '+'               shift, and go to state 147
    '-'               shift, and go to state 148
    '*'               shift, and go to state 149
    '/'               shift, and go to state 150
    '%'               shift, and go to state 151

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 318


State 293

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   65 switch_stmt: SWITCH endl_opt '(' endl_opt expr . endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 319


State 294

   78 catch_clause: CATCH . endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement
   79             | CATCH . endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 320


State 295

   77 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause .

    $default  reduce using rule 77 (try_catch_block)


State 296

  168 enum_declaration: ENUM endl_opt ID endl_opt '{' . endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 321


State 297

   12 expr_list: expr_list endl_opt ',' . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 322


State 298

   28 if_expr: '(' endl_opt if_expr endl_opt ')' .

    $default  reduce using rule 28 (if_expr)


State 299

   29 if_expr: if_expr endl_opt . '.' endl_opt ID
   30        | if_expr endl_opt . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   52        | if_expr '?' endl_opt if_expr endl_opt . ':' endl_opt if_expr
   53        | if_expr endl_opt . '[' endl_opt expr_list endl_opt ']'
   54        | if_expr endl_opt . dimensions_expr

    '['  shift, and go to state 221
    '.'  shift, and go to state 222
    ':'  shift, and go to state 323

    dimensions_expr  go to state 223


State 300

   12 expr_list: expr_list . endl_opt ',' endl_opt expr
   53 if_expr: if_expr endl_opt '[' endl_opt expr_list . endl_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 324


State 301

   11 expr_list: expr .
   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
  131 dimensions_expr: '[' endl_opt expr . endl_opt ']'

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    ENDL      [reduce using rule 11 (expr_list)]
    ']'       reduce using rule 7 (endl_opt)
    ']'       [reduce using rule 11 (expr_list)]
    ','       reduce using rule 11 (expr_list)
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 325


State 302

   29 if_expr: if_expr endl_opt '.' endl_opt ID .
   30        | if_expr endl_opt '.' endl_opt ID . endl_opt '(' endl_opt expr_list_opt endl_opt ')'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 29 (if_expr)]
    '('       reduce using rule 7 (endl_opt)
    '('       [reduce using rule 29 (if_expr)]
    $default  reduce using rule 29 (if_expr)

    endl      go to state 9
    endl_opt  go to state 326


State 303

  132 dimensions_expr: dimensions_expr endl_opt '[' . endl_opt expr endl_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 327


State 304

  129 dimensions: '[' . endl_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 328


State 305

  126 var_declaration: modifier ID endl_opt type_mark endl_opt . '[' endl_opt ']'
  128                | modifier ID endl_opt type_mark endl_opt . '[' endl_opt ']' endl_opt '=' endl_opt '[' expr_list_opt ']'

    '['  shift, and go to state 329


State 306

  125 var_declaration: modifier ID endl_opt type_mark dimensions .
  127                | modifier ID endl_opt type_mark dimensions . endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'
  130 dimensions: dimensions . '[' endl_opt ']'

    ENDL  shift, and go to state 8
    '['   shift, and go to state 330

    ';'       reduce using rule 125 (var_declaration)
    ENDL      [reduce using rule 125 (var_declaration)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 331


State 307

  118 type_mark_opt: type_mark .

    $default  reduce using rule 118 (type_mark_opt)


State 308

  119 variable: ID endl_opt type_mark_opt .

    $default  reduce using rule 119 (variable)


State 309

  121 var_init_opt: endl_opt '=' . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 332


State 310

  123 var_list: var_list endl_opt ',' . endl_opt variable var_init_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 333


State 311

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}' .

    $default  reduce using rule 75 (function_declaration)


State 312

  156 class_member: property_modifier expr endl_opt stmt_sep .

    $default  reduce using rule 156 (class_member)


State 313

   61 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt . '(' endl_opt expr endl_opt ')'

    '('  shift, and go to state 334


State 314

   62 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt . '(' endl_opt expr endl_opt ')'

    '('  shift, and go to state 335


State 315

   29 if_expr: if_expr endl_opt . '.' endl_opt ID
   30        | if_expr endl_opt . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   53        | if_expr endl_opt . '[' endl_opt expr_list endl_opt ']'
   54        | if_expr endl_opt . dimensions_expr
   56 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt . ')' endl_opt block_statement
   57        | IF endl_opt '(' endl_opt if_expr endl_opt . ')' endl_opt if_expr
   58        | IF endl_opt '(' endl_opt if_expr endl_opt . ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    '['  shift, and go to state 221
    '.'  shift, and go to state 222
    ')'  shift, and go to state 336

    dimensions_expr  go to state 223


State 316

   63 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 337


State 317

   29 if_expr: if_expr endl_opt . '.' endl_opt ID
   30        | if_expr endl_opt . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   53        | if_expr endl_opt . '[' endl_opt expr_list endl_opt ']'
   54        | if_expr endl_opt . dimensions_expr
   64 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt . ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ';'  shift, and go to state 338
    '['  shift, and go to state 221
    '.'  shift, and go to state 222

    dimensions_expr  go to state 223


State 318

   29 if_expr: if_expr endl_opt . '.' endl_opt ID
   30        | if_expr endl_opt . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   53        | if_expr endl_opt . '[' endl_opt expr_list endl_opt ']'
   54        | if_expr endl_opt . dimensions_expr
   59 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt . ')' endl_opt stmt
   60           | WHILE endl_opt '(' endl_opt if_expr endl_opt . ')' endl_opt empty_stmt

    '['  shift, and go to state 221
    '.'  shift, and go to state 222
    ')'  shift, and go to state 339

    dimensions_expr  go to state 223


State 319

   65 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt . ')' endl_opt '{' endl_opt case_list endl_opt '}'

    ')'  shift, and go to state 340


State 320

   78 catch_clause: CATCH endl_opt . '(' endl_opt ID endl_opt ')' endl_opt block_statement
   79             | CATCH endl_opt . '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    '('  shift, and go to state 341


State 321

  168 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt . id_list endl_opt '}'

    ID  shift, and go to state 342

    id_list  go to state 343


State 322

   12 expr_list: expr_list endl_opt ',' endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 344
    if_expr  go to state 87


State 323

   52 if_expr: if_expr '?' endl_opt if_expr endl_opt ':' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 345


State 324

   12 expr_list: expr_list endl_opt . ',' endl_opt expr
   53 if_expr: if_expr endl_opt '[' endl_opt expr_list endl_opt . ']'

    ']'  shift, and go to state 346
    ','  shift, and go to state 297


State 325

  131 dimensions_expr: '[' endl_opt expr endl_opt . ']'

    ']'  shift, and go to state 347


State 326

   30 if_expr: if_expr endl_opt '.' endl_opt ID endl_opt . '(' endl_opt expr_list_opt endl_opt ')'

    '('  shift, and go to state 348


State 327

  132 dimensions_expr: dimensions_expr endl_opt '[' endl_opt . expr endl_opt ']'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 349
    if_expr  go to state 87


State 328

  129 dimensions: '[' endl_opt . ']'

    ']'  shift, and go to state 350


State 329

  126 var_declaration: modifier ID endl_opt type_mark endl_opt '[' . endl_opt ']'
  128                | modifier ID endl_opt type_mark endl_opt '[' . endl_opt ']' endl_opt '=' endl_opt '[' expr_list_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 351


State 330

  130 dimensions: dimensions '[' . endl_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 352


State 331

  127 var_declaration: modifier ID endl_opt type_mark dimensions endl_opt . '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'

    '='  shift, and go to state 353


State 332

  121 var_init_opt: endl_opt '=' endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 354
    if_expr  go to state 87


State 333

  123 var_list: var_list endl_opt ',' endl_opt . variable var_init_opt

    ID  shift, and go to state 226

    variable  go to state 355


State 334

   61 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' . endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 356


State 335

   62 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' . endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 357


State 336

   56 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' . endl_opt block_statement
   57        | IF endl_opt '(' endl_opt if_expr endl_opt ')' . endl_opt if_expr
   58        | IF endl_opt '(' endl_opt if_expr endl_opt ')' . endl_opt block_statement endl_opt ELSE endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 358


State 337

   63 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 359


State 338

   64 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 360


State 339

   59 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt ')' . endl_opt stmt
   60           | WHILE endl_opt '(' endl_opt if_expr endl_opt ')' . endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 361


State 340

   65 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' . endl_opt '{' endl_opt case_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 362


State 341

   78 catch_clause: CATCH endl_opt '(' . endl_opt ID endl_opt ')' endl_opt block_statement
   79             | CATCH endl_opt '(' . endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 363


State 342

  169 id_list: ID . var_init_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 120 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 120 (var_init_opt)

    endl          go to state 9
    endl_opt      go to state 277
    var_init_opt  go to state 364


State 343

  168 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list . endl_opt '}'
  170 id_list: id_list . endl_opt ',' endl_opt ID var_init_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 365


State 344

   12 expr_list: expr_list endl_opt ',' endl_opt expr .
   16 expr: expr . DECREMENT
   18     | expr . INCREMENT

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    $default  reduce using rule 12 (expr_list)


State 345

   52 if_expr: if_expr '?' endl_opt if_expr endl_opt ':' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 366


State 346

   53 if_expr: if_expr endl_opt '[' endl_opt expr_list endl_opt ']' .

    $default  reduce using rule 53 (if_expr)


State 347

  131 dimensions_expr: '[' endl_opt expr endl_opt ']' .

    $default  reduce using rule 131 (dimensions_expr)


State 348

   30 if_expr: if_expr endl_opt '.' endl_opt ID endl_opt '(' . endl_opt expr_list_opt endl_opt ')'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 367


State 349

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
  132 dimensions_expr: dimensions_expr endl_opt '[' endl_opt expr . endl_opt ']'

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 368


State 350

  129 dimensions: '[' endl_opt ']' .

    $default  reduce using rule 129 (dimensions)


State 351

  126 var_declaration: modifier ID endl_opt type_mark endl_opt '[' endl_opt . ']'
  128                | modifier ID endl_opt type_mark endl_opt '[' endl_opt . ']' endl_opt '=' endl_opt '[' expr_list_opt ']'

    ']'  shift, and go to state 369


State 352

  130 dimensions: dimensions '[' endl_opt . ']'

    ']'  shift, and go to state 370


State 353

  127 var_declaration: modifier ID endl_opt type_mark dimensions endl_opt '=' . endl_opt '[' endl_opt expr_list_opt endl_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 371


State 354

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
  121 var_init_opt: endl_opt '=' endl_opt expr .

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    $default  reduce using rule 121 (var_init_opt)


State 355

  123 var_list: var_list endl_opt ',' endl_opt variable . var_init_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 120 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 120 (var_init_opt)

    endl          go to state 9
    endl_opt      go to state 277
    var_init_opt  go to state 372


State 356

   61 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt . expr endl_opt ')'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 373
    if_expr  go to state 87


State 357

   62 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt . expr endl_opt ')'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 374
    if_expr  go to state 87


State 358

   56 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt . block_statement
   57        | IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt . if_expr
   58        | IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt . block_statement endl_opt ELSE endl_opt block_statement

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    if_expr          go to state 375
    block_statement  go to state 376


State 359

   63 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 377
    if_expr  go to state 87


State 360

   64 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 378
    if_expr  go to state 87


State 361

   59 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt . stmt
   60           | WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt . empty_stmt

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    expr              go to state 86
    if_expr           go to state 87
    block_statement   go to state 88
    if_stmt           go to state 89
    while_stmt        go to state 90
    do_while_stmt     go to state 91
    for_stmt          go to state 92
    switch_stmt       go to state 93
    try_catch_block   go to state 95
    stmt              go to state 379
    empty_stmt        go to state 380
    modifier          go to state 102
    var_declaration   go to state 103
    enum_declaration  go to state 104


State 362

   65 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt . '{' endl_opt case_list endl_opt '}'

    '{'  shift, and go to state 381


State 363

   78 catch_clause: CATCH endl_opt '(' endl_opt . ID endl_opt ')' endl_opt block_statement
   79             | CATCH endl_opt '(' endl_opt . ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ID  shift, and go to state 382


State 364

  169 id_list: ID var_init_opt .

    $default  reduce using rule 169 (id_list)


State 365

  168 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt . '}'
  170 id_list: id_list endl_opt . ',' endl_opt ID var_init_opt

    ','  shift, and go to state 383
    '}'  shift, and go to state 384


State 366

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   52        | if_expr '?' endl_opt if_expr endl_opt ':' endl_opt if_expr .
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr

    ENDL              shift, and go to state 8
    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '?'               shift, and go to state 138
    OR                shift, and go to state 139
    AND               shift, and go to state 140
    '<'               shift, and go to state 141
    '>'               shift, and go to state 142
    GREATER_OR_EQUAL  shift, and go to state 143
    LESS_OR_EQUAL     shift, and go to state 144
    NOT_EQUALS        shift, and go to state 145
    EQUALS            shift, and go to state 146
    '+'               shift, and go to state 147
    '-'               shift, and go to state 148
    '*'               shift, and go to state 149
    '/'               shift, and go to state 150
    '%'               shift, and go to state 151

    ENDL              [reduce using rule 52 (if_expr)]
    '='               [reduce using rule 52 (if_expr)]
    MOD_ASSIGN        [reduce using rule 52 (if_expr)]
    DIV_ASSIGN        [reduce using rule 52 (if_expr)]
    MUL_ASSIGN        [reduce using rule 52 (if_expr)]
    MINUS_ASSIGN      [reduce using rule 52 (if_expr)]
    PLUS_ASSIGN       [reduce using rule 52 (if_expr)]
    '['               reduce using rule 7 (endl_opt)
    '['               [reduce using rule 52 (if_expr)]
    '?'               [reduce using rule 52 (if_expr)]
    OR                [reduce using rule 52 (if_expr)]
    AND               [reduce using rule 52 (if_expr)]
    '<'               [reduce using rule 52 (if_expr)]
    '>'               [reduce using rule 52 (if_expr)]
    GREATER_OR_EQUAL  [reduce using rule 52 (if_expr)]
    LESS_OR_EQUAL     [reduce using rule 52 (if_expr)]
    NOT_EQUALS        [reduce using rule 52 (if_expr)]
    EQUALS            [reduce using rule 52 (if_expr)]
    '+'               [reduce using rule 52 (if_expr)]
    '-'               [reduce using rule 52 (if_expr)]
    '*'               [reduce using rule 52 (if_expr)]
    '/'               [reduce using rule 52 (if_expr)]
    '%'               [reduce using rule 52 (if_expr)]
    '.'               reduce using rule 7 (endl_opt)
    '.'               [reduce using rule 52 (if_expr)]
    $default          reduce using rule 52 (if_expr)

    endl      go to state 9
    endl_opt  go to state 152


State 367

   30 if_expr: if_expr endl_opt '.' endl_opt ID endl_opt '(' endl_opt . expr_list_opt endl_opt ')'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 189
    expr_list_opt  go to state 385
    expr           go to state 191
    if_expr        go to state 87


State 368

  132 dimensions_expr: dimensions_expr endl_opt '[' endl_opt expr endl_opt . ']'

    ']'  shift, and go to state 386


State 369

  126 var_declaration: modifier ID endl_opt type_mark endl_opt '[' endl_opt ']' .
  128                | modifier ID endl_opt type_mark endl_opt '[' endl_opt ']' . endl_opt '=' endl_opt '[' expr_list_opt ']'

    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 126 (var_declaration)

    endl      go to state 9
    endl_opt  go to state 387


State 370

  130 dimensions: dimensions '[' endl_opt ']' .

    $default  reduce using rule 130 (dimensions)


State 371

  127 var_declaration: modifier ID endl_opt type_mark dimensions endl_opt '=' endl_opt . '[' endl_opt expr_list_opt endl_opt ']'

    '['  shift, and go to state 388


State 372

  123 var_list: var_list endl_opt ',' endl_opt variable var_init_opt .

    $default  reduce using rule 123 (var_list)


State 373

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   61 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr . endl_opt ')'

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 389


State 374

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   62 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr . endl_opt ')'

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 390


State 375

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr
   57 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt if_expr .

    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '?'               shift, and go to state 138
    OR                shift, and go to state 139
    AND               shift, and go to state 140
    '<'               shift, and go to state 141
    '>'               shift, and go to state 142
    GREATER_OR_EQUAL  shift, and go to state 143
    LESS_OR_EQUAL     shift, and go to state 144
    NOT_EQUALS        shift, and go to state 145
    EQUALS            shift, and go to state 146
    '*'               shift, and go to state 149
    '/'               shift, and go to state 150
    '%'               shift, and go to state 151

    '['       reduce using rule 7 (endl_opt)
    '.'       reduce using rule 7 (endl_opt)
    $default  reduce using rule 57 (if_stmt)

    endl      go to state 9
    endl_opt  go to state 152


State 376

   56 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement .
   58        | IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement . endl_opt ELSE endl_opt block_statement

    ELSE      reduce using rule 7 (endl_opt)
    $default  reduce using rule 56 (if_stmt)

    endl      go to state 9
    endl_opt  go to state 391


State 377

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   63 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 392


State 378

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   64 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 393


State 379

   59 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 59 (while_stmt)


State 380

   60 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt empty_stmt .

    $default  reduce using rule 60 (while_stmt)


State 381

   65 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' . endl_opt case_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 394


State 382

   78 catch_clause: CATCH endl_opt '(' endl_opt ID . endl_opt ')' endl_opt block_statement
   79             | CATCH endl_opt '(' endl_opt ID . endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 395


State 383

  170 id_list: id_list endl_opt ',' . endl_opt ID var_init_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 396


State 384

  168 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}' .

    $default  reduce using rule 168 (enum_declaration)


State 385

   30 if_expr: if_expr endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt . endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 397


State 386

  132 dimensions_expr: dimensions_expr endl_opt '[' endl_opt expr endl_opt ']' .

    $default  reduce using rule 132 (dimensions_expr)


State 387

  128 var_declaration: modifier ID endl_opt type_mark endl_opt '[' endl_opt ']' endl_opt . '=' endl_opt '[' expr_list_opt ']'

    '='  shift, and go to state 398


State 388

  127 var_declaration: modifier ID endl_opt type_mark dimensions endl_opt '=' endl_opt '[' . endl_opt expr_list_opt endl_opt ']'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 399


State 389

   61 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt . ')'

    ')'  shift, and go to state 400


State 390

   62 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt . ')'

    ')'  shift, and go to state 401


State 391

   58 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt . ELSE endl_opt block_statement

    ELSE  shift, and go to state 402


State 392

   63 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 403


State 393

   64 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ';'  shift, and go to state 404


State 394

   65 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt . case_list endl_opt '}'

    DEFAULT  shift, and go to state 405
    CASE     shift, and go to state 406

    case_list  go to state 407
    case_stmt  go to state 408


State 395

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt . ')' endl_opt block_statement
   79             | CATCH endl_opt '(' endl_opt ID endl_opt . ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ')'  shift, and go to state 409
    ':'  shift, and go to state 410


State 396

  170 id_list: id_list endl_opt ',' endl_opt . ID var_init_opt

    ID  shift, and go to state 411


State 397

   30 if_expr: if_expr endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt . ')'

    ')'  shift, and go to state 412


State 398

  128 var_declaration: modifier ID endl_opt type_mark endl_opt '[' endl_opt ']' endl_opt '=' . endl_opt '[' expr_list_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 413


State 399

  127 var_declaration: modifier ID endl_opt type_mark dimensions endl_opt '=' endl_opt '[' endl_opt . expr_list_opt endl_opt ']'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 189
    expr_list_opt  go to state 414
    expr           go to state 191
    if_expr        go to state 87


State 400

   61 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')' .

    $default  reduce using rule 61 (do_while_stmt)


State 401

   62 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')' .

    $default  reduce using rule 62 (do_while_stmt)


State 402

   58 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE . endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 415


State 403

   63 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' . endl_opt if_expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 416


State 404

   64 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 417


State 405

   70 case_stmt: DEFAULT . endl_opt ':' endl_opt stmt endl_opt break_opt
   71          | DEFAULT . endl_opt ':' endl_opt empty_stmt endl_opt break_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 418


State 406

   68 case_stmt: CASE . endl_opt expr endl_opt ':' endl_opt stmt endl_opt break_opt
   69          | CASE . endl_opt expr endl_opt ':' endl_opt empty_stmt endl_opt break_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 419


State 407

   65 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list . endl_opt '}'
   67 case_list: case_list . case_stmt

    DEFAULT  shift, and go to state 405
    CASE     shift, and go to state 406
    ENDL     shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl       go to state 9
    endl_opt   go to state 420
    case_stmt  go to state 421


State 408

   66 case_list: case_stmt .

    $default  reduce using rule 66 (case_list)


State 409

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' . endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 422


State 410

   79 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' . endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 423


State 411

  170 id_list: id_list endl_opt ',' endl_opt ID . var_init_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 120 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 120 (var_init_opt)

    endl          go to state 9
    endl_opt      go to state 277
    var_init_opt  go to state 424


State 412

   30 if_expr: if_expr endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')' .

    $default  reduce using rule 30 (if_expr)


State 413

  128 var_declaration: modifier ID endl_opt type_mark endl_opt '[' endl_opt ']' endl_opt '=' endl_opt . '[' expr_list_opt ']'

    '['  shift, and go to state 425


State 414

  127 var_declaration: modifier ID endl_opt type_mark dimensions endl_opt '=' endl_opt '[' endl_opt expr_list_opt . endl_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 426


State 415

   58 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt . block_statement

    '{'  shift, and go to state 85

    block_statement  go to state 427


State 416

   63 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt . if_expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 194
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 428


State 417

   64 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ')' endl_opt empty_stmt

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 429
    if_expr  go to state 87


State 418

   70 case_stmt: DEFAULT endl_opt . ':' endl_opt stmt endl_opt break_opt
   71          | DEFAULT endl_opt . ':' endl_opt empty_stmt endl_opt break_opt

    ':'  shift, and go to state 430


State 419

   68 case_stmt: CASE endl_opt . expr endl_opt ':' endl_opt stmt endl_opt break_opt
   69          | CASE endl_opt . expr endl_opt ':' endl_opt empty_stmt endl_opt break_opt

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 431
    if_expr  go to state 87


State 420

   65 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt . '}'

    '}'  shift, and go to state 432


State 421

   67 case_list: case_list case_stmt .

    $default  reduce using rule 67 (case_list)


State 422

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt . block_statement

    '{'  shift, and go to state 85

    block_statement  go to state 433


State 423

   79 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt . error_type endl_opt ')' endl_opt block_statement

    UNKNOWN  shift, and go to state 434
    ANY      shift, and go to state 435

    error_type  go to state 436


State 424

  170 id_list: id_list endl_opt ',' endl_opt ID var_init_opt .

    $default  reduce using rule 170 (id_list)


State 425

  128 var_declaration: modifier ID endl_opt type_mark endl_opt '[' endl_opt ']' endl_opt '=' endl_opt '[' . expr_list_opt ']'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 189
    expr_list_opt  go to state 437
    expr           go to state 191
    if_expr        go to state 87


State 426

  127 var_declaration: modifier ID endl_opt type_mark dimensions endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt . ']'

    ']'  shift, and go to state 438


State 427

   58 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement .

    $default  reduce using rule 58 (if_stmt)


State 428

   29 if_expr: if_expr . endl_opt '.' endl_opt ID
   30        | if_expr . endl_opt '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . endl_opt '[' endl_opt expr_list endl_opt ']'
   54        | if_expr . endl_opt dimensions_expr
   63 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr . endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 8
    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '?'               shift, and go to state 138
    OR                shift, and go to state 139
    AND               shift, and go to state 140
    '<'               shift, and go to state 141
    '>'               shift, and go to state 142
    GREATER_OR_EQUAL  shift, and go to state 143
    LESS_OR_EQUAL     shift, and go to state 144
    NOT_EQUALS        shift, and go to state 145
    EQUALS            shift, and go to state 146
    '+'               shift, and go to state 147
    '-'               shift, and go to state 148
    '*'               shift, and go to state 149
    '/'               shift, and go to state 150
    '%'               shift, and go to state 151

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 439


State 429

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   64 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ')' endl_opt empty_stmt

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 440


State 430

   70 case_stmt: DEFAULT endl_opt ':' . endl_opt stmt endl_opt break_opt
   71          | DEFAULT endl_opt ':' . endl_opt empty_stmt endl_opt break_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 441


State 431

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   68 case_stmt: CASE endl_opt expr . endl_opt ':' endl_opt stmt endl_opt break_opt
   69          | CASE endl_opt expr . endl_opt ':' endl_opt empty_stmt endl_opt break_opt

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 442


State 432

   65 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}' .

    $default  reduce using rule 65 (switch_stmt)


State 433

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement .

    $default  reduce using rule 78 (catch_clause)


State 434

   80 error_type: UNKNOWN .

    $default  reduce using rule 80 (error_type)


State 435

   81 error_type: ANY .

    $default  reduce using rule 81 (error_type)


State 436

   79 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type . endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 443


State 437

  128 var_declaration: modifier ID endl_opt type_mark endl_opt '[' endl_opt ']' endl_opt '=' endl_opt '[' expr_list_opt . ']'

    ']'  shift, and go to state 444


State 438

  127 var_declaration: modifier ID endl_opt type_mark dimensions endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']' .

    $default  reduce using rule 127 (var_declaration)


State 439

   29 if_expr: if_expr endl_opt . '.' endl_opt ID
   30        | if_expr endl_opt . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   53        | if_expr endl_opt . '[' endl_opt expr_list endl_opt ']'
   54        | if_expr endl_opt . dimensions_expr
   63 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt . ')' endl_opt stmt

    '['  shift, and go to state 221
    '.'  shift, and go to state 222
    ')'  shift, and go to state 445

    dimensions_expr  go to state 223


State 440

   64 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ')' endl_opt empty_stmt

    ')'  shift, and go to state 446


State 441

   70 case_stmt: DEFAULT endl_opt ':' endl_opt . stmt endl_opt break_opt
   71          | DEFAULT endl_opt ':' endl_opt . empty_stmt endl_opt break_opt

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    expr              go to state 86
    if_expr           go to state 87
    block_statement   go to state 88
    if_stmt           go to state 89
    while_stmt        go to state 90
    do_while_stmt     go to state 91
    for_stmt          go to state 92
    switch_stmt       go to state 93
    try_catch_block   go to state 95
    stmt              go to state 447
    empty_stmt        go to state 448
    modifier          go to state 102
    var_declaration   go to state 103
    enum_declaration  go to state 104


State 442

   68 case_stmt: CASE endl_opt expr endl_opt . ':' endl_opt stmt endl_opt break_opt
   69          | CASE endl_opt expr endl_opt . ':' endl_opt empty_stmt endl_opt break_opt

    ':'  shift, and go to state 449


State 443

   79 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt . ')' endl_opt block_statement

    ')'  shift, and go to state 450


State 444

  128 var_declaration: modifier ID endl_opt type_mark endl_opt '[' endl_opt ']' endl_opt '=' endl_opt '[' expr_list_opt ']' .

    $default  reduce using rule 128 (var_declaration)


State 445

   63 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' . endl_opt stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 451


State 446

   64 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' . endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 452


State 447

   70 case_stmt: DEFAULT endl_opt ':' endl_opt stmt . endl_opt break_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 453


State 448

   71 case_stmt: DEFAULT endl_opt ':' endl_opt empty_stmt . endl_opt break_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 454


State 449

   68 case_stmt: CASE endl_opt expr endl_opt ':' . endl_opt stmt endl_opt break_opt
   69          | CASE endl_opt expr endl_opt ':' . endl_opt empty_stmt endl_opt break_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 455


State 450

   79 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' . endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 456


State 451

   63 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt . stmt

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    expr              go to state 86
    if_expr           go to state 87
    block_statement   go to state 88
    if_stmt           go to state 89
    while_stmt        go to state 90
    do_while_stmt     go to state 91
    for_stmt          go to state 92
    switch_stmt       go to state 93
    try_catch_block   go to state 95
    stmt              go to state 457
    modifier          go to state 102
    var_declaration   go to state 103
    enum_declaration  go to state 104


State 452

   64 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt . empty_stmt

    ';'  shift, and go to state 80

    empty_stmt  go to state 458


State 453

   70 case_stmt: DEFAULT endl_opt ':' endl_opt stmt endl_opt . break_opt

    BREAK  shift, and go to state 459

    $default  reduce using rule 72 (break_opt)

    break_opt  go to state 460


State 454

   71 case_stmt: DEFAULT endl_opt ':' endl_opt empty_stmt endl_opt . break_opt

    BREAK  shift, and go to state 459

    $default  reduce using rule 72 (break_opt)

    break_opt  go to state 461


State 455

   68 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt . stmt endl_opt break_opt
   69          | CASE endl_opt expr endl_opt ':' endl_opt . empty_stmt endl_opt break_opt

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    expr              go to state 86
    if_expr           go to state 87
    block_statement   go to state 88
    if_stmt           go to state 89
    while_stmt        go to state 90
    do_while_stmt     go to state 91
    for_stmt          go to state 92
    switch_stmt       go to state 93
    try_catch_block   go to state 95
    stmt              go to state 462
    empty_stmt        go to state 463
    modifier          go to state 102
    var_declaration   go to state 103
    enum_declaration  go to state 104


State 456

   79 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt . block_statement

    '{'  shift, and go to state 85

    block_statement  go to state 464


State 457

   63 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 63 (for_stmt)


State 458

   64 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt .

    $default  reduce using rule 64 (for_stmt)


State 459

   73 break_opt: BREAK . stmt_sep

    ';'   shift, and go to state 129
    ENDL  shift, and go to state 8

    endl      go to state 130
    stmt_sep  go to state 465


State 460

   70 case_stmt: DEFAULT endl_opt ':' endl_opt stmt endl_opt break_opt .

    $default  reduce using rule 70 (case_stmt)


State 461

   71 case_stmt: DEFAULT endl_opt ':' endl_opt empty_stmt endl_opt break_opt .

    $default  reduce using rule 71 (case_stmt)


State 462

   68 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt . endl_opt break_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 466


State 463

   69 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt empty_stmt . endl_opt break_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 467


State 464

   79 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement .

    $default  reduce using rule 79 (catch_clause)


State 465

   73 break_opt: BREAK stmt_sep .

    $default  reduce using rule 73 (break_opt)


State 466

   68 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt endl_opt . break_opt

    BREAK  shift, and go to state 459

    $default  reduce using rule 72 (break_opt)

    break_opt  go to state 468


State 467

   69 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt empty_stmt endl_opt . break_opt

    BREAK  shift, and go to state 459

    $default  reduce using rule 72 (break_opt)

    break_opt  go to state 469


State 468

   68 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt endl_opt break_opt .

    $default  reduce using rule 68 (case_stmt)


State 469

   69 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt empty_stmt endl_opt break_opt .

    $default  reduce using rule 69 (case_stmt)
