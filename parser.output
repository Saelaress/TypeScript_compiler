Terminals unused in grammar

   INTERFACE
   CONSTRUCTOR
   NEW
   THIS
   DELETE
   EXPORT
   OF
   IN
   CONTINUE
   DECLARE
   CONSOLE
   IS
   PREF_DECREMENT
   PREF_INCREMENT
   POST_DECREMENT
   POST_INCREMENT


State 7 conflicts: 1 shift/reduce
State 9 conflicts: 1 shift/reduce
State 16 conflicts: 1 shift/reduce
State 21 conflicts: 1 shift/reduce
State 32 conflicts: 1 shift/reduce
State 38 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce
State 103 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce
State 125 conflicts: 1 shift/reduce
State 134 conflicts: 1 shift/reduce
State 157 conflicts: 1 shift/reduce
State 172 conflicts: 2 shift/reduce
State 175 conflicts: 1 shift/reduce
State 190 conflicts: 2 shift/reduce
State 191 conflicts: 2 shift/reduce
State 195 conflicts: 1 shift/reduce
State 199 conflicts: 2 shift/reduce
State 200 conflicts: 2 shift/reduce
State 201 conflicts: 1 shift/reduce
State 229 conflicts: 1 shift/reduce
State 233 conflicts: 1 shift/reduce
State 234 conflicts: 1 shift/reduce
State 235 conflicts: 1 shift/reduce
State 237 conflicts: 1 shift/reduce
State 283 conflicts: 1 shift/reduce
State 299 conflicts: 1 shift/reduce, 1 reduce/reduce
State 347 conflicts: 1 shift/reduce
State 355 conflicts: 1 shift/reduce
State 366 conflicts: 21 shift/reduce
State 381 conflicts: 1 shift/reduce
State 402 conflicts: 1 shift/reduce
State 433 conflicts: 1 shift/reduce
State 434 conflicts: 1 shift/reduce
State 448 conflicts: 1 shift/reduce
State 449 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_elem
    2        | program program_elem

    3 program_elem: class_list
    4             | function_declaration

    5 endl: ENDL
    6     | endl ENDL

    7 endl_opt: /* empty */
    8         | endl

    9 stmt_sep: ';'
   10         | endl

   11 expr_list: expr
   12          | expr_list endl_opt ',' endl_opt expr

   13 expr_list_opt: /* empty */
   14              | expr_list

   15 expr: if_expr
   16     | expr DECREMENT
   17     | DECREMENT endl_opt expr
   18     | expr INCREMENT
   19     | INCREMENT endl_opt expr
   20     | ID AS endl_opt type
   21     | '-' endl_opt expr
   22     | '+' endl_opt expr

   23 if_expr: NUMBER_LITERAL
   24        | STRING_LITERAL
   25        | TRUE_LITERAL
   26        | FALSE_LITERAL
   27        | ID
   28        | '(' endl_opt if_expr endl_opt ')'
   29        | dot_expr endl_opt dot_method_opt
   30        | ID '(' expr_list_opt ')'
   31        | if_expr '+' endl_opt if_expr
   32        | if_expr '-' endl_opt if_expr
   33        | if_expr '*' endl_opt if_expr
   34        | if_expr '/' endl_opt if_expr
   35        | if_expr '%' endl_opt if_expr
   36        | if_expr '<' endl_opt if_expr
   37        | if_expr '>' endl_opt if_expr
   38        | if_expr LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr EQUALS endl_opt if_expr
   41        | if_expr NOT_EQUALS endl_opt if_expr
   42        | if_expr '=' endl_opt if_expr
   43        | if_expr PLUS_ASSIGN endl_opt if_expr
   44        | if_expr MINUS_ASSIGN endl_opt if_expr
   45        | if_expr MUL_ASSIGN endl_opt if_expr
   46        | if_expr DIV_ASSIGN endl_opt if_expr
   47        | if_expr MOD_ASSIGN endl_opt if_expr
   48        | NOT endl_opt if_expr
   49        | if_expr AND endl_opt if_expr
   50        | if_expr OR endl_opt if_expr
   51        | if_expr '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   52        | ID dimensions_expr_list

   53 dot_expr: if_expr '.' endl_opt ID

   54 dot_method_opt: /* empty */
   55               | '(' endl_opt expr_list_opt endl_opt ')'

   56 block_statement: '{' endl_opt stmt_list_opt '}'

   57 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement
   58        | IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt if_expr
   59        | IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

   60 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt stmt
   61           | WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt empty_stmt

   62 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'
   63              | DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt
   65         | FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

   67 case_list: case_stmt
   68          | case_list case_stmt

   69 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt endl_opt break_opt
   70          | CASE endl_opt expr endl_opt ':' endl_opt empty_stmt endl_opt break_opt
   71          | DEFAULT endl_opt ':' endl_opt stmt endl_opt break_opt
   72          | DEFAULT endl_opt ':' endl_opt empty_stmt endl_opt break_opt

   73 break_opt: /* empty */
   74          | BREAK stmt_sep

   75 return_statement: RETURN expr stmt_sep

   76 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   77                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

   78 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause

   79 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement
   80             | CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

   81 error_type: UNKNOWN
   82           | ANY

   83 stmt_list_opt: /* empty */
   84              | stmt_list endl_opt

   85 stmt_list: stmt
   86          | empty_stmt
   87          | stmt_list stmt
   88          | stmt_list empty_stmt

   89 func_stmt_list_opt: /* empty */
   90                   | func_stmt_list

   91 func_stmt_list: func_elem
   92               | func_stmt_list func_elem

   93 func_elem: func_stmt
   94          | empty_stmt

   95 stmt: expr stmt_sep
   96     | if_stmt
   97     | while_stmt
   98     | for_stmt
   99     | do_while_stmt stmt_sep
  100     | switch_stmt
  101     | try_catch_block
  102     | block_statement
  103     | var_declaration stmt_sep
  104     | enum_declaration

  105 func_stmt: return_statement
  106          | stmt

  107 empty_stmt: ';'

  108 modifier: LET
  109         | CONST

  110 type: NUMBER
  111     | STRING
  112     | BOOLEAN
  113     | ANY
  114     | UNKNOWN
  115     | VOID
  116     | ID

  117 type_mark: ':' endl_opt type

  118 type_mark_opt: /* empty */
  119              | type_mark

  120 variable: ID endl_opt type_mark_opt

  121 var_init_opt: /* empty */
  122             | endl_opt '=' endl_opt expr

  123 var_list: variable var_init_opt
  124         | var_list endl_opt ',' endl_opt variable var_init_opt

  125 var_declaration: modifier endl_opt var_list
  126                | modifier ID endl_opt type_mark endl_opt dimensions_list
  127                | modifier ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'

  128 dimensions: '[' endl_opt ']'

  129 dimensions_list: dimensions
  130                | dimensions_list dimensions

  131 dimensions_expr: '[' endl_opt expr endl_opt ']'

  132 dimensions_expr_list: dimensions_expr
  133                     | dimensions_expr_list endl_opt dimensions_expr

  134 param: ID endl_opt type_mark

  135 optional_param: ID endl_opt '?' endl_opt type_mark

  136 param_list: param
  137           | param_list endl_opt ',' endl_opt param
  138           | optional_param
  139           | param_list endl_opt ',' endl_opt optional_param

  140 param_list_0_or_more: '(' endl_opt param_list endl_opt ')'
  141                     | '(' ')'

  142 extends_decl: /* empty */
  143             | EXTENDS endl_opt ID

  144 implements_decl_opt: /* empty */
  145                    | implements_decl

  146 implements_decl: IMPLEMENTS endl_opt ID
  147                | implements_decl endl_opt ',' endl_opt ID

  148 property_modifier: visibility
  149                  | visibility READONLY
  150                  | READONLY
  151                  | visibility STATIC
  152                  | STATIC
  153                  | visibility STATIC READONLY

  154 visibility: PRIVATE
  155           | PROTECTED
  156           | PUBLIC

  157 class_member: property_modifier expr endl_opt stmt_sep
  158             | function_declaration
  159             | class_declaration

  160 class_visibility_member: class_member
  161                        | visibility endl_opt class_member

  162 class_visibility_member_list: class_visibility_member
  163                             | class_visibility_member_list endl_opt class_visibility_member

  164 class_body: /* empty */
  165           | class_visibility_member_list

  166 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

  167 class_list: class_declaration
  168           | class_list class_declaration

  169 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}'

  170 id_list: ID var_init_opt
  171        | id_list endl_opt ',' endl_opt ID var_init_opt


Terminals, with rules where they appear

$end (0) 0
'%' (37) 35
'(' (40) 28 30 55 57 58 59 60 61 62 63 64 65 66 79 80 140 141
')' (41) 28 30 55 57 58 59 60 61 62 63 64 65 66 79 80 140 141
'*' (42) 33
'+' (43) 22 31
',' (44) 12 124 137 139 147 171
'-' (45) 21 32
'.' (46) 53
'/' (47) 34
':' (58) 51 69 70 71 72 80 117
';' (59) 9 64 65 107
'<' (60) 36
'=' (61) 42 122 127
'>' (62) 37
'?' (63) 51 135
'[' (91) 127 128 131
']' (93) 127 128 131
'{' (123) 56 66 76 77 166 169
'}' (125) 56 66 76 77 166 169
error (256)
INTERFACE (258)
IMPLEMENTS (259) 146
CONSTRUCTOR (260)
NEW (261)
EXTENDS (262) 143
THIS (263)
CLASS (264) 166
STATIC (265) 151 152 153
RETURN (266) 75
DELETE (267)
EXPORT (268)
PUBLIC (269) 156
PROTECTED (270) 155
PRIVATE (271) 154
READONLY (272) 149 150 153
DO (273) 62 63
IF (274) 57 58 59
ELSE (275) 59
FOR (276) 64 65
OF (277)
IN (278)
WHILE (279) 60 61 62 63
BREAK (280) 74
CONTINUE (281)
DEFAULT (282) 71 72
SWITCH (283) 66
CASE (284) 69 70
TRY (285) 78
CATCH (286) 79 80
INCREMENT (287) 18 19
DECREMENT (288) 16 17
LET (289) 108
CONST (290) 109
FUNC (291) 76 77
DECLARE (292)
UNKNOWN (293) 81 114
ANY (294) 82 113
NUMBER (295) 110
STRING (296) 111
VOID (297) 115
BOOLEAN (298) 112
ENUM (299) 169
NUMBER_LITERAL (300) 23
STRING_LITERAL (301) 24
TRUE_LITERAL (302) 25
FALSE_LITERAL (303) 26
ID (304) 20 27 30 52 53 76 77 79 80 116 120 126 127 134 135 143 146
    147 166 169 170 171
CONSOLE (305)
ENDL (306) 5 6
MOD_ASSIGN (307) 47
DIV_ASSIGN (308) 46
MUL_ASSIGN (309) 45
MINUS_ASSIGN (310) 44
PLUS_ASSIGN (311) 43
OR (312) 50
AND (313) 49
AS (314) 20
IS (315)
GREATER_OR_EQUAL (316) 39
LESS_OR_EQUAL (317) 38
NOT_EQUALS (318) 41
EQUALS (319) 40
PREF_DECREMENT (320)
PREF_INCREMENT (321)
POST_DECREMENT (322)
POST_INCREMENT (323)
UMINUS (324)
UPLUS (325)
NOT (326) 48


Nonterminals, with rules where they appear

$accept (91)
    on left: 0
program (92)
    on left: 1 2, on right: 0 2
program_elem (93)
    on left: 3 4, on right: 1 2
endl (94)
    on left: 5 6, on right: 6 8 10
endl_opt (95)
    on left: 7 8, on right: 12 17 19 20 21 22 28 29 31 32 33 34 35
    36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 53 55 56 57 58
    59 60 61 62 63 64 65 66 69 70 71 72 76 77 78 79 80 84 117 120 122
    124 125 126 127 128 131 133 134 135 137 139 140 143 146 147 157
    161 163 166 169 171
stmt_sep (96)
    on left: 9 10, on right: 74 75 95 99 103 157
expr_list (97)
    on left: 11 12, on right: 12 14
expr_list_opt (98)
    on left: 13 14, on right: 30 55 127
expr (99)
    on left: 15 16 17 18 19 20 21 22, on right: 11 12 16 17 18 19 21
    22 62 63 64 65 66 69 70 75 95 122 131 157
if_expr (100)
    on left: 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
    41 42 43 44 45 46 47 48 49 50 51 52, on right: 15 28 31 32 33 34
    35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 53 57 58 59
    60 61 64 65
dot_expr (101)
    on left: 53, on right: 29
dot_method_opt (102)
    on left: 54 55, on right: 29
block_statement (103)
    on left: 56, on right: 57 59 78 79 80 102
if_stmt (104)
    on left: 57 58 59, on right: 96
while_stmt (105)
    on left: 60 61, on right: 97
do_while_stmt (106)
    on left: 62 63, on right: 99
for_stmt (107)
    on left: 64 65, on right: 98
switch_stmt (108)
    on left: 66, on right: 100
case_list (109)
    on left: 67 68, on right: 66 68
case_stmt (110)
    on left: 69 70 71 72, on right: 67 68
break_opt (111)
    on left: 73 74, on right: 69 70 71 72
return_statement (112)
    on left: 75, on right: 105
function_declaration (113)
    on left: 76 77, on right: 4 158
try_catch_block (114)
    on left: 78, on right: 101
catch_clause (115)
    on left: 79 80, on right: 78
error_type (116)
    on left: 81 82, on right: 80
stmt_list_opt (117)
    on left: 83 84, on right: 56
stmt_list (118)
    on left: 85 86 87 88, on right: 84 87 88
func_stmt_list_opt (119)
    on left: 89 90, on right: 76 77
func_stmt_list (120)
    on left: 91 92, on right: 90 92
func_elem (121)
    on left: 93 94, on right: 91 92
stmt (122)
    on left: 95 96 97 98 99 100 101 102 103 104, on right: 60 62 64
    69 71 85 87 106
func_stmt (123)
    on left: 105 106, on right: 93
empty_stmt (124)
    on left: 107, on right: 61 63 65 70 72 86 88 94
modifier (125)
    on left: 108 109, on right: 125 126 127
type (126)
    on left: 110 111 112 113 114 115 116, on right: 20 117
type_mark (127)
    on left: 117, on right: 76 119 126 127 134 135
type_mark_opt (128)
    on left: 118 119, on right: 120
variable (129)
    on left: 120, on right: 123 124
var_init_opt (130)
    on left: 121 122, on right: 123 124 170 171
var_list (131)
    on left: 123 124, on right: 124 125
var_declaration (132)
    on left: 125 126 127, on right: 103
dimensions (133)
    on left: 128, on right: 129 130
dimensions_list (134)
    on left: 129 130, on right: 126 127 130
dimensions_expr (135)
    on left: 131, on right: 132 133
dimensions_expr_list (136)
    on left: 132 133, on right: 52 133
param (137)
    on left: 134, on right: 136 137
optional_param (138)
    on left: 135, on right: 138 139
param_list (139)
    on left: 136 137 138 139, on right: 137 139 140
param_list_0_or_more (140)
    on left: 140 141, on right: 76 77
extends_decl (141)
    on left: 142 143, on right: 166
implements_decl_opt (142)
    on left: 144 145, on right: 166
implements_decl (143)
    on left: 146 147, on right: 145 147
property_modifier (144)
    on left: 148 149 150 151 152 153, on right: 157
visibility (145)
    on left: 154 155 156, on right: 148 149 151 153 161
class_member (146)
    on left: 157 158 159, on right: 160 161
class_visibility_member (147)
    on left: 160 161, on right: 162 163
class_visibility_member_list (148)
    on left: 162 163, on right: 163 165
class_body (149)
    on left: 164 165, on right: 166
class_declaration (150)
    on left: 166, on right: 159 167 168
class_list (151)
    on left: 167 168, on right: 3 168
enum_declaration (152)
    on left: 169, on right: 104
id_list (153)
    on left: 170 171, on right: 169 171


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1
    FUNC   shift, and go to state 2

    program               go to state 3
    program_elem          go to state 4
    function_declaration  go to state 5
    class_declaration     go to state 6
    class_list            go to state 7


State 1

  166 class_declaration: CLASS . endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 10


State 2

   76 function_declaration: FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   77                     | FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 11


State 3

    0 $accept: program . $end
    2 program: program . program_elem

    $end   shift, and go to state 12
    CLASS  shift, and go to state 1
    FUNC   shift, and go to state 2

    program_elem          go to state 13
    function_declaration  go to state 5
    class_declaration     go to state 6
    class_list            go to state 7


State 4

    1 program: program_elem .

    $default  reduce using rule 1 (program)


State 5

    4 program_elem: function_declaration .

    $default  reduce using rule 4 (program_elem)


State 6

  167 class_list: class_declaration .

    $default  reduce using rule 167 (class_list)


State 7

    3 program_elem: class_list .
  168 class_list: class_list . class_declaration

    CLASS  shift, and go to state 1

    CLASS     [reduce using rule 3 (program_elem)]
    $default  reduce using rule 3 (program_elem)

    class_declaration  go to state 14


State 8

    5 endl: ENDL .

    $default  reduce using rule 5 (endl)


State 9

    6 endl: endl . ENDL
    8 endl_opt: endl .

    ENDL  shift, and go to state 15

    ENDL      [reduce using rule 8 (endl_opt)]
    $default  reduce using rule 8 (endl_opt)


State 10

  166 class_declaration: CLASS endl_opt . ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    ID  shift, and go to state 16


State 11

   76 function_declaration: FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   77                     | FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    ID  shift, and go to state 17


State 12

    0 $accept: program $end .

    $default  accept


State 13

    2 program: program program_elem .

    $default  reduce using rule 2 (program)


State 14

  168 class_list: class_list class_declaration .

    $default  reduce using rule 168 (class_list)


State 15

    6 endl: endl ENDL .

    $default  reduce using rule 6 (endl)


State 16

  166 class_declaration: CLASS endl_opt ID . endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 18


State 17

   76 function_declaration: FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   77                     | FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 19


State 18

  166 class_declaration: CLASS endl_opt ID endl_opt . extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    EXTENDS  shift, and go to state 20

    $default  reduce using rule 142 (extends_decl)

    extends_decl  go to state 21


State 19

   76 function_declaration: FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   77                     | FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    '('  shift, and go to state 22

    param_list_0_or_more  go to state 23


State 20

  143 extends_decl: EXTENDS . endl_opt ID

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 24


State 21

  166 class_declaration: CLASS endl_opt ID endl_opt extends_decl . endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 25


State 22

  140 param_list_0_or_more: '(' . endl_opt param_list endl_opt ')'
  141                     | '(' . ')'

    ENDL  shift, and go to state 8
    ')'   shift, and go to state 26

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 27


State 23

   76 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   77                     | FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 28


State 24

  143 extends_decl: EXTENDS endl_opt . ID

    ID  shift, and go to state 29


State 25

  166 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt . implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    IMPLEMENTS  shift, and go to state 30

    $default  reduce using rule 144 (implements_decl_opt)

    implements_decl_opt  go to state 31
    implements_decl      go to state 32


State 26

  141 param_list_0_or_more: '(' ')' .

    $default  reduce using rule 141 (param_list_0_or_more)


State 27

  140 param_list_0_or_more: '(' endl_opt . param_list endl_opt ')'

    ID  shift, and go to state 33

    param           go to state 34
    optional_param  go to state 35
    param_list      go to state 36


State 28

   76 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   77                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . '{' endl_opt func_stmt_list_opt endl_opt '}'

    ':'  shift, and go to state 37
    '{'  shift, and go to state 38

    type_mark  go to state 39


State 29

  143 extends_decl: EXTENDS endl_opt ID .

    $default  reduce using rule 143 (extends_decl)


State 30

  146 implements_decl: IMPLEMENTS . endl_opt ID

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 40


State 31

  166 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt . endl_opt '{' endl_opt class_body endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 41


State 32

  145 implements_decl_opt: implements_decl .
  147 implements_decl: implements_decl . endl_opt ',' endl_opt ID

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 145 (implements_decl_opt)]
    '{'       reduce using rule 145 (implements_decl_opt)
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 42


State 33

  134 param: ID . endl_opt type_mark
  135 optional_param: ID . endl_opt '?' endl_opt type_mark

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 43


State 34

  136 param_list: param .

    $default  reduce using rule 136 (param_list)


State 35

  138 param_list: optional_param .

    $default  reduce using rule 138 (param_list)


State 36

  137 param_list: param_list . endl_opt ',' endl_opt param
  139           | param_list . endl_opt ',' endl_opt optional_param
  140 param_list_0_or_more: '(' endl_opt param_list . endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 44


State 37

  117 type_mark: ':' . endl_opt type

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 45


State 38

   77 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' . endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 46


State 39

   76 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark . endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 47


State 40

  146 implements_decl: IMPLEMENTS endl_opt . ID

    ID  shift, and go to state 48


State 41

  166 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt . '{' endl_opt class_body endl_opt '}'

    '{'  shift, and go to state 49


State 42

  147 implements_decl: implements_decl endl_opt . ',' endl_opt ID

    ','  shift, and go to state 50


State 43

  134 param: ID endl_opt . type_mark
  135 optional_param: ID endl_opt . '?' endl_opt type_mark

    '?'  shift, and go to state 51
    ':'  shift, and go to state 37

    type_mark  go to state 52


State 44

  137 param_list: param_list endl_opt . ',' endl_opt param
  139           | param_list endl_opt . ',' endl_opt optional_param
  140 param_list_0_or_more: '(' endl_opt param_list endl_opt . ')'

    ')'  shift, and go to state 53
    ','  shift, and go to state 54


State 45

  117 type_mark: ':' endl_opt . type

    UNKNOWN  shift, and go to state 55
    ANY      shift, and go to state 56
    NUMBER   shift, and go to state 57
    STRING   shift, and go to state 58
    VOID     shift, and go to state 59
    BOOLEAN  shift, and go to state 60
    ID       shift, and go to state 61

    type  go to state 62


State 46

   77 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt . func_stmt_list_opt endl_opt '}'

    RETURN          shift, and go to state 63
    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    $default  reduce using rule 89 (func_stmt_list_opt)

    expr                go to state 86
    if_expr             go to state 87
    dot_expr            go to state 88
    block_statement     go to state 89
    if_stmt             go to state 90
    while_stmt          go to state 91
    do_while_stmt       go to state 92
    for_stmt            go to state 93
    switch_stmt         go to state 94
    return_statement    go to state 95
    try_catch_block     go to state 96
    func_stmt_list_opt  go to state 97
    func_stmt_list      go to state 98
    func_elem           go to state 99
    stmt                go to state 100
    func_stmt           go to state 101
    empty_stmt          go to state 102
    modifier            go to state 103
    var_declaration     go to state 104
    enum_declaration    go to state 105


State 47

   76 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt . '{' endl_opt func_stmt_list_opt endl_opt '}'

    '{'  shift, and go to state 106


State 48

  146 implements_decl: IMPLEMENTS endl_opt ID .

    $default  reduce using rule 146 (implements_decl)


State 49

  166 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' . endl_opt class_body endl_opt '}'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 107


State 50

  147 implements_decl: implements_decl endl_opt ',' . endl_opt ID

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 108


State 51

  135 optional_param: ID endl_opt '?' . endl_opt type_mark

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 109


State 52

  134 param: ID endl_opt type_mark .

    $default  reduce using rule 134 (param)


State 53

  140 param_list_0_or_more: '(' endl_opt param_list endl_opt ')' .

    $default  reduce using rule 140 (param_list_0_or_more)


State 54

  137 param_list: param_list endl_opt ',' . endl_opt param
  139           | param_list endl_opt ',' . endl_opt optional_param

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 110


State 55

  114 type: UNKNOWN .

    $default  reduce using rule 114 (type)


State 56

  113 type: ANY .

    $default  reduce using rule 113 (type)


State 57

  110 type: NUMBER .

    $default  reduce using rule 110 (type)


State 58

  111 type: STRING .

    $default  reduce using rule 111 (type)


State 59

  115 type: VOID .

    $default  reduce using rule 115 (type)


State 60

  112 type: BOOLEAN .

    $default  reduce using rule 112 (type)


State 61

  116 type: ID .

    $default  reduce using rule 116 (type)


State 62

  117 type_mark: ':' endl_opt type .

    $default  reduce using rule 117 (type_mark)


State 63

   75 return_statement: RETURN . expr stmt_sep

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr      go to state 111
    if_expr   go to state 87
    dot_expr  go to state 88


State 64

   62 do_while_stmt: DO . endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'
   63              | DO . endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 112


State 65

   57 if_stmt: IF . endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement
   58        | IF . endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt if_expr
   59        | IF . endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 113


State 66

   64 for_stmt: FOR . endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt
   65         | FOR . endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 114


State 67

   60 while_stmt: WHILE . endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt stmt
   61           | WHILE . endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 115


State 68

   66 switch_stmt: SWITCH . endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 116


State 69

   78 try_catch_block: TRY . endl_opt block_statement endl_opt catch_clause

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 117


State 70

   19 expr: INCREMENT . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 118


State 71

   17 expr: DECREMENT . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 119


State 72

  108 modifier: LET .

    $default  reduce using rule 108 (modifier)


State 73

  109 modifier: CONST .

    $default  reduce using rule 109 (modifier)


State 74

  169 enum_declaration: ENUM . endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 120


State 75

   23 if_expr: NUMBER_LITERAL .

    $default  reduce using rule 23 (if_expr)


State 76

   24 if_expr: STRING_LITERAL .

    $default  reduce using rule 24 (if_expr)


State 77

   25 if_expr: TRUE_LITERAL .

    $default  reduce using rule 25 (if_expr)


State 78

   26 if_expr: FALSE_LITERAL .

    $default  reduce using rule 26 (if_expr)


State 79

   20 expr: ID . AS endl_opt type
   27 if_expr: ID .
   30        | ID . '(' expr_list_opt ')'
   52        | ID . dimensions_expr_list

    '['  shift, and go to state 121
    AS   shift, and go to state 122
    '('  shift, and go to state 123

    $default  reduce using rule 27 (if_expr)

    dimensions_expr       go to state 124
    dimensions_expr_list  go to state 125


State 80

  107 empty_stmt: ';' .

    $default  reduce using rule 107 (empty_stmt)


State 81

   22 expr: '+' . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 126


State 82

   21 expr: '-' . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 127


State 83

   48 if_expr: NOT . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 128


State 84

   28 if_expr: '(' . endl_opt if_expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 129


State 85

   56 block_statement: '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 130


State 86

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   95 stmt: expr . stmt_sep

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132
    ';'        shift, and go to state 133
    ENDL       shift, and go to state 8

    endl      go to state 134
    stmt_sep  go to state 135


State 87

   15 expr: if_expr .
   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '='               shift, and go to state 136
    MOD_ASSIGN        shift, and go to state 137
    DIV_ASSIGN        shift, and go to state 138
    MUL_ASSIGN        shift, and go to state 139
    MINUS_ASSIGN      shift, and go to state 140
    PLUS_ASSIGN       shift, and go to state 141
    '?'               shift, and go to state 142
    OR                shift, and go to state 143
    AND               shift, and go to state 144
    '<'               shift, and go to state 145
    '>'               shift, and go to state 146
    GREATER_OR_EQUAL  shift, and go to state 147
    LESS_OR_EQUAL     shift, and go to state 148
    NOT_EQUALS        shift, and go to state 149
    EQUALS            shift, and go to state 150
    '+'               shift, and go to state 151
    '-'               shift, and go to state 152
    '*'               shift, and go to state 153
    '/'               shift, and go to state 154
    '%'               shift, and go to state 155
    '.'               shift, and go to state 156

    $default  reduce using rule 15 (expr)


State 88

   29 if_expr: dot_expr . endl_opt dot_method_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 157


State 89

  102 stmt: block_statement .

    $default  reduce using rule 102 (stmt)


State 90

   96 stmt: if_stmt .

    $default  reduce using rule 96 (stmt)


State 91

   97 stmt: while_stmt .

    $default  reduce using rule 97 (stmt)


State 92

   99 stmt: do_while_stmt . stmt_sep

    ';'   shift, and go to state 133
    ENDL  shift, and go to state 8

    endl      go to state 134
    stmt_sep  go to state 158


State 93

   98 stmt: for_stmt .

    $default  reduce using rule 98 (stmt)


State 94

  100 stmt: switch_stmt .

    $default  reduce using rule 100 (stmt)


State 95

  105 func_stmt: return_statement .

    $default  reduce using rule 105 (func_stmt)


State 96

  101 stmt: try_catch_block .

    $default  reduce using rule 101 (stmt)


State 97

   77 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt . endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 159


State 98

   90 func_stmt_list_opt: func_stmt_list .
   92 func_stmt_list: func_stmt_list . func_elem

    RETURN          shift, and go to state 63
    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    $default  reduce using rule 90 (func_stmt_list_opt)

    expr              go to state 86
    if_expr           go to state 87
    dot_expr          go to state 88
    block_statement   go to state 89
    if_stmt           go to state 90
    while_stmt        go to state 91
    do_while_stmt     go to state 92
    for_stmt          go to state 93
    switch_stmt       go to state 94
    return_statement  go to state 95
    try_catch_block   go to state 96
    func_elem         go to state 160
    stmt              go to state 100
    func_stmt         go to state 101
    empty_stmt        go to state 102
    modifier          go to state 103
    var_declaration   go to state 104
    enum_declaration  go to state 105


State 99

   91 func_stmt_list: func_elem .

    $default  reduce using rule 91 (func_stmt_list)


State 100

  106 func_stmt: stmt .

    $default  reduce using rule 106 (func_stmt)


State 101

   93 func_elem: func_stmt .

    $default  reduce using rule 93 (func_elem)


State 102

   94 func_elem: empty_stmt .

    $default  reduce using rule 94 (func_elem)


State 103

  125 var_declaration: modifier . endl_opt var_list
  126                | modifier . ID endl_opt type_mark endl_opt dimensions_list
  127                | modifier . ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'

    ID    shift, and go to state 161
    ENDL  shift, and go to state 8

    ID  [reduce using rule 7 (endl_opt)]

    endl      go to state 9
    endl_opt  go to state 162


State 104

  103 stmt: var_declaration . stmt_sep

    ';'   shift, and go to state 133
    ENDL  shift, and go to state 8

    endl      go to state 134
    stmt_sep  go to state 163


State 105

  104 stmt: enum_declaration .

    $default  reduce using rule 104 (stmt)


State 106

   76 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' . endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 164


State 107

  166 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt . class_body endl_opt '}'

    CLASS      shift, and go to state 1
    STATIC     shift, and go to state 165
    PUBLIC     shift, and go to state 166
    PROTECTED  shift, and go to state 167
    PRIVATE    shift, and go to state 168
    READONLY   shift, and go to state 169
    FUNC       shift, and go to state 2

    $default  reduce using rule 164 (class_body)

    function_declaration          go to state 170
    property_modifier             go to state 171
    visibility                    go to state 172
    class_member                  go to state 173
    class_visibility_member       go to state 174
    class_visibility_member_list  go to state 175
    class_body                    go to state 176
    class_declaration             go to state 177


State 108

  147 implements_decl: implements_decl endl_opt ',' endl_opt . ID

    ID  shift, and go to state 178


State 109

  135 optional_param: ID endl_opt '?' endl_opt . type_mark

    ':'  shift, and go to state 37

    type_mark  go to state 179


State 110

  137 param_list: param_list endl_opt ',' endl_opt . param
  139           | param_list endl_opt ',' endl_opt . optional_param

    ID  shift, and go to state 33

    param           go to state 180
    optional_param  go to state 181


State 111

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   75 return_statement: RETURN expr . stmt_sep

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132
    ';'        shift, and go to state 133
    ENDL       shift, and go to state 8

    endl      go to state 134
    stmt_sep  go to state 182


State 112

   62 do_while_stmt: DO endl_opt . stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'
   63              | DO endl_opt . empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    expr              go to state 86
    if_expr           go to state 87
    dot_expr          go to state 88
    block_statement   go to state 89
    if_stmt           go to state 90
    while_stmt        go to state 91
    do_while_stmt     go to state 92
    for_stmt          go to state 93
    switch_stmt       go to state 94
    try_catch_block   go to state 96
    stmt              go to state 183
    empty_stmt        go to state 184
    modifier          go to state 103
    var_declaration   go to state 104
    enum_declaration  go to state 105


State 113

   57 if_stmt: IF endl_opt . '(' endl_opt if_expr endl_opt ')' endl_opt block_statement
   58        | IF endl_opt . '(' endl_opt if_expr endl_opt ')' endl_opt if_expr
   59        | IF endl_opt . '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    '('  shift, and go to state 185


State 114

   64 for_stmt: FOR endl_opt . '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt
   65         | FOR endl_opt . '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    '('  shift, and go to state 186


State 115

   60 while_stmt: WHILE endl_opt . '(' endl_opt if_expr endl_opt ')' endl_opt stmt
   61           | WHILE endl_opt . '(' endl_opt if_expr endl_opt ')' endl_opt empty_stmt

    '('  shift, and go to state 187


State 116

   66 switch_stmt: SWITCH endl_opt . '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

    '('  shift, and go to state 188


State 117

   78 try_catch_block: TRY endl_opt . block_statement endl_opt catch_clause

    '{'  shift, and go to state 85

    block_statement  go to state 189


State 118

   19 expr: INCREMENT endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr      go to state 190
    if_expr   go to state 87
    dot_expr  go to state 88


State 119

   17 expr: DECREMENT endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr      go to state 191
    if_expr   go to state 87
    dot_expr  go to state 88


State 120

  169 enum_declaration: ENUM endl_opt . ID endl_opt '{' endl_opt id_list endl_opt '}'

    ID  shift, and go to state 192


State 121

  131 dimensions_expr: '[' . endl_opt expr endl_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 193


State 122

   20 expr: ID AS . endl_opt type

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 194


State 123

   30 if_expr: ID '(' . expr_list_opt ')'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 195
    expr_list_opt  go to state 196
    expr           go to state 197
    if_expr        go to state 87
    dot_expr       go to state 88


State 124

  132 dimensions_expr_list: dimensions_expr .

    $default  reduce using rule 132 (dimensions_expr_list)


State 125

   52 if_expr: ID dimensions_expr_list .
  133 dimensions_expr_list: dimensions_expr_list . endl_opt dimensions_expr

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 52 (if_expr)]
    '['       reduce using rule 7 (endl_opt)
    $default  reduce using rule 52 (if_expr)

    endl      go to state 9
    endl_opt  go to state 198


State 126

   22 expr: '+' endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr      go to state 199
    if_expr   go to state 87
    dot_expr  go to state 88


State 127

   21 expr: '-' endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr      go to state 200
    if_expr   go to state 87
    dot_expr  go to state 88


State 128

   48 if_expr: NOT endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 202
    dot_expr  go to state 88


State 129

   28 if_expr: '(' endl_opt . if_expr endl_opt ')'

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 203
    dot_expr  go to state 88


State 130

   56 block_statement: '{' endl_opt . stmt_list_opt '}'

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    $default  reduce using rule 83 (stmt_list_opt)

    expr              go to state 86
    if_expr           go to state 87
    dot_expr          go to state 88
    block_statement   go to state 89
    if_stmt           go to state 90
    while_stmt        go to state 91
    do_while_stmt     go to state 92
    for_stmt          go to state 93
    switch_stmt       go to state 94
    try_catch_block   go to state 96
    stmt_list_opt     go to state 204
    stmt_list         go to state 205
    stmt              go to state 206
    empty_stmt        go to state 207
    modifier          go to state 103
    var_declaration   go to state 104
    enum_declaration  go to state 105


State 131

   18 expr: expr INCREMENT .

    $default  reduce using rule 18 (expr)


State 132

   16 expr: expr DECREMENT .

    $default  reduce using rule 16 (expr)


State 133

    9 stmt_sep: ';' .

    $default  reduce using rule 9 (stmt_sep)


State 134

    6 endl: endl . ENDL
   10 stmt_sep: endl .

    ENDL  shift, and go to state 15

    ENDL      [reduce using rule 10 (stmt_sep)]
    $default  reduce using rule 10 (stmt_sep)


State 135

   95 stmt: expr stmt_sep .

    $default  reduce using rule 95 (stmt)


State 136

   42 if_expr: if_expr '=' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 208


State 137

   47 if_expr: if_expr MOD_ASSIGN . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 209


State 138

   46 if_expr: if_expr DIV_ASSIGN . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 210


State 139

   45 if_expr: if_expr MUL_ASSIGN . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 211


State 140

   44 if_expr: if_expr MINUS_ASSIGN . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 212


State 141

   43 if_expr: if_expr PLUS_ASSIGN . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 213


State 142

   51 if_expr: if_expr '?' . endl_opt if_expr endl_opt ':' endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 214


State 143

   50 if_expr: if_expr OR . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 215


State 144

   49 if_expr: if_expr AND . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 216


State 145

   36 if_expr: if_expr '<' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 217


State 146

   37 if_expr: if_expr '>' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 218


State 147

   39 if_expr: if_expr GREATER_OR_EQUAL . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 219


State 148

   38 if_expr: if_expr LESS_OR_EQUAL . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 220


State 149

   41 if_expr: if_expr NOT_EQUALS . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 221


State 150

   40 if_expr: if_expr EQUALS . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 222


State 151

   31 if_expr: if_expr '+' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 223


State 152

   32 if_expr: if_expr '-' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 224


State 153

   33 if_expr: if_expr '*' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 225


State 154

   34 if_expr: if_expr '/' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 226


State 155

   35 if_expr: if_expr '%' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 227


State 156

   53 dot_expr: if_expr '.' . endl_opt ID

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 228


State 157

   29 if_expr: dot_expr endl_opt . dot_method_opt

    '('  shift, and go to state 229

    '('       [reduce using rule 54 (dot_method_opt)]
    $default  reduce using rule 54 (dot_method_opt)

    dot_method_opt  go to state 230


State 158

   99 stmt: do_while_stmt stmt_sep .

    $default  reduce using rule 99 (stmt)


State 159

   77 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt . '}'

    '}'  shift, and go to state 231


State 160

   92 func_stmt_list: func_stmt_list func_elem .

    $default  reduce using rule 92 (func_stmt_list)


State 161

  126 var_declaration: modifier ID . endl_opt type_mark endl_opt dimensions_list
  127                | modifier ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 232


State 162

  125 var_declaration: modifier endl_opt . var_list

    ID  shift, and go to state 233

    variable  go to state 234
    var_list  go to state 235


State 163

  103 stmt: var_declaration stmt_sep .

    $default  reduce using rule 103 (stmt)


State 164

   76 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt . func_stmt_list_opt endl_opt '}'

    RETURN          shift, and go to state 63
    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    $default  reduce using rule 89 (func_stmt_list_opt)

    expr                go to state 86
    if_expr             go to state 87
    dot_expr            go to state 88
    block_statement     go to state 89
    if_stmt             go to state 90
    while_stmt          go to state 91
    do_while_stmt       go to state 92
    for_stmt            go to state 93
    switch_stmt         go to state 94
    return_statement    go to state 95
    try_catch_block     go to state 96
    func_stmt_list_opt  go to state 236
    func_stmt_list      go to state 98
    func_elem           go to state 99
    stmt                go to state 100
    func_stmt           go to state 101
    empty_stmt          go to state 102
    modifier            go to state 103
    var_declaration     go to state 104
    enum_declaration    go to state 105


State 165

  152 property_modifier: STATIC .

    $default  reduce using rule 152 (property_modifier)


State 166

  156 visibility: PUBLIC .

    $default  reduce using rule 156 (visibility)


State 167

  155 visibility: PROTECTED .

    $default  reduce using rule 155 (visibility)


State 168

  154 visibility: PRIVATE .

    $default  reduce using rule 154 (visibility)


State 169

  150 property_modifier: READONLY .

    $default  reduce using rule 150 (property_modifier)


State 170

  158 class_member: function_declaration .

    $default  reduce using rule 158 (class_member)


State 171

  157 class_member: property_modifier . expr endl_opt stmt_sep

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr      go to state 237
    if_expr   go to state 87
    dot_expr  go to state 88


State 172

  148 property_modifier: visibility .
  149                  | visibility . READONLY
  151                  | visibility . STATIC
  153                  | visibility . STATIC READONLY
  161 class_visibility_member: visibility . endl_opt class_member

    STATIC    shift, and go to state 238
    READONLY  shift, and go to state 239
    ENDL      shift, and go to state 8

    CLASS      reduce using rule 7 (endl_opt)
    STATIC     [reduce using rule 7 (endl_opt)]
    PUBLIC     reduce using rule 7 (endl_opt)
    PROTECTED  reduce using rule 7 (endl_opt)
    PRIVATE    reduce using rule 7 (endl_opt)
    READONLY   [reduce using rule 7 (endl_opt)]
    FUNC       reduce using rule 7 (endl_opt)
    $default   reduce using rule 148 (property_modifier)

    endl      go to state 9
    endl_opt  go to state 240


State 173

  160 class_visibility_member: class_member .

    $default  reduce using rule 160 (class_visibility_member)


State 174

  162 class_visibility_member_list: class_visibility_member .

    $default  reduce using rule 162 (class_visibility_member_list)


State 175

  163 class_visibility_member_list: class_visibility_member_list . endl_opt class_visibility_member
  165 class_body: class_visibility_member_list .

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 165 (class_body)]
    '}'       reduce using rule 165 (class_body)
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 241


State 176

  166 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body . endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 242


State 177

  159 class_member: class_declaration .

    $default  reduce using rule 159 (class_member)


State 178

  147 implements_decl: implements_decl endl_opt ',' endl_opt ID .

    $default  reduce using rule 147 (implements_decl)


State 179

  135 optional_param: ID endl_opt '?' endl_opt type_mark .

    $default  reduce using rule 135 (optional_param)


State 180

  137 param_list: param_list endl_opt ',' endl_opt param .

    $default  reduce using rule 137 (param_list)


State 181

  139 param_list: param_list endl_opt ',' endl_opt optional_param .

    $default  reduce using rule 139 (param_list)


State 182

   75 return_statement: RETURN expr stmt_sep .

    $default  reduce using rule 75 (return_statement)


State 183

   62 do_while_stmt: DO endl_opt stmt . endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 243


State 184

   63 do_while_stmt: DO endl_opt empty_stmt . endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 244


State 185

   57 if_stmt: IF endl_opt '(' . endl_opt if_expr endl_opt ')' endl_opt block_statement
   58        | IF endl_opt '(' . endl_opt if_expr endl_opt ')' endl_opt if_expr
   59        | IF endl_opt '(' . endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 245


State 186

   64 for_stmt: FOR endl_opt '(' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt
   65         | FOR endl_opt '(' . endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 246


State 187

   60 while_stmt: WHILE endl_opt '(' . endl_opt if_expr endl_opt ')' endl_opt stmt
   61           | WHILE endl_opt '(' . endl_opt if_expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 247


State 188

   66 switch_stmt: SWITCH endl_opt '(' . endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 248


State 189

   78 try_catch_block: TRY endl_opt block_statement . endl_opt catch_clause

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 249


State 190

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   19     | INCREMENT endl_opt expr .

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132

    INCREMENT  [reduce using rule 19 (expr)]
    DECREMENT  [reduce using rule 19 (expr)]
    $default   reduce using rule 19 (expr)


State 191

   16 expr: expr . DECREMENT
   17     | DECREMENT endl_opt expr .
   18     | expr . INCREMENT

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132

    INCREMENT  [reduce using rule 17 (expr)]
    DECREMENT  [reduce using rule 17 (expr)]
    $default   reduce using rule 17 (expr)


State 192

  169 enum_declaration: ENUM endl_opt ID . endl_opt '{' endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 250


State 193

  131 dimensions_expr: '[' endl_opt . expr endl_opt ']'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr      go to state 251
    if_expr   go to state 87
    dot_expr  go to state 88


State 194

   20 expr: ID AS endl_opt . type

    UNKNOWN  shift, and go to state 55
    ANY      shift, and go to state 56
    NUMBER   shift, and go to state 57
    STRING   shift, and go to state 58
    VOID     shift, and go to state 59
    BOOLEAN  shift, and go to state 60
    ID       shift, and go to state 61

    type  go to state 252


State 195

   12 expr_list: expr_list . endl_opt ',' endl_opt expr
   14 expr_list_opt: expr_list .

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 14 (expr_list_opt)]
    ','       reduce using rule 7 (endl_opt)
    $default  reduce using rule 14 (expr_list_opt)

    endl      go to state 9
    endl_opt  go to state 253


State 196

   30 if_expr: ID '(' expr_list_opt . ')'

    ')'  shift, and go to state 254


State 197

   11 expr_list: expr .
   16 expr: expr . DECREMENT
   18     | expr . INCREMENT

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132

    $default  reduce using rule 11 (expr_list)


State 198

  133 dimensions_expr_list: dimensions_expr_list endl_opt . dimensions_expr

    '['  shift, and go to state 121

    dimensions_expr  go to state 255


State 199

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   22     | '+' endl_opt expr .

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132

    INCREMENT  [reduce using rule 22 (expr)]
    DECREMENT  [reduce using rule 22 (expr)]
    $default   reduce using rule 22 (expr)


State 200

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   21     | '-' endl_opt expr .

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132

    INCREMENT  [reduce using rule 21 (expr)]
    DECREMENT  [reduce using rule 21 (expr)]
    $default   reduce using rule 21 (expr)


State 201

   27 if_expr: ID .
   30        | ID . '(' expr_list_opt ')'
   52        | ID . dimensions_expr_list

    '['  shift, and go to state 121
    '('  shift, and go to state 123

    '('       [reduce using rule 27 (if_expr)]
    $default  reduce using rule 27 (if_expr)

    dimensions_expr       go to state 124
    dimensions_expr_list  go to state 125


State 202

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   48        | NOT endl_opt if_expr .
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '.'  shift, and go to state 156

    $default  reduce using rule 48 (if_expr)


State 203

   28 if_expr: '(' endl_opt if_expr . endl_opt ')'
   31        | if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    ENDL              shift, and go to state 8
    '='               shift, and go to state 136
    MOD_ASSIGN        shift, and go to state 137
    DIV_ASSIGN        shift, and go to state 138
    MUL_ASSIGN        shift, and go to state 139
    MINUS_ASSIGN      shift, and go to state 140
    PLUS_ASSIGN       shift, and go to state 141
    '?'               shift, and go to state 142
    OR                shift, and go to state 143
    AND               shift, and go to state 144
    '<'               shift, and go to state 145
    '>'               shift, and go to state 146
    GREATER_OR_EQUAL  shift, and go to state 147
    LESS_OR_EQUAL     shift, and go to state 148
    NOT_EQUALS        shift, and go to state 149
    EQUALS            shift, and go to state 150
    '+'               shift, and go to state 151
    '-'               shift, and go to state 152
    '*'               shift, and go to state 153
    '/'               shift, and go to state 154
    '%'               shift, and go to state 155
    '.'               shift, and go to state 156

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 256


State 204

   56 block_statement: '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 257


State 205

   84 stmt_list_opt: stmt_list . endl_opt
   87 stmt_list: stmt_list . stmt
   88          | stmt_list . empty_stmt

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    ENDL            shift, and go to state 8
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl              go to state 9
    endl_opt          go to state 258
    expr              go to state 86
    if_expr           go to state 87
    dot_expr          go to state 88
    block_statement   go to state 89
    if_stmt           go to state 90
    while_stmt        go to state 91
    do_while_stmt     go to state 92
    for_stmt          go to state 93
    switch_stmt       go to state 94
    try_catch_block   go to state 96
    stmt              go to state 259
    empty_stmt        go to state 260
    modifier          go to state 103
    var_declaration   go to state 104
    enum_declaration  go to state 105


State 206

   85 stmt_list: stmt .

    $default  reduce using rule 85 (stmt_list)


State 207

   86 stmt_list: empty_stmt .

    $default  reduce using rule 86 (stmt_list)


State 208

   42 if_expr: if_expr '=' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 261
    dot_expr  go to state 88


State 209

   47 if_expr: if_expr MOD_ASSIGN endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 262
    dot_expr  go to state 88


State 210

   46 if_expr: if_expr DIV_ASSIGN endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 263
    dot_expr  go to state 88


State 211

   45 if_expr: if_expr MUL_ASSIGN endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 264
    dot_expr  go to state 88


State 212

   44 if_expr: if_expr MINUS_ASSIGN endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 265
    dot_expr  go to state 88


State 213

   43 if_expr: if_expr PLUS_ASSIGN endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 266
    dot_expr  go to state 88


State 214

   51 if_expr: if_expr '?' endl_opt . if_expr endl_opt ':' endl_opt if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 267
    dot_expr  go to state 88


State 215

   50 if_expr: if_expr OR endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 268
    dot_expr  go to state 88


State 216

   49 if_expr: if_expr AND endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 269
    dot_expr  go to state 88


State 217

   36 if_expr: if_expr '<' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 270
    dot_expr  go to state 88


State 218

   37 if_expr: if_expr '>' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 271
    dot_expr  go to state 88


State 219

   39 if_expr: if_expr GREATER_OR_EQUAL endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 272
    dot_expr  go to state 88


State 220

   38 if_expr: if_expr LESS_OR_EQUAL endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 273
    dot_expr  go to state 88


State 221

   41 if_expr: if_expr NOT_EQUALS endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 274
    dot_expr  go to state 88


State 222

   40 if_expr: if_expr EQUALS endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 275
    dot_expr  go to state 88


State 223

   31 if_expr: if_expr '+' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 276
    dot_expr  go to state 88


State 224

   32 if_expr: if_expr '-' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 277
    dot_expr  go to state 88


State 225

   33 if_expr: if_expr '*' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 278
    dot_expr  go to state 88


State 226

   34 if_expr: if_expr '/' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 279
    dot_expr  go to state 88


State 227

   35 if_expr: if_expr '%' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 280
    dot_expr  go to state 88


State 228

   53 dot_expr: if_expr '.' endl_opt . ID

    ID  shift, and go to state 281


State 229

   55 dot_method_opt: '(' . endl_opt expr_list_opt endl_opt ')'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 282


State 230

   29 if_expr: dot_expr endl_opt dot_method_opt .

    $default  reduce using rule 29 (if_expr)


State 231

   77 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}' .

    $default  reduce using rule 77 (function_declaration)


State 232

  126 var_declaration: modifier ID endl_opt . type_mark endl_opt dimensions_list
  127                | modifier ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'

    ':'  shift, and go to state 37

    type_mark  go to state 283


State 233

  120 variable: ID . endl_opt type_mark_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 284


State 234

  123 var_list: variable . var_init_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 121 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 121 (var_init_opt)

    endl          go to state 9
    endl_opt      go to state 285
    var_init_opt  go to state 286


State 235

  124 var_list: var_list . endl_opt ',' endl_opt variable var_init_opt
  125 var_declaration: modifier endl_opt var_list .

    ENDL  shift, and go to state 8

    ';'       reduce using rule 125 (var_declaration)
    ENDL      [reduce using rule 125 (var_declaration)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 287


State 236

   76 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt . endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 288


State 237

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
  157 class_member: property_modifier expr . endl_opt stmt_sep

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132
    ENDL       shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 289


State 238

  151 property_modifier: visibility STATIC .
  153                  | visibility STATIC . READONLY

    READONLY  shift, and go to state 290

    $default  reduce using rule 151 (property_modifier)


State 239

  149 property_modifier: visibility READONLY .

    $default  reduce using rule 149 (property_modifier)


State 240

  161 class_visibility_member: visibility endl_opt . class_member

    CLASS      shift, and go to state 1
    STATIC     shift, and go to state 165
    PUBLIC     shift, and go to state 166
    PROTECTED  shift, and go to state 167
    PRIVATE    shift, and go to state 168
    READONLY   shift, and go to state 169
    FUNC       shift, and go to state 2

    function_declaration  go to state 170
    property_modifier     go to state 171
    visibility            go to state 291
    class_member          go to state 292
    class_declaration     go to state 177


State 241

  163 class_visibility_member_list: class_visibility_member_list endl_opt . class_visibility_member

    CLASS      shift, and go to state 1
    STATIC     shift, and go to state 165
    PUBLIC     shift, and go to state 166
    PROTECTED  shift, and go to state 167
    PRIVATE    shift, and go to state 168
    READONLY   shift, and go to state 169
    FUNC       shift, and go to state 2

    function_declaration     go to state 170
    property_modifier        go to state 171
    visibility               go to state 172
    class_member             go to state 173
    class_visibility_member  go to state 293
    class_declaration        go to state 177


State 242

  166 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt . '}'

    '}'  shift, and go to state 294


State 243

   62 do_while_stmt: DO endl_opt stmt endl_opt . WHILE endl_opt '(' endl_opt expr endl_opt ')'

    WHILE  shift, and go to state 295


State 244

   63 do_while_stmt: DO endl_opt empty_stmt endl_opt . WHILE endl_opt '(' endl_opt expr endl_opt ')'

    WHILE  shift, and go to state 296


State 245

   57 if_stmt: IF endl_opt '(' endl_opt . if_expr endl_opt ')' endl_opt block_statement
   58        | IF endl_opt '(' endl_opt . if_expr endl_opt ')' endl_opt if_expr
   59        | IF endl_opt '(' endl_opt . if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 297
    dot_expr  go to state 88


State 246

   64 for_stmt: FOR endl_opt '(' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt
   65         | FOR endl_opt '(' endl_opt . if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr      go to state 298
    if_expr   go to state 299
    dot_expr  go to state 88


State 247

   60 while_stmt: WHILE endl_opt '(' endl_opt . if_expr endl_opt ')' endl_opt stmt
   61           | WHILE endl_opt '(' endl_opt . if_expr endl_opt ')' endl_opt empty_stmt

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 300
    dot_expr  go to state 88


State 248

   66 switch_stmt: SWITCH endl_opt '(' endl_opt . expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr      go to state 301
    if_expr   go to state 87
    dot_expr  go to state 88


State 249

   78 try_catch_block: TRY endl_opt block_statement endl_opt . catch_clause

    CATCH  shift, and go to state 302

    catch_clause  go to state 303


State 250

  169 enum_declaration: ENUM endl_opt ID endl_opt . '{' endl_opt id_list endl_opt '}'

    '{'  shift, and go to state 304


State 251

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
  131 dimensions_expr: '[' endl_opt expr . endl_opt ']'

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 305


State 252

   20 expr: ID AS endl_opt type .

    $default  reduce using rule 20 (expr)


State 253

   12 expr_list: expr_list endl_opt . ',' endl_opt expr

    ','  shift, and go to state 306


State 254

   30 if_expr: ID '(' expr_list_opt ')' .

    $default  reduce using rule 30 (if_expr)


State 255

  133 dimensions_expr_list: dimensions_expr_list endl_opt dimensions_expr .

    $default  reduce using rule 133 (dimensions_expr_list)


State 256

   28 if_expr: '(' endl_opt if_expr endl_opt . ')'

    ')'  shift, and go to state 307


State 257

   56 block_statement: '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 56 (block_statement)


State 258

   84 stmt_list_opt: stmt_list endl_opt .

    $default  reduce using rule 84 (stmt_list_opt)


State 259

   87 stmt_list: stmt_list stmt .

    $default  reduce using rule 87 (stmt_list)


State 260

   88 stmt_list: stmt_list empty_stmt .

    $default  reduce using rule 88 (stmt_list)


State 261

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   42        | if_expr '=' endl_opt if_expr .
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '='               shift, and go to state 136
    MOD_ASSIGN        shift, and go to state 137
    DIV_ASSIGN        shift, and go to state 138
    MUL_ASSIGN        shift, and go to state 139
    MINUS_ASSIGN      shift, and go to state 140
    PLUS_ASSIGN       shift, and go to state 141
    '?'               shift, and go to state 142
    OR                shift, and go to state 143
    AND               shift, and go to state 144
    '<'               shift, and go to state 145
    '>'               shift, and go to state 146
    GREATER_OR_EQUAL  shift, and go to state 147
    LESS_OR_EQUAL     shift, and go to state 148
    NOT_EQUALS        shift, and go to state 149
    EQUALS            shift, and go to state 150
    '+'               shift, and go to state 151
    '-'               shift, and go to state 152
    '*'               shift, and go to state 153
    '/'               shift, and go to state 154
    '%'               shift, and go to state 155
    '.'               shift, and go to state 156

    $default  reduce using rule 42 (if_expr)


State 262

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   47        | if_expr MOD_ASSIGN endl_opt if_expr .
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '='               shift, and go to state 136
    MOD_ASSIGN        shift, and go to state 137
    DIV_ASSIGN        shift, and go to state 138
    MUL_ASSIGN        shift, and go to state 139
    MINUS_ASSIGN      shift, and go to state 140
    PLUS_ASSIGN       shift, and go to state 141
    '?'               shift, and go to state 142
    OR                shift, and go to state 143
    AND               shift, and go to state 144
    '<'               shift, and go to state 145
    '>'               shift, and go to state 146
    GREATER_OR_EQUAL  shift, and go to state 147
    LESS_OR_EQUAL     shift, and go to state 148
    NOT_EQUALS        shift, and go to state 149
    EQUALS            shift, and go to state 150
    '+'               shift, and go to state 151
    '-'               shift, and go to state 152
    '*'               shift, and go to state 153
    '/'               shift, and go to state 154
    '%'               shift, and go to state 155
    '.'               shift, and go to state 156

    $default  reduce using rule 47 (if_expr)


State 263

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   46        | if_expr DIV_ASSIGN endl_opt if_expr .
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '='               shift, and go to state 136
    MOD_ASSIGN        shift, and go to state 137
    DIV_ASSIGN        shift, and go to state 138
    MUL_ASSIGN        shift, and go to state 139
    MINUS_ASSIGN      shift, and go to state 140
    PLUS_ASSIGN       shift, and go to state 141
    '?'               shift, and go to state 142
    OR                shift, and go to state 143
    AND               shift, and go to state 144
    '<'               shift, and go to state 145
    '>'               shift, and go to state 146
    GREATER_OR_EQUAL  shift, and go to state 147
    LESS_OR_EQUAL     shift, and go to state 148
    NOT_EQUALS        shift, and go to state 149
    EQUALS            shift, and go to state 150
    '+'               shift, and go to state 151
    '-'               shift, and go to state 152
    '*'               shift, and go to state 153
    '/'               shift, and go to state 154
    '%'               shift, and go to state 155
    '.'               shift, and go to state 156

    $default  reduce using rule 46 (if_expr)


State 264

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   45        | if_expr MUL_ASSIGN endl_opt if_expr .
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '='               shift, and go to state 136
    MOD_ASSIGN        shift, and go to state 137
    DIV_ASSIGN        shift, and go to state 138
    MUL_ASSIGN        shift, and go to state 139
    MINUS_ASSIGN      shift, and go to state 140
    PLUS_ASSIGN       shift, and go to state 141
    '?'               shift, and go to state 142
    OR                shift, and go to state 143
    AND               shift, and go to state 144
    '<'               shift, and go to state 145
    '>'               shift, and go to state 146
    GREATER_OR_EQUAL  shift, and go to state 147
    LESS_OR_EQUAL     shift, and go to state 148
    NOT_EQUALS        shift, and go to state 149
    EQUALS            shift, and go to state 150
    '+'               shift, and go to state 151
    '-'               shift, and go to state 152
    '*'               shift, and go to state 153
    '/'               shift, and go to state 154
    '%'               shift, and go to state 155
    '.'               shift, and go to state 156

    $default  reduce using rule 45 (if_expr)


State 265

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   44        | if_expr MINUS_ASSIGN endl_opt if_expr .
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '='               shift, and go to state 136
    MOD_ASSIGN        shift, and go to state 137
    DIV_ASSIGN        shift, and go to state 138
    MUL_ASSIGN        shift, and go to state 139
    MINUS_ASSIGN      shift, and go to state 140
    PLUS_ASSIGN       shift, and go to state 141
    '?'               shift, and go to state 142
    OR                shift, and go to state 143
    AND               shift, and go to state 144
    '<'               shift, and go to state 145
    '>'               shift, and go to state 146
    GREATER_OR_EQUAL  shift, and go to state 147
    LESS_OR_EQUAL     shift, and go to state 148
    NOT_EQUALS        shift, and go to state 149
    EQUALS            shift, and go to state 150
    '+'               shift, and go to state 151
    '-'               shift, and go to state 152
    '*'               shift, and go to state 153
    '/'               shift, and go to state 154
    '%'               shift, and go to state 155
    '.'               shift, and go to state 156

    $default  reduce using rule 44 (if_expr)


State 266

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   43        | if_expr PLUS_ASSIGN endl_opt if_expr .
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '='               shift, and go to state 136
    MOD_ASSIGN        shift, and go to state 137
    DIV_ASSIGN        shift, and go to state 138
    MUL_ASSIGN        shift, and go to state 139
    MINUS_ASSIGN      shift, and go to state 140
    PLUS_ASSIGN       shift, and go to state 141
    '?'               shift, and go to state 142
    OR                shift, and go to state 143
    AND               shift, and go to state 144
    '<'               shift, and go to state 145
    '>'               shift, and go to state 146
    GREATER_OR_EQUAL  shift, and go to state 147
    LESS_OR_EQUAL     shift, and go to state 148
    NOT_EQUALS        shift, and go to state 149
    EQUALS            shift, and go to state 150
    '+'               shift, and go to state 151
    '-'               shift, and go to state 152
    '*'               shift, and go to state 153
    '/'               shift, and go to state 154
    '%'               shift, and go to state 155
    '.'               shift, and go to state 156

    $default  reduce using rule 43 (if_expr)


State 267

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   51        | if_expr '?' endl_opt if_expr . endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    ENDL              shift, and go to state 8
    '='               shift, and go to state 136
    MOD_ASSIGN        shift, and go to state 137
    DIV_ASSIGN        shift, and go to state 138
    MUL_ASSIGN        shift, and go to state 139
    MINUS_ASSIGN      shift, and go to state 140
    PLUS_ASSIGN       shift, and go to state 141
    '?'               shift, and go to state 142
    OR                shift, and go to state 143
    AND               shift, and go to state 144
    '<'               shift, and go to state 145
    '>'               shift, and go to state 146
    GREATER_OR_EQUAL  shift, and go to state 147
    LESS_OR_EQUAL     shift, and go to state 148
    NOT_EQUALS        shift, and go to state 149
    EQUALS            shift, and go to state 150
    '+'               shift, and go to state 151
    '-'               shift, and go to state 152
    '*'               shift, and go to state 153
    '/'               shift, and go to state 154
    '%'               shift, and go to state 155
    '.'               shift, and go to state 156

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 308


State 268

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   50        | if_expr OR endl_opt if_expr .
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    AND               shift, and go to state 144
    '<'               shift, and go to state 145
    '>'               shift, and go to state 146
    GREATER_OR_EQUAL  shift, and go to state 147
    LESS_OR_EQUAL     shift, and go to state 148
    NOT_EQUALS        shift, and go to state 149
    EQUALS            shift, and go to state 150
    '+'               shift, and go to state 151
    '-'               shift, and go to state 152
    '*'               shift, and go to state 153
    '/'               shift, and go to state 154
    '%'               shift, and go to state 155
    '.'               shift, and go to state 156

    $default  reduce using rule 50 (if_expr)


State 269

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   49        | if_expr AND endl_opt if_expr .
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '<'               shift, and go to state 145
    '>'               shift, and go to state 146
    GREATER_OR_EQUAL  shift, and go to state 147
    LESS_OR_EQUAL     shift, and go to state 148
    NOT_EQUALS        shift, and go to state 149
    EQUALS            shift, and go to state 150
    '+'               shift, and go to state 151
    '-'               shift, and go to state 152
    '*'               shift, and go to state 153
    '/'               shift, and go to state 154
    '%'               shift, and go to state 155
    '.'               shift, and go to state 156

    $default  reduce using rule 49 (if_expr)


State 270

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   36        | if_expr '<' endl_opt if_expr .
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '+'  shift, and go to state 151
    '-'  shift, and go to state 152
    '*'  shift, and go to state 153
    '/'  shift, and go to state 154
    '%'  shift, and go to state 155
    '.'  shift, and go to state 156

    $default  reduce using rule 36 (if_expr)


State 271

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   37        | if_expr '>' endl_opt if_expr .
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '+'  shift, and go to state 151
    '-'  shift, and go to state 152
    '*'  shift, and go to state 153
    '/'  shift, and go to state 154
    '%'  shift, and go to state 155
    '.'  shift, and go to state 156

    $default  reduce using rule 37 (if_expr)


State 272

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   39        | if_expr GREATER_OR_EQUAL endl_opt if_expr .
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '+'  shift, and go to state 151
    '-'  shift, and go to state 152
    '*'  shift, and go to state 153
    '/'  shift, and go to state 154
    '%'  shift, and go to state 155
    '.'  shift, and go to state 156

    $default  reduce using rule 39 (if_expr)


State 273

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   38        | if_expr LESS_OR_EQUAL endl_opt if_expr .
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '+'  shift, and go to state 151
    '-'  shift, and go to state 152
    '*'  shift, and go to state 153
    '/'  shift, and go to state 154
    '%'  shift, and go to state 155
    '.'  shift, and go to state 156

    $default  reduce using rule 38 (if_expr)


State 274

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   41        | if_expr NOT_EQUALS endl_opt if_expr .
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '+'  shift, and go to state 151
    '-'  shift, and go to state 152
    '*'  shift, and go to state 153
    '/'  shift, and go to state 154
    '%'  shift, and go to state 155
    '.'  shift, and go to state 156

    $default  reduce using rule 41 (if_expr)


State 275

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   40        | if_expr EQUALS endl_opt if_expr .
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '+'  shift, and go to state 151
    '-'  shift, and go to state 152
    '*'  shift, and go to state 153
    '/'  shift, and go to state 154
    '%'  shift, and go to state 155
    '.'  shift, and go to state 156

    $default  reduce using rule 40 (if_expr)


State 276

   31 if_expr: if_expr . '+' endl_opt if_expr
   31        | if_expr '+' endl_opt if_expr .
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '*'  shift, and go to state 153
    '/'  shift, and go to state 154
    '%'  shift, and go to state 155
    '.'  shift, and go to state 156

    $default  reduce using rule 31 (if_expr)


State 277

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   32        | if_expr '-' endl_opt if_expr .
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '*'  shift, and go to state 153
    '/'  shift, and go to state 154
    '%'  shift, and go to state 155
    '.'  shift, and go to state 156

    $default  reduce using rule 32 (if_expr)


State 278

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   33        | if_expr '*' endl_opt if_expr .
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '.'  shift, and go to state 156

    $default  reduce using rule 33 (if_expr)


State 279

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   34        | if_expr '/' endl_opt if_expr .
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '.'  shift, and go to state 156

    $default  reduce using rule 34 (if_expr)


State 280

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   35        | if_expr '%' endl_opt if_expr .
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID

    '.'  shift, and go to state 156

    $default  reduce using rule 35 (if_expr)


State 281

   53 dot_expr: if_expr '.' endl_opt ID .

    $default  reduce using rule 53 (dot_expr)


State 282

   55 dot_method_opt: '(' endl_opt . expr_list_opt endl_opt ')'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 195
    expr_list_opt  go to state 309
    expr           go to state 197
    if_expr        go to state 87
    dot_expr       go to state 88


State 283

  126 var_declaration: modifier ID endl_opt type_mark . endl_opt dimensions_list
  127                | modifier ID endl_opt type_mark . dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'

    ENDL  shift, and go to state 8
    '['   shift, and go to state 310

    '['  [reduce using rule 7 (endl_opt)]

    endl             go to state 9
    endl_opt         go to state 311
    dimensions       go to state 312
    dimensions_list  go to state 313


State 284

  120 variable: ID endl_opt . type_mark_opt

    ':'  shift, and go to state 37

    $default  reduce using rule 118 (type_mark_opt)

    type_mark      go to state 314
    type_mark_opt  go to state 315


State 285

  122 var_init_opt: endl_opt . '=' endl_opt expr

    '='  shift, and go to state 316


State 286

  123 var_list: variable var_init_opt .

    $default  reduce using rule 123 (var_list)


State 287

  124 var_list: var_list endl_opt . ',' endl_opt variable var_init_opt

    ','  shift, and go to state 317


State 288

   76 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt . '}'

    '}'  shift, and go to state 318


State 289

  157 class_member: property_modifier expr endl_opt . stmt_sep

    ';'   shift, and go to state 133
    ENDL  shift, and go to state 8

    endl      go to state 134
    stmt_sep  go to state 319


State 290

  153 property_modifier: visibility STATIC READONLY .

    $default  reduce using rule 153 (property_modifier)


State 291

  148 property_modifier: visibility .
  149                  | visibility . READONLY
  151                  | visibility . STATIC
  153                  | visibility . STATIC READONLY

    STATIC    shift, and go to state 238
    READONLY  shift, and go to state 239

    $default  reduce using rule 148 (property_modifier)


State 292

  161 class_visibility_member: visibility endl_opt class_member .

    $default  reduce using rule 161 (class_visibility_member)


State 293

  163 class_visibility_member_list: class_visibility_member_list endl_opt class_visibility_member .

    $default  reduce using rule 163 (class_visibility_member_list)


State 294

  166 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}' .

    $default  reduce using rule 166 (class_declaration)


State 295

   62 do_while_stmt: DO endl_opt stmt endl_opt WHILE . endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 320


State 296

   63 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE . endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 321


State 297

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID
   57 if_stmt: IF endl_opt '(' endl_opt if_expr . endl_opt ')' endl_opt block_statement
   58        | IF endl_opt '(' endl_opt if_expr . endl_opt ')' endl_opt if_expr
   59        | IF endl_opt '(' endl_opt if_expr . endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    ENDL              shift, and go to state 8
    '='               shift, and go to state 136
    MOD_ASSIGN        shift, and go to state 137
    DIV_ASSIGN        shift, and go to state 138
    MUL_ASSIGN        shift, and go to state 139
    MINUS_ASSIGN      shift, and go to state 140
    PLUS_ASSIGN       shift, and go to state 141
    '?'               shift, and go to state 142
    OR                shift, and go to state 143
    AND               shift, and go to state 144
    '<'               shift, and go to state 145
    '>'               shift, and go to state 146
    GREATER_OR_EQUAL  shift, and go to state 147
    LESS_OR_EQUAL     shift, and go to state 148
    NOT_EQUALS        shift, and go to state 149
    EQUALS            shift, and go to state 150
    '+'               shift, and go to state 151
    '-'               shift, and go to state 152
    '*'               shift, and go to state 153
    '/'               shift, and go to state 154
    '%'               shift, and go to state 155
    '.'               shift, and go to state 156

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 322


State 298

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   64 for_stmt: FOR endl_opt '(' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 323


State 299

   15 expr: if_expr .
   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID
   65 for_stmt: FOR endl_opt '(' endl_opt if_expr . endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL              shift, and go to state 8
    '='               shift, and go to state 136
    MOD_ASSIGN        shift, and go to state 137
    DIV_ASSIGN        shift, and go to state 138
    MUL_ASSIGN        shift, and go to state 139
    MINUS_ASSIGN      shift, and go to state 140
    PLUS_ASSIGN       shift, and go to state 141
    '?'               shift, and go to state 142
    OR                shift, and go to state 143
    AND               shift, and go to state 144
    '<'               shift, and go to state 145
    '>'               shift, and go to state 146
    GREATER_OR_EQUAL  shift, and go to state 147
    LESS_OR_EQUAL     shift, and go to state 148
    NOT_EQUALS        shift, and go to state 149
    EQUALS            shift, and go to state 150
    '+'               shift, and go to state 151
    '-'               shift, and go to state 152
    '*'               shift, and go to state 153
    '/'               shift, and go to state 154
    '%'               shift, and go to state 155
    '.'               shift, and go to state 156

    ';'       reduce using rule 7 (endl_opt)
    ';'       [reduce using rule 15 (expr)]
    ENDL      [reduce using rule 15 (expr)]
    $default  reduce using rule 15 (expr)

    endl      go to state 9
    endl_opt  go to state 324


State 300

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID
   60 while_stmt: WHILE endl_opt '(' endl_opt if_expr . endl_opt ')' endl_opt stmt
   61           | WHILE endl_opt '(' endl_opt if_expr . endl_opt ')' endl_opt empty_stmt

    ENDL              shift, and go to state 8
    '='               shift, and go to state 136
    MOD_ASSIGN        shift, and go to state 137
    DIV_ASSIGN        shift, and go to state 138
    MUL_ASSIGN        shift, and go to state 139
    MINUS_ASSIGN      shift, and go to state 140
    PLUS_ASSIGN       shift, and go to state 141
    '?'               shift, and go to state 142
    OR                shift, and go to state 143
    AND               shift, and go to state 144
    '<'               shift, and go to state 145
    '>'               shift, and go to state 146
    GREATER_OR_EQUAL  shift, and go to state 147
    LESS_OR_EQUAL     shift, and go to state 148
    NOT_EQUALS        shift, and go to state 149
    EQUALS            shift, and go to state 150
    '+'               shift, and go to state 151
    '-'               shift, and go to state 152
    '*'               shift, and go to state 153
    '/'               shift, and go to state 154
    '%'               shift, and go to state 155
    '.'               shift, and go to state 156

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 325


State 301

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr . endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 326


State 302

   79 catch_clause: CATCH . endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement
   80             | CATCH . endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 327


State 303

   78 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause .

    $default  reduce using rule 78 (try_catch_block)


State 304

  169 enum_declaration: ENUM endl_opt ID endl_opt '{' . endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 328


State 305

  131 dimensions_expr: '[' endl_opt expr endl_opt . ']'

    ']'  shift, and go to state 329


State 306

   12 expr_list: expr_list endl_opt ',' . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 330


State 307

   28 if_expr: '(' endl_opt if_expr endl_opt ')' .

    $default  reduce using rule 28 (if_expr)


State 308

   51 if_expr: if_expr '?' endl_opt if_expr endl_opt . ':' endl_opt if_expr

    ':'  shift, and go to state 331


State 309

   55 dot_method_opt: '(' endl_opt expr_list_opt . endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 332


State 310

  128 dimensions: '[' . endl_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 333


State 311

  126 var_declaration: modifier ID endl_opt type_mark endl_opt . dimensions_list

    '['  shift, and go to state 310

    dimensions       go to state 312
    dimensions_list  go to state 334


State 312

  129 dimensions_list: dimensions .

    $default  reduce using rule 129 (dimensions_list)


State 313

  127 var_declaration: modifier ID endl_opt type_mark dimensions_list . endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'
  130 dimensions_list: dimensions_list . dimensions

    ENDL  shift, and go to state 8
    '['   shift, and go to state 310

    $default  reduce using rule 7 (endl_opt)

    endl        go to state 9
    endl_opt    go to state 335
    dimensions  go to state 336


State 314

  119 type_mark_opt: type_mark .

    $default  reduce using rule 119 (type_mark_opt)


State 315

  120 variable: ID endl_opt type_mark_opt .

    $default  reduce using rule 120 (variable)


State 316

  122 var_init_opt: endl_opt '=' . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 337


State 317

  124 var_list: var_list endl_opt ',' . endl_opt variable var_init_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 338


State 318

   76 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}' .

    $default  reduce using rule 76 (function_declaration)


State 319

  157 class_member: property_modifier expr endl_opt stmt_sep .

    $default  reduce using rule 157 (class_member)


State 320

   62 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt . '(' endl_opt expr endl_opt ')'

    '('  shift, and go to state 339


State 321

   63 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt . '(' endl_opt expr endl_opt ')'

    '('  shift, and go to state 340


State 322

   57 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt . ')' endl_opt block_statement
   58        | IF endl_opt '(' endl_opt if_expr endl_opt . ')' endl_opt if_expr
   59        | IF endl_opt '(' endl_opt if_expr endl_opt . ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    ')'  shift, and go to state 341


State 323

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 342


State 324

   65 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt . ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ';'  shift, and go to state 343


State 325

   60 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt . ')' endl_opt stmt
   61           | WHILE endl_opt '(' endl_opt if_expr endl_opt . ')' endl_opt empty_stmt

    ')'  shift, and go to state 344


State 326

   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt . ')' endl_opt '{' endl_opt case_list endl_opt '}'

    ')'  shift, and go to state 345


State 327

   79 catch_clause: CATCH endl_opt . '(' endl_opt ID endl_opt ')' endl_opt block_statement
   80             | CATCH endl_opt . '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    '('  shift, and go to state 346


State 328

  169 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt . id_list endl_opt '}'

    ID  shift, and go to state 347

    id_list  go to state 348


State 329

  131 dimensions_expr: '[' endl_opt expr endl_opt ']' .

    $default  reduce using rule 131 (dimensions_expr)


State 330

   12 expr_list: expr_list endl_opt ',' endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr      go to state 349
    if_expr   go to state 87
    dot_expr  go to state 88


State 331

   51 if_expr: if_expr '?' endl_opt if_expr endl_opt ':' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 350


State 332

   55 dot_method_opt: '(' endl_opt expr_list_opt endl_opt . ')'

    ')'  shift, and go to state 351


State 333

  128 dimensions: '[' endl_opt . ']'

    ']'  shift, and go to state 352


State 334

  126 var_declaration: modifier ID endl_opt type_mark endl_opt dimensions_list .
  130 dimensions_list: dimensions_list . dimensions

    '['  shift, and go to state 310

    $default  reduce using rule 126 (var_declaration)

    dimensions  go to state 336


State 335

  127 var_declaration: modifier ID endl_opt type_mark dimensions_list endl_opt . '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'

    '='  shift, and go to state 353


State 336

  130 dimensions_list: dimensions_list dimensions .

    $default  reduce using rule 130 (dimensions_list)


State 337

  122 var_init_opt: endl_opt '=' endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr      go to state 354
    if_expr   go to state 87
    dot_expr  go to state 88


State 338

  124 var_list: var_list endl_opt ',' endl_opt . variable var_init_opt

    ID  shift, and go to state 233

    variable  go to state 355


State 339

   62 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' . endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 356


State 340

   63 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' . endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 357


State 341

   57 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' . endl_opt block_statement
   58        | IF endl_opt '(' endl_opt if_expr endl_opt ')' . endl_opt if_expr
   59        | IF endl_opt '(' endl_opt if_expr endl_opt ')' . endl_opt block_statement endl_opt ELSE endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 358


State 342

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 359


State 343

   65 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 360


State 344

   60 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt ')' . endl_opt stmt
   61           | WHILE endl_opt '(' endl_opt if_expr endl_opt ')' . endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 361


State 345

   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' . endl_opt '{' endl_opt case_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 362


State 346

   79 catch_clause: CATCH endl_opt '(' . endl_opt ID endl_opt ')' endl_opt block_statement
   80             | CATCH endl_opt '(' . endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 363


State 347

  170 id_list: ID . var_init_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 121 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 121 (var_init_opt)

    endl          go to state 9
    endl_opt      go to state 285
    var_init_opt  go to state 364


State 348

  169 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list . endl_opt '}'
  171 id_list: id_list . endl_opt ',' endl_opt ID var_init_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 365


State 349

   12 expr_list: expr_list endl_opt ',' endl_opt expr .
   16 expr: expr . DECREMENT
   18     | expr . INCREMENT

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132

    $default  reduce using rule 12 (expr_list)


State 350

   51 if_expr: if_expr '?' endl_opt if_expr endl_opt ':' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 366
    dot_expr  go to state 88


State 351

   55 dot_method_opt: '(' endl_opt expr_list_opt endl_opt ')' .

    $default  reduce using rule 55 (dot_method_opt)


State 352

  128 dimensions: '[' endl_opt ']' .

    $default  reduce using rule 128 (dimensions)


State 353

  127 var_declaration: modifier ID endl_opt type_mark dimensions_list endl_opt '=' . endl_opt '[' endl_opt expr_list_opt endl_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 367


State 354

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
  122 var_init_opt: endl_opt '=' endl_opt expr .

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132

    $default  reduce using rule 122 (var_init_opt)


State 355

  124 var_list: var_list endl_opt ',' endl_opt variable . var_init_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 121 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 121 (var_init_opt)

    endl          go to state 9
    endl_opt      go to state 285
    var_init_opt  go to state 368


State 356

   62 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt . expr endl_opt ')'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr      go to state 369
    if_expr   go to state 87
    dot_expr  go to state 88


State 357

   63 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt . expr endl_opt ')'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr      go to state 370
    if_expr   go to state 87
    dot_expr  go to state 88


State 358

   57 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt . block_statement
   58        | IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt . if_expr
   59        | IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt . block_statement endl_opt ELSE endl_opt block_statement

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    if_expr          go to state 371
    dot_expr         go to state 88
    block_statement  go to state 372


State 359

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr      go to state 373
    if_expr   go to state 87
    dot_expr  go to state 88


State 360

   65 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr      go to state 374
    if_expr   go to state 87
    dot_expr  go to state 88


State 361

   60 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt . stmt
   61           | WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt . empty_stmt

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    expr              go to state 86
    if_expr           go to state 87
    dot_expr          go to state 88
    block_statement   go to state 89
    if_stmt           go to state 90
    while_stmt        go to state 91
    do_while_stmt     go to state 92
    for_stmt          go to state 93
    switch_stmt       go to state 94
    try_catch_block   go to state 96
    stmt              go to state 375
    empty_stmt        go to state 376
    modifier          go to state 103
    var_declaration   go to state 104
    enum_declaration  go to state 105


State 362

   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt . '{' endl_opt case_list endl_opt '}'

    '{'  shift, and go to state 377


State 363

   79 catch_clause: CATCH endl_opt '(' endl_opt . ID endl_opt ')' endl_opt block_statement
   80             | CATCH endl_opt '(' endl_opt . ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ID  shift, and go to state 378


State 364

  170 id_list: ID var_init_opt .

    $default  reduce using rule 170 (id_list)


State 365

  169 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt . '}'
  171 id_list: id_list endl_opt . ',' endl_opt ID var_init_opt

    ','  shift, and go to state 379
    '}'  shift, and go to state 380


State 366

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   51        | if_expr '?' endl_opt if_expr endl_opt ':' endl_opt if_expr .
   53 dot_expr: if_expr . '.' endl_opt ID

    '='               shift, and go to state 136
    MOD_ASSIGN        shift, and go to state 137
    DIV_ASSIGN        shift, and go to state 138
    MUL_ASSIGN        shift, and go to state 139
    MINUS_ASSIGN      shift, and go to state 140
    PLUS_ASSIGN       shift, and go to state 141
    '?'               shift, and go to state 142
    OR                shift, and go to state 143
    AND               shift, and go to state 144
    '<'               shift, and go to state 145
    '>'               shift, and go to state 146
    GREATER_OR_EQUAL  shift, and go to state 147
    LESS_OR_EQUAL     shift, and go to state 148
    NOT_EQUALS        shift, and go to state 149
    EQUALS            shift, and go to state 150
    '+'               shift, and go to state 151
    '-'               shift, and go to state 152
    '*'               shift, and go to state 153
    '/'               shift, and go to state 154
    '%'               shift, and go to state 155
    '.'               shift, and go to state 156

    '='               [reduce using rule 51 (if_expr)]
    MOD_ASSIGN        [reduce using rule 51 (if_expr)]
    DIV_ASSIGN        [reduce using rule 51 (if_expr)]
    MUL_ASSIGN        [reduce using rule 51 (if_expr)]
    MINUS_ASSIGN      [reduce using rule 51 (if_expr)]
    PLUS_ASSIGN       [reduce using rule 51 (if_expr)]
    '?'               [reduce using rule 51 (if_expr)]
    OR                [reduce using rule 51 (if_expr)]
    AND               [reduce using rule 51 (if_expr)]
    '<'               [reduce using rule 51 (if_expr)]
    '>'               [reduce using rule 51 (if_expr)]
    GREATER_OR_EQUAL  [reduce using rule 51 (if_expr)]
    LESS_OR_EQUAL     [reduce using rule 51 (if_expr)]
    NOT_EQUALS        [reduce using rule 51 (if_expr)]
    EQUALS            [reduce using rule 51 (if_expr)]
    '+'               [reduce using rule 51 (if_expr)]
    '-'               [reduce using rule 51 (if_expr)]
    '*'               [reduce using rule 51 (if_expr)]
    '/'               [reduce using rule 51 (if_expr)]
    '%'               [reduce using rule 51 (if_expr)]
    '.'               [reduce using rule 51 (if_expr)]
    $default          reduce using rule 51 (if_expr)


State 367

  127 var_declaration: modifier ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt . '[' endl_opt expr_list_opt endl_opt ']'

    '['  shift, and go to state 381


State 368

  124 var_list: var_list endl_opt ',' endl_opt variable var_init_opt .

    $default  reduce using rule 124 (var_list)


State 369

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   62 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr . endl_opt ')'

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 382


State 370

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   63 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr . endl_opt ')'

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 383


State 371

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID
   58 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt if_expr .

    '='               shift, and go to state 136
    MOD_ASSIGN        shift, and go to state 137
    DIV_ASSIGN        shift, and go to state 138
    MUL_ASSIGN        shift, and go to state 139
    MINUS_ASSIGN      shift, and go to state 140
    PLUS_ASSIGN       shift, and go to state 141
    '?'               shift, and go to state 142
    OR                shift, and go to state 143
    AND               shift, and go to state 144
    '<'               shift, and go to state 145
    '>'               shift, and go to state 146
    GREATER_OR_EQUAL  shift, and go to state 147
    LESS_OR_EQUAL     shift, and go to state 148
    NOT_EQUALS        shift, and go to state 149
    EQUALS            shift, and go to state 150
    '*'               shift, and go to state 153
    '/'               shift, and go to state 154
    '%'               shift, and go to state 155
    '.'               shift, and go to state 156

    $default  reduce using rule 58 (if_stmt)


State 372

   57 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement .
   59        | IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement . endl_opt ELSE endl_opt block_statement

    ELSE      reduce using rule 7 (endl_opt)
    $default  reduce using rule 57 (if_stmt)

    endl      go to state 9
    endl_opt  go to state 384


State 373

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 385


State 374

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   65 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 386


State 375

   60 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 60 (while_stmt)


State 376

   61 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt empty_stmt .

    $default  reduce using rule 61 (while_stmt)


State 377

   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' . endl_opt case_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 387


State 378

   79 catch_clause: CATCH endl_opt '(' endl_opt ID . endl_opt ')' endl_opt block_statement
   80             | CATCH endl_opt '(' endl_opt ID . endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 388


State 379

  171 id_list: id_list endl_opt ',' . endl_opt ID var_init_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 389


State 380

  169 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}' .

    $default  reduce using rule 169 (enum_declaration)


State 381

  127 var_declaration: modifier ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' . endl_opt expr_list_opt endl_opt ']'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 390


State 382

   62 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt . ')'

    ')'  shift, and go to state 391


State 383

   63 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt . ')'

    ')'  shift, and go to state 392


State 384

   59 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt . ELSE endl_opt block_statement

    ELSE  shift, and go to state 393


State 385

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 394


State 386

   65 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ';'  shift, and go to state 395


State 387

   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt . case_list endl_opt '}'

    DEFAULT  shift, and go to state 396
    CASE     shift, and go to state 397

    case_list  go to state 398
    case_stmt  go to state 399


State 388

   79 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt . ')' endl_opt block_statement
   80             | CATCH endl_opt '(' endl_opt ID endl_opt . ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ')'  shift, and go to state 400
    ':'  shift, and go to state 401


State 389

  171 id_list: id_list endl_opt ',' endl_opt . ID var_init_opt

    ID  shift, and go to state 402


State 390

  127 var_declaration: modifier ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt . expr_list_opt endl_opt ']'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 195
    expr_list_opt  go to state 403
    expr           go to state 197
    if_expr        go to state 87
    dot_expr       go to state 88


State 391

   62 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')' .

    $default  reduce using rule 62 (do_while_stmt)


State 392

   63 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')' .

    $default  reduce using rule 63 (do_while_stmt)


State 393

   59 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE . endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 404


State 394

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' . endl_opt if_expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 405


State 395

   65 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 406


State 396

   71 case_stmt: DEFAULT . endl_opt ':' endl_opt stmt endl_opt break_opt
   72          | DEFAULT . endl_opt ':' endl_opt empty_stmt endl_opt break_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 407


State 397

   69 case_stmt: CASE . endl_opt expr endl_opt ':' endl_opt stmt endl_opt break_opt
   70          | CASE . endl_opt expr endl_opt ':' endl_opt empty_stmt endl_opt break_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 408


State 398

   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list . endl_opt '}'
   68 case_list: case_list . case_stmt

    DEFAULT  shift, and go to state 396
    CASE     shift, and go to state 397
    ENDL     shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl       go to state 9
    endl_opt   go to state 409
    case_stmt  go to state 410


State 399

   67 case_list: case_stmt .

    $default  reduce using rule 67 (case_list)


State 400

   79 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' . endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 411


State 401

   80 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' . endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 412


State 402

  171 id_list: id_list endl_opt ',' endl_opt ID . var_init_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 121 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 121 (var_init_opt)

    endl          go to state 9
    endl_opt      go to state 285
    var_init_opt  go to state 413


State 403

  127 var_declaration: modifier ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt . endl_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 414


State 404

   59 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt . block_statement

    '{'  shift, and go to state 85

    block_statement  go to state 415


State 405

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt . if_expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 201
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr   go to state 416
    dot_expr  go to state 88


State 406

   65 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ')' endl_opt empty_stmt

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr      go to state 417
    if_expr   go to state 87
    dot_expr  go to state 88


State 407

   71 case_stmt: DEFAULT endl_opt . ':' endl_opt stmt endl_opt break_opt
   72          | DEFAULT endl_opt . ':' endl_opt empty_stmt endl_opt break_opt

    ':'  shift, and go to state 418


State 408

   69 case_stmt: CASE endl_opt . expr endl_opt ':' endl_opt stmt endl_opt break_opt
   70          | CASE endl_opt . expr endl_opt ':' endl_opt empty_stmt endl_opt break_opt

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr      go to state 419
    if_expr   go to state 87
    dot_expr  go to state 88


State 409

   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt . '}'

    '}'  shift, and go to state 420


State 410

   68 case_list: case_list case_stmt .

    $default  reduce using rule 68 (case_list)


State 411

   79 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt . block_statement

    '{'  shift, and go to state 85

    block_statement  go to state 421


State 412

   80 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt . error_type endl_opt ')' endl_opt block_statement

    UNKNOWN  shift, and go to state 422
    ANY      shift, and go to state 423

    error_type  go to state 424


State 413

  171 id_list: id_list endl_opt ',' endl_opt ID var_init_opt .

    $default  reduce using rule 171 (id_list)


State 414

  127 var_declaration: modifier ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt . ']'

    ']'  shift, and go to state 425


State 415

   59 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement .

    $default  reduce using rule 59 (if_stmt)


State 416

   31 if_expr: if_expr . '+' endl_opt if_expr
   32        | if_expr . '-' endl_opt if_expr
   33        | if_expr . '*' endl_opt if_expr
   34        | if_expr . '/' endl_opt if_expr
   35        | if_expr . '%' endl_opt if_expr
   36        | if_expr . '<' endl_opt if_expr
   37        | if_expr . '>' endl_opt if_expr
   38        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr . '=' endl_opt if_expr
   43        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | if_expr . AND endl_opt if_expr
   50        | if_expr . OR endl_opt if_expr
   51        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53 dot_expr: if_expr . '.' endl_opt ID
   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr . endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 8
    '='               shift, and go to state 136
    MOD_ASSIGN        shift, and go to state 137
    DIV_ASSIGN        shift, and go to state 138
    MUL_ASSIGN        shift, and go to state 139
    MINUS_ASSIGN      shift, and go to state 140
    PLUS_ASSIGN       shift, and go to state 141
    '?'               shift, and go to state 142
    OR                shift, and go to state 143
    AND               shift, and go to state 144
    '<'               shift, and go to state 145
    '>'               shift, and go to state 146
    GREATER_OR_EQUAL  shift, and go to state 147
    LESS_OR_EQUAL     shift, and go to state 148
    NOT_EQUALS        shift, and go to state 149
    EQUALS            shift, and go to state 150
    '+'               shift, and go to state 151
    '-'               shift, and go to state 152
    '*'               shift, and go to state 153
    '/'               shift, and go to state 154
    '%'               shift, and go to state 155
    '.'               shift, and go to state 156

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 426


State 417

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   65 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ')' endl_opt empty_stmt

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 427


State 418

   71 case_stmt: DEFAULT endl_opt ':' . endl_opt stmt endl_opt break_opt
   72          | DEFAULT endl_opt ':' . endl_opt empty_stmt endl_opt break_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 428


State 419

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   69 case_stmt: CASE endl_opt expr . endl_opt ':' endl_opt stmt endl_opt break_opt
   70          | CASE endl_opt expr . endl_opt ':' endl_opt empty_stmt endl_opt break_opt

    INCREMENT  shift, and go to state 131
    DECREMENT  shift, and go to state 132
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 429


State 420

   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}' .

    $default  reduce using rule 66 (switch_stmt)


State 421

   79 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement .

    $default  reduce using rule 79 (catch_clause)


State 422

   81 error_type: UNKNOWN .

    $default  reduce using rule 81 (error_type)


State 423

   82 error_type: ANY .

    $default  reduce using rule 82 (error_type)


State 424

   80 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type . endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 430


State 425

  127 var_declaration: modifier ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']' .

    $default  reduce using rule 127 (var_declaration)


State 426

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt . ')' endl_opt stmt

    ')'  shift, and go to state 431


State 427

   65 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ')' endl_opt empty_stmt

    ')'  shift, and go to state 432


State 428

   71 case_stmt: DEFAULT endl_opt ':' endl_opt . stmt endl_opt break_opt
   72          | DEFAULT endl_opt ':' endl_opt . empty_stmt endl_opt break_opt

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    expr              go to state 86
    if_expr           go to state 87
    dot_expr          go to state 88
    block_statement   go to state 89
    if_stmt           go to state 90
    while_stmt        go to state 91
    do_while_stmt     go to state 92
    for_stmt          go to state 93
    switch_stmt       go to state 94
    try_catch_block   go to state 96
    stmt              go to state 433
    empty_stmt        go to state 434
    modifier          go to state 103
    var_declaration   go to state 104
    enum_declaration  go to state 105


State 429

   69 case_stmt: CASE endl_opt expr endl_opt . ':' endl_opt stmt endl_opt break_opt
   70          | CASE endl_opt expr endl_opt . ':' endl_opt empty_stmt endl_opt break_opt

    ':'  shift, and go to state 435


State 430

   80 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt . ')' endl_opt block_statement

    ')'  shift, and go to state 436


State 431

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' . endl_opt stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 437


State 432

   65 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' . endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 438


State 433

   71 case_stmt: DEFAULT endl_opt ':' endl_opt stmt . endl_opt break_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 439


State 434

   72 case_stmt: DEFAULT endl_opt ':' endl_opt empty_stmt . endl_opt break_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 440


State 435

   69 case_stmt: CASE endl_opt expr endl_opt ':' . endl_opt stmt endl_opt break_opt
   70          | CASE endl_opt expr endl_opt ':' . endl_opt empty_stmt endl_opt break_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 441


State 436

   80 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' . endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 442


State 437

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt . stmt

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    expr              go to state 86
    if_expr           go to state 87
    dot_expr          go to state 88
    block_statement   go to state 89
    if_stmt           go to state 90
    while_stmt        go to state 91
    do_while_stmt     go to state 92
    for_stmt          go to state 93
    switch_stmt       go to state 94
    try_catch_block   go to state 96
    stmt              go to state 443
    modifier          go to state 103
    var_declaration   go to state 104
    enum_declaration  go to state 105


State 438

   65 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt . empty_stmt

    ';'  shift, and go to state 80

    empty_stmt  go to state 444


State 439

   71 case_stmt: DEFAULT endl_opt ':' endl_opt stmt endl_opt . break_opt

    BREAK  shift, and go to state 445

    $default  reduce using rule 73 (break_opt)

    break_opt  go to state 446


State 440

   72 case_stmt: DEFAULT endl_opt ':' endl_opt empty_stmt endl_opt . break_opt

    BREAK  shift, and go to state 445

    $default  reduce using rule 73 (break_opt)

    break_opt  go to state 447


State 441

   69 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt . stmt endl_opt break_opt
   70          | CASE endl_opt expr endl_opt ':' endl_opt . empty_stmt endl_opt break_opt

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    expr              go to state 86
    if_expr           go to state 87
    dot_expr          go to state 88
    block_statement   go to state 89
    if_stmt           go to state 90
    while_stmt        go to state 91
    do_while_stmt     go to state 92
    for_stmt          go to state 93
    switch_stmt       go to state 94
    try_catch_block   go to state 96
    stmt              go to state 448
    empty_stmt        go to state 449
    modifier          go to state 103
    var_declaration   go to state 104
    enum_declaration  go to state 105


State 442

   80 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt . block_statement

    '{'  shift, and go to state 85

    block_statement  go to state 450


State 443

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 64 (for_stmt)


State 444

   65 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt .

    $default  reduce using rule 65 (for_stmt)


State 445

   74 break_opt: BREAK . stmt_sep

    ';'   shift, and go to state 133
    ENDL  shift, and go to state 8

    endl      go to state 134
    stmt_sep  go to state 451


State 446

   71 case_stmt: DEFAULT endl_opt ':' endl_opt stmt endl_opt break_opt .

    $default  reduce using rule 71 (case_stmt)


State 447

   72 case_stmt: DEFAULT endl_opt ':' endl_opt empty_stmt endl_opt break_opt .

    $default  reduce using rule 72 (case_stmt)


State 448

   69 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt . endl_opt break_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 452


State 449

   70 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt empty_stmt . endl_opt break_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 453


State 450

   80 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement .

    $default  reduce using rule 80 (catch_clause)


State 451

   74 break_opt: BREAK stmt_sep .

    $default  reduce using rule 74 (break_opt)


State 452

   69 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt endl_opt . break_opt

    BREAK  shift, and go to state 445

    $default  reduce using rule 73 (break_opt)

    break_opt  go to state 454


State 453

   70 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt empty_stmt endl_opt . break_opt

    BREAK  shift, and go to state 445

    $default  reduce using rule 73 (break_opt)

    break_opt  go to state 455


State 454

   69 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt endl_opt break_opt .

    $default  reduce using rule 69 (case_stmt)


State 455

   70 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt empty_stmt endl_opt break_opt .

    $default  reduce using rule 70 (case_stmt)
