Terminals unused in grammar

   INTERFACE
   CONSTRUCTOR
   NEW
   THIS
   DELETE
   EXPORT
   OF
   IN
   CONTINUE
   DECLARE
   CONSOLE
   IS
   PREF_DECREMENT
   PREF_INCREMENT
   POST_DECREMENT
   POST_INCREMENT


State 7 conflicts: 1 shift/reduce
State 9 conflicts: 1 shift/reduce
State 16 conflicts: 1 shift/reduce
State 21 conflicts: 1 shift/reduce
State 32 conflicts: 1 shift/reduce
State 38 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 102 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce
State 130 conflicts: 1 shift/reduce
State 155 conflicts: 1 shift/reduce, 1 reduce/reduce
State 170 conflicts: 2 shift/reduce
State 173 conflicts: 1 shift/reduce
State 188 conflicts: 2 shift/reduce
State 189 conflicts: 2 shift/reduce
State 192 conflicts: 1 shift/reduce
State 195 conflicts: 2 shift/reduce
State 196 conflicts: 2 shift/reduce
State 197 conflicts: 1 shift/reduce
State 229 conflicts: 1 shift/reduce
State 230 conflicts: 1 shift/reduce
State 231 conflicts: 1 shift/reduce
State 233 conflicts: 1 shift/reduce
State 276 conflicts: 1 shift/reduce, 1 reduce/reduce
State 278 conflicts: 1 shift/reduce
State 294 conflicts: 1 shift/reduce, 1 reduce/reduce
State 327 conflicts: 1 shift/reduce
State 342 conflicts: 1 shift/reduce
State 350 conflicts: 1 shift/reduce
State 361 conflicts: 22 shift/reduce
State 378 conflicts: 1 shift/reduce
State 400 conflicts: 1 shift/reduce
State 431 conflicts: 1 shift/reduce
State 432 conflicts: 1 shift/reduce
State 446 conflicts: 1 shift/reduce
State 447 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_elem
    2        | program program_elem

    3 program_elem: class_list
    4             | function_declaration

    5 endl: ENDL
    6     | endl ENDL

    7 endl_opt: /* empty */
    8         | endl

    9 stmt_sep: ';'
   10         | endl

   11 expr_list: expr
   12          | expr_list endl_opt ',' endl_opt expr

   13 expr_list_opt: /* empty */
   14              | expr_list

   15 expr: if_expr
   16     | expr DECREMENT
   17     | DECREMENT endl_opt expr
   18     | expr INCREMENT
   19     | INCREMENT endl_opt expr
   20     | ID AS endl_opt type
   21     | '-' endl_opt expr
   22     | '+' endl_opt expr

   23 if_expr: NUMBER_LITERAL
   24        | STRING_LITERAL
   25        | TRUE_LITERAL
   26        | FALSE_LITERAL
   27        | ID
   28        | '(' endl_opt if_expr endl_opt ')'
   29        | if_expr '.' endl_opt ID
   30        | if_expr '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   31        | ID '(' expr_list_opt ')'
   32        | if_expr '+' endl_opt if_expr
   33        | if_expr '-' endl_opt if_expr
   34        | if_expr '*' endl_opt if_expr
   35        | if_expr '/' endl_opt if_expr
   36        | if_expr '%' endl_opt if_expr
   37        | if_expr '<' endl_opt if_expr
   38        | if_expr '>' endl_opt if_expr
   39        | if_expr LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr EQUALS endl_opt if_expr
   42        | if_expr NOT_EQUALS endl_opt if_expr
   43        | if_expr '=' endl_opt if_expr
   44        | if_expr PLUS_ASSIGN endl_opt if_expr
   45        | if_expr MINUS_ASSIGN endl_opt if_expr
   46        | if_expr MUL_ASSIGN endl_opt if_expr
   47        | if_expr DIV_ASSIGN endl_opt if_expr
   48        | if_expr MOD_ASSIGN endl_opt if_expr
   49        | NOT endl_opt if_expr
   50        | if_expr AND endl_opt if_expr
   51        | if_expr OR endl_opt if_expr
   52        | if_expr '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr dimensions_expr_list

   54 block_statement: '{' endl_opt stmt_list_opt '}'

   55 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement
   56        | IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt if_expr
   57        | IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

   58 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt stmt
   59           | WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt empty_stmt

   60 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'
   61              | DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

   62 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt
   63         | FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

   64 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

   65 case_list: case_stmt
   66          | case_list case_stmt

   67 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt endl_opt break_opt
   68          | CASE endl_opt expr endl_opt ':' endl_opt empty_stmt endl_opt break_opt
   69          | DEFAULT endl_opt ':' endl_opt stmt endl_opt break_opt
   70          | DEFAULT endl_opt ':' endl_opt empty_stmt endl_opt break_opt

   71 break_opt: /* empty */
   72          | BREAK stmt_sep

   73 return_statement: RETURN expr stmt_sep

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   75                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

   76 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement
   78             | CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

   79 error_type: UNKNOWN
   80           | ANY

   81 stmt_list_opt: /* empty */
   82              | stmt_list endl_opt

   83 stmt_list: stmt
   84          | empty_stmt
   85          | stmt_list stmt
   86          | stmt_list empty_stmt

   87 func_stmt_list_opt: /* empty */
   88                   | func_stmt_list

   89 func_stmt_list: func_elem
   90               | func_stmt_list func_elem

   91 func_elem: func_stmt
   92          | empty_stmt

   93 stmt: expr stmt_sep
   94     | if_stmt
   95     | while_stmt
   96     | for_stmt
   97     | do_while_stmt stmt_sep
   98     | switch_stmt
   99     | try_catch_block
  100     | block_statement
  101     | var_declaration stmt_sep
  102     | enum_declaration

  103 func_stmt: return_statement
  104          | stmt

  105 empty_stmt: ';'

  106 modifier: LET
  107         | CONST

  108 type: NUMBER
  109     | STRING
  110     | BOOLEAN
  111     | ANY
  112     | UNKNOWN
  113     | VOID
  114     | ID

  115 type_mark: ':' endl_opt type

  116 type_mark_opt: /* empty */
  117              | type_mark

  118 variable: ID endl_opt type_mark_opt

  119 var_init_opt: /* empty */
  120             | endl_opt '=' endl_opt expr

  121 var_list: variable var_init_opt
  122         | var_list endl_opt ',' endl_opt variable var_init_opt

  123 var_declaration: modifier endl_opt var_list
  124                | modifier ID endl_opt type_mark endl_opt dimensions_list
  125                | modifier ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'

  126 dimensions: '[' endl_opt ']'

  127 dimensions_list: dimensions
  128                | dimensions_list dimensions

  129 dimensions_expr: '[' endl_opt expr endl_opt ']'

  130 dimensions_expr_list: dimensions_expr
  131                     | dimensions_expr_list endl_opt dimensions_expr

  132 param: ID endl_opt type_mark

  133 optional_param: ID endl_opt '?' endl_opt type_mark

  134 param_list: param
  135           | param_list endl_opt ',' endl_opt param
  136           | optional_param
  137           | param_list endl_opt ',' endl_opt optional_param

  138 param_list_0_or_more: '(' endl_opt param_list endl_opt ')'
  139                     | '(' ')'

  140 extends_decl: /* empty */
  141             | EXTENDS endl_opt ID

  142 implements_decl_opt: /* empty */
  143                    | implements_decl

  144 implements_decl: IMPLEMENTS endl_opt ID
  145                | implements_decl endl_opt ',' endl_opt ID

  146 property_modifier: visibility
  147                  | visibility READONLY
  148                  | READONLY
  149                  | visibility STATIC
  150                  | STATIC
  151                  | visibility STATIC READONLY

  152 visibility: PRIVATE
  153           | PROTECTED
  154           | PUBLIC

  155 class_member: property_modifier expr endl_opt stmt_sep
  156             | function_declaration
  157             | class_declaration

  158 class_visibility_member: class_member
  159                        | visibility endl_opt class_member

  160 class_visibility_member_list: class_visibility_member
  161                             | class_visibility_member_list endl_opt class_visibility_member

  162 class_body: /* empty */
  163           | class_visibility_member_list

  164 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

  165 class_list: class_declaration
  166           | class_list class_declaration

  167 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}'

  168 id_list: ID var_init_opt
  169        | id_list endl_opt ',' endl_opt ID var_init_opt


Terminals, with rules where they appear

$end (0) 0
'%' (37) 36
'(' (40) 28 30 31 55 56 57 58 59 60 61 62 63 64 77 78 138 139
')' (41) 28 30 31 55 56 57 58 59 60 61 62 63 64 77 78 138 139
'*' (42) 34
'+' (43) 22 32
',' (44) 12 122 135 137 145 169
'-' (45) 21 33
'.' (46) 29 30
'/' (47) 35
':' (58) 52 67 68 69 70 78 115
';' (59) 9 62 63 105
'<' (60) 37
'=' (61) 43 120 125
'>' (62) 38
'?' (63) 52 133
'[' (91) 125 126 129
']' (93) 125 126 129
'{' (123) 54 64 74 75 164 167
'}' (125) 54 64 74 75 164 167
error (256)
INTERFACE (258)
IMPLEMENTS (259) 144
CONSTRUCTOR (260)
NEW (261)
EXTENDS (262) 141
THIS (263)
CLASS (264) 164
STATIC (265) 149 150 151
RETURN (266) 73
DELETE (267)
EXPORT (268)
PUBLIC (269) 154
PROTECTED (270) 153
PRIVATE (271) 152
READONLY (272) 147 148 151
DO (273) 60 61
IF (274) 55 56 57
ELSE (275) 57
FOR (276) 62 63
OF (277)
IN (278)
WHILE (279) 58 59 60 61
BREAK (280) 72
CONTINUE (281)
DEFAULT (282) 69 70
SWITCH (283) 64
CASE (284) 67 68
TRY (285) 76
CATCH (286) 77 78
INCREMENT (287) 18 19
DECREMENT (288) 16 17
LET (289) 106
CONST (290) 107
FUNC (291) 74 75
DECLARE (292)
UNKNOWN (293) 79 112
ANY (294) 80 111
NUMBER (295) 108
STRING (296) 109
VOID (297) 113
BOOLEAN (298) 110
ENUM (299) 167
NUMBER_LITERAL (300) 23
STRING_LITERAL (301) 24
TRUE_LITERAL (302) 25
FALSE_LITERAL (303) 26
ID (304) 20 27 29 30 31 74 75 77 78 114 118 124 125 132 133 141 144
    145 164 167 168 169
CONSOLE (305)
ENDL (306) 5 6
MOD_ASSIGN (307) 48
DIV_ASSIGN (308) 47
MUL_ASSIGN (309) 46
MINUS_ASSIGN (310) 45
PLUS_ASSIGN (311) 44
OR (312) 51
AND (313) 50
AS (314) 20
IS (315)
GREATER_OR_EQUAL (316) 40
LESS_OR_EQUAL (317) 39
NOT_EQUALS (318) 42
EQUALS (319) 41
PREF_DECREMENT (320)
PREF_INCREMENT (321)
POST_DECREMENT (322)
POST_INCREMENT (323)
UMINUS (324)
UPLUS (325)
NOT (326) 49


Nonterminals, with rules where they appear

$accept (91)
    on left: 0
program (92)
    on left: 1 2, on right: 0 2
program_elem (93)
    on left: 3 4, on right: 1 2
endl (94)
    on left: 5 6, on right: 6 8 10
endl_opt (95)
    on left: 7 8, on right: 12 17 19 20 21 22 28 29 30 32 33 34 35
    36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 54 55 56 57
    58 59 60 61 62 63 64 67 68 69 70 74 75 76 77 78 82 115 118 120
    122 123 124 125 126 129 131 132 133 135 137 138 141 144 145 155
    159 161 164 167 169
stmt_sep (96)
    on left: 9 10, on right: 72 73 93 97 101 155
expr_list (97)
    on left: 11 12, on right: 12 14
expr_list_opt (98)
    on left: 13 14, on right: 30 31 125
expr (99)
    on left: 15 16 17 18 19 20 21 22, on right: 11 12 16 17 18 19 21
    22 60 61 62 63 64 67 68 73 93 120 129 155
if_expr (100)
    on left: 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
    41 42 43 44 45 46 47 48 49 50 51 52 53, on right: 15 28 29 30 32
    33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    55 56 57 58 59 62 63
block_statement (101)
    on left: 54, on right: 55 57 76 77 78 100
if_stmt (102)
    on left: 55 56 57, on right: 94
while_stmt (103)
    on left: 58 59, on right: 95
do_while_stmt (104)
    on left: 60 61, on right: 97
for_stmt (105)
    on left: 62 63, on right: 96
switch_stmt (106)
    on left: 64, on right: 98
case_list (107)
    on left: 65 66, on right: 64 66
case_stmt (108)
    on left: 67 68 69 70, on right: 65 66
break_opt (109)
    on left: 71 72, on right: 67 68 69 70
return_statement (110)
    on left: 73, on right: 103
function_declaration (111)
    on left: 74 75, on right: 4 156
try_catch_block (112)
    on left: 76, on right: 99
catch_clause (113)
    on left: 77 78, on right: 76
error_type (114)
    on left: 79 80, on right: 78
stmt_list_opt (115)
    on left: 81 82, on right: 54
stmt_list (116)
    on left: 83 84 85 86, on right: 82 85 86
func_stmt_list_opt (117)
    on left: 87 88, on right: 74 75
func_stmt_list (118)
    on left: 89 90, on right: 88 90
func_elem (119)
    on left: 91 92, on right: 89 90
stmt (120)
    on left: 93 94 95 96 97 98 99 100 101 102, on right: 58 60 62 67
    69 83 85 104
func_stmt (121)
    on left: 103 104, on right: 91
empty_stmt (122)
    on left: 105, on right: 59 61 63 68 70 84 86 92
modifier (123)
    on left: 106 107, on right: 123 124 125
type (124)
    on left: 108 109 110 111 112 113 114, on right: 20 115
type_mark (125)
    on left: 115, on right: 74 117 124 125 132 133
type_mark_opt (126)
    on left: 116 117, on right: 118
variable (127)
    on left: 118, on right: 121 122
var_init_opt (128)
    on left: 119 120, on right: 121 122 168 169
var_list (129)
    on left: 121 122, on right: 122 123
var_declaration (130)
    on left: 123 124 125, on right: 101
dimensions (131)
    on left: 126, on right: 127 128
dimensions_list (132)
    on left: 127 128, on right: 124 125 128
dimensions_expr (133)
    on left: 129, on right: 130 131
dimensions_expr_list (134)
    on left: 130 131, on right: 53 131
param (135)
    on left: 132, on right: 134 135
optional_param (136)
    on left: 133, on right: 136 137
param_list (137)
    on left: 134 135 136 137, on right: 135 137 138
param_list_0_or_more (138)
    on left: 138 139, on right: 74 75
extends_decl (139)
    on left: 140 141, on right: 164
implements_decl_opt (140)
    on left: 142 143, on right: 164
implements_decl (141)
    on left: 144 145, on right: 143 145
property_modifier (142)
    on left: 146 147 148 149 150 151, on right: 155
visibility (143)
    on left: 152 153 154, on right: 146 147 149 151 159
class_member (144)
    on left: 155 156 157, on right: 158 159
class_visibility_member (145)
    on left: 158 159, on right: 160 161
class_visibility_member_list (146)
    on left: 160 161, on right: 161 163
class_body (147)
    on left: 162 163, on right: 164
class_declaration (148)
    on left: 164, on right: 157 165 166
class_list (149)
    on left: 165 166, on right: 3 166
enum_declaration (150)
    on left: 167, on right: 102
id_list (151)
    on left: 168 169, on right: 167 169


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1
    FUNC   shift, and go to state 2

    program               go to state 3
    program_elem          go to state 4
    function_declaration  go to state 5
    class_declaration     go to state 6
    class_list            go to state 7


State 1

  164 class_declaration: CLASS . endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 10


State 2

   74 function_declaration: FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   75                     | FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 11


State 3

    0 $accept: program . $end
    2 program: program . program_elem

    $end   shift, and go to state 12
    CLASS  shift, and go to state 1
    FUNC   shift, and go to state 2

    program_elem          go to state 13
    function_declaration  go to state 5
    class_declaration     go to state 6
    class_list            go to state 7


State 4

    1 program: program_elem .

    $default  reduce using rule 1 (program)


State 5

    4 program_elem: function_declaration .

    $default  reduce using rule 4 (program_elem)


State 6

  165 class_list: class_declaration .

    $default  reduce using rule 165 (class_list)


State 7

    3 program_elem: class_list .
  166 class_list: class_list . class_declaration

    CLASS  shift, and go to state 1

    CLASS     [reduce using rule 3 (program_elem)]
    $default  reduce using rule 3 (program_elem)

    class_declaration  go to state 14


State 8

    5 endl: ENDL .

    $default  reduce using rule 5 (endl)


State 9

    6 endl: endl . ENDL
    8 endl_opt: endl .

    ENDL  shift, and go to state 15

    ENDL      [reduce using rule 8 (endl_opt)]
    $default  reduce using rule 8 (endl_opt)


State 10

  164 class_declaration: CLASS endl_opt . ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    ID  shift, and go to state 16


State 11

   74 function_declaration: FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   75                     | FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    ID  shift, and go to state 17


State 12

    0 $accept: program $end .

    $default  accept


State 13

    2 program: program program_elem .

    $default  reduce using rule 2 (program)


State 14

  166 class_list: class_list class_declaration .

    $default  reduce using rule 166 (class_list)


State 15

    6 endl: endl ENDL .

    $default  reduce using rule 6 (endl)


State 16

  164 class_declaration: CLASS endl_opt ID . endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 18


State 17

   74 function_declaration: FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   75                     | FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 19


State 18

  164 class_declaration: CLASS endl_opt ID endl_opt . extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    EXTENDS  shift, and go to state 20

    $default  reduce using rule 140 (extends_decl)

    extends_decl  go to state 21


State 19

   74 function_declaration: FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   75                     | FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    '('  shift, and go to state 22

    param_list_0_or_more  go to state 23


State 20

  141 extends_decl: EXTENDS . endl_opt ID

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 24


State 21

  164 class_declaration: CLASS endl_opt ID endl_opt extends_decl . endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 25


State 22

  138 param_list_0_or_more: '(' . endl_opt param_list endl_opt ')'
  139                     | '(' . ')'

    ENDL  shift, and go to state 8
    ')'   shift, and go to state 26

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 27


State 23

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   75                     | FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 28


State 24

  141 extends_decl: EXTENDS endl_opt . ID

    ID  shift, and go to state 29


State 25

  164 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt . implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}'

    IMPLEMENTS  shift, and go to state 30

    $default  reduce using rule 142 (implements_decl_opt)

    implements_decl_opt  go to state 31
    implements_decl      go to state 32


State 26

  139 param_list_0_or_more: '(' ')' .

    $default  reduce using rule 139 (param_list_0_or_more)


State 27

  138 param_list_0_or_more: '(' endl_opt . param_list endl_opt ')'

    ID  shift, and go to state 33

    param           go to state 34
    optional_param  go to state 35
    param_list      go to state 36


State 28

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'
   75                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . '{' endl_opt func_stmt_list_opt endl_opt '}'

    ':'  shift, and go to state 37
    '{'  shift, and go to state 38

    type_mark  go to state 39


State 29

  141 extends_decl: EXTENDS endl_opt ID .

    $default  reduce using rule 141 (extends_decl)


State 30

  144 implements_decl: IMPLEMENTS . endl_opt ID

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 40


State 31

  164 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt . endl_opt '{' endl_opt class_body endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 41


State 32

  143 implements_decl_opt: implements_decl .
  145 implements_decl: implements_decl . endl_opt ',' endl_opt ID

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 143 (implements_decl_opt)]
    '{'       reduce using rule 143 (implements_decl_opt)
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 42


State 33

  132 param: ID . endl_opt type_mark
  133 optional_param: ID . endl_opt '?' endl_opt type_mark

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 43


State 34

  134 param_list: param .

    $default  reduce using rule 134 (param_list)


State 35

  136 param_list: optional_param .

    $default  reduce using rule 136 (param_list)


State 36

  135 param_list: param_list . endl_opt ',' endl_opt param
  137           | param_list . endl_opt ',' endl_opt optional_param
  138 param_list_0_or_more: '(' endl_opt param_list . endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 44


State 37

  115 type_mark: ':' . endl_opt type

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 45


State 38

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' . endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 46


State 39

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark . endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 47


State 40

  144 implements_decl: IMPLEMENTS endl_opt . ID

    ID  shift, and go to state 48


State 41

  164 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt . '{' endl_opt class_body endl_opt '}'

    '{'  shift, and go to state 49


State 42

  145 implements_decl: implements_decl endl_opt . ',' endl_opt ID

    ','  shift, and go to state 50


State 43

  132 param: ID endl_opt . type_mark
  133 optional_param: ID endl_opt . '?' endl_opt type_mark

    '?'  shift, and go to state 51
    ':'  shift, and go to state 37

    type_mark  go to state 52


State 44

  135 param_list: param_list endl_opt . ',' endl_opt param
  137           | param_list endl_opt . ',' endl_opt optional_param
  138 param_list_0_or_more: '(' endl_opt param_list endl_opt . ')'

    ')'  shift, and go to state 53
    ','  shift, and go to state 54


State 45

  115 type_mark: ':' endl_opt . type

    UNKNOWN  shift, and go to state 55
    ANY      shift, and go to state 56
    NUMBER   shift, and go to state 57
    STRING   shift, and go to state 58
    VOID     shift, and go to state 59
    BOOLEAN  shift, and go to state 60
    ID       shift, and go to state 61

    type  go to state 62


State 46

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt . func_stmt_list_opt endl_opt '}'

    RETURN          shift, and go to state 63
    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    $default  reduce using rule 87 (func_stmt_list_opt)

    expr                go to state 86
    if_expr             go to state 87
    block_statement     go to state 88
    if_stmt             go to state 89
    while_stmt          go to state 90
    do_while_stmt       go to state 91
    for_stmt            go to state 92
    switch_stmt         go to state 93
    return_statement    go to state 94
    try_catch_block     go to state 95
    func_stmt_list_opt  go to state 96
    func_stmt_list      go to state 97
    func_elem           go to state 98
    stmt                go to state 99
    func_stmt           go to state 100
    empty_stmt          go to state 101
    modifier            go to state 102
    var_declaration     go to state 103
    enum_declaration    go to state 104


State 47

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt . '{' endl_opt func_stmt_list_opt endl_opt '}'

    '{'  shift, and go to state 105


State 48

  144 implements_decl: IMPLEMENTS endl_opt ID .

    $default  reduce using rule 144 (implements_decl)


State 49

  164 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' . endl_opt class_body endl_opt '}'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 106


State 50

  145 implements_decl: implements_decl endl_opt ',' . endl_opt ID

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 107


State 51

  133 optional_param: ID endl_opt '?' . endl_opt type_mark

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 108


State 52

  132 param: ID endl_opt type_mark .

    $default  reduce using rule 132 (param)


State 53

  138 param_list_0_or_more: '(' endl_opt param_list endl_opt ')' .

    $default  reduce using rule 138 (param_list_0_or_more)


State 54

  135 param_list: param_list endl_opt ',' . endl_opt param
  137           | param_list endl_opt ',' . endl_opt optional_param

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 109


State 55

  112 type: UNKNOWN .

    $default  reduce using rule 112 (type)


State 56

  111 type: ANY .

    $default  reduce using rule 111 (type)


State 57

  108 type: NUMBER .

    $default  reduce using rule 108 (type)


State 58

  109 type: STRING .

    $default  reduce using rule 109 (type)


State 59

  113 type: VOID .

    $default  reduce using rule 113 (type)


State 60

  110 type: BOOLEAN .

    $default  reduce using rule 110 (type)


State 61

  114 type: ID .

    $default  reduce using rule 114 (type)


State 62

  115 type_mark: ':' endl_opt type .

    $default  reduce using rule 115 (type_mark)


State 63

   73 return_statement: RETURN . expr stmt_sep

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 110
    if_expr  go to state 87


State 64

   60 do_while_stmt: DO . endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'
   61              | DO . endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 111


State 65

   55 if_stmt: IF . endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement
   56        | IF . endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt if_expr
   57        | IF . endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 112


State 66

   62 for_stmt: FOR . endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt
   63         | FOR . endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 113


State 67

   58 while_stmt: WHILE . endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt stmt
   59           | WHILE . endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 114


State 68

   64 switch_stmt: SWITCH . endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 115


State 69

   76 try_catch_block: TRY . endl_opt block_statement endl_opt catch_clause

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 116


State 70

   19 expr: INCREMENT . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 117


State 71

   17 expr: DECREMENT . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 118


State 72

  106 modifier: LET .

    $default  reduce using rule 106 (modifier)


State 73

  107 modifier: CONST .

    $default  reduce using rule 107 (modifier)


State 74

  167 enum_declaration: ENUM . endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 119


State 75

   23 if_expr: NUMBER_LITERAL .

    $default  reduce using rule 23 (if_expr)


State 76

   24 if_expr: STRING_LITERAL .

    $default  reduce using rule 24 (if_expr)


State 77

   25 if_expr: TRUE_LITERAL .

    $default  reduce using rule 25 (if_expr)


State 78

   26 if_expr: FALSE_LITERAL .

    $default  reduce using rule 26 (if_expr)


State 79

   20 expr: ID . AS endl_opt type
   27 if_expr: ID .
   31        | ID . '(' expr_list_opt ')'

    AS   shift, and go to state 120
    '('  shift, and go to state 121

    $default  reduce using rule 27 (if_expr)


State 80

  105 empty_stmt: ';' .

    $default  reduce using rule 105 (empty_stmt)


State 81

   22 expr: '+' . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 122


State 82

   21 expr: '-' . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 123


State 83

   49 if_expr: NOT . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 124


State 84

   28 if_expr: '(' . endl_opt if_expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 125


State 85

   54 block_statement: '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 126


State 86

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   93 stmt: expr . stmt_sep

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ';'        shift, and go to state 129
    ENDL       shift, and go to state 8

    endl      go to state 130
    stmt_sep  go to state 131


State 87

   15 expr: if_expr .
   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '['               shift, and go to state 138
    '?'               shift, and go to state 139
    OR                shift, and go to state 140
    AND               shift, and go to state 141
    '<'               shift, and go to state 142
    '>'               shift, and go to state 143
    GREATER_OR_EQUAL  shift, and go to state 144
    LESS_OR_EQUAL     shift, and go to state 145
    NOT_EQUALS        shift, and go to state 146
    EQUALS            shift, and go to state 147
    '+'               shift, and go to state 148
    '-'               shift, and go to state 149
    '*'               shift, and go to state 150
    '/'               shift, and go to state 151
    '%'               shift, and go to state 152
    '.'               shift, and go to state 153

    $default  reduce using rule 15 (expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 88

  100 stmt: block_statement .

    $default  reduce using rule 100 (stmt)


State 89

   94 stmt: if_stmt .

    $default  reduce using rule 94 (stmt)


State 90

   95 stmt: while_stmt .

    $default  reduce using rule 95 (stmt)


State 91

   97 stmt: do_while_stmt . stmt_sep

    ';'   shift, and go to state 129
    ENDL  shift, and go to state 8

    endl      go to state 130
    stmt_sep  go to state 156


State 92

   96 stmt: for_stmt .

    $default  reduce using rule 96 (stmt)


State 93

   98 stmt: switch_stmt .

    $default  reduce using rule 98 (stmt)


State 94

  103 func_stmt: return_statement .

    $default  reduce using rule 103 (func_stmt)


State 95

   99 stmt: try_catch_block .

    $default  reduce using rule 99 (stmt)


State 96

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt . endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 157


State 97

   88 func_stmt_list_opt: func_stmt_list .
   90 func_stmt_list: func_stmt_list . func_elem

    RETURN          shift, and go to state 63
    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    $default  reduce using rule 88 (func_stmt_list_opt)

    expr              go to state 86
    if_expr           go to state 87
    block_statement   go to state 88
    if_stmt           go to state 89
    while_stmt        go to state 90
    do_while_stmt     go to state 91
    for_stmt          go to state 92
    switch_stmt       go to state 93
    return_statement  go to state 94
    try_catch_block   go to state 95
    func_elem         go to state 158
    stmt              go to state 99
    func_stmt         go to state 100
    empty_stmt        go to state 101
    modifier          go to state 102
    var_declaration   go to state 103
    enum_declaration  go to state 104


State 98

   89 func_stmt_list: func_elem .

    $default  reduce using rule 89 (func_stmt_list)


State 99

  104 func_stmt: stmt .

    $default  reduce using rule 104 (func_stmt)


State 100

   91 func_elem: func_stmt .

    $default  reduce using rule 91 (func_elem)


State 101

   92 func_elem: empty_stmt .

    $default  reduce using rule 92 (func_elem)


State 102

  123 var_declaration: modifier . endl_opt var_list
  124                | modifier . ID endl_opt type_mark endl_opt dimensions_list
  125                | modifier . ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'

    ID    shift, and go to state 159
    ENDL  shift, and go to state 8

    ID  [reduce using rule 7 (endl_opt)]

    endl      go to state 9
    endl_opt  go to state 160


State 103

  101 stmt: var_declaration . stmt_sep

    ';'   shift, and go to state 129
    ENDL  shift, and go to state 8

    endl      go to state 130
    stmt_sep  go to state 161


State 104

  102 stmt: enum_declaration .

    $default  reduce using rule 102 (stmt)


State 105

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' . endl_opt func_stmt_list_opt endl_opt '}'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 162


State 106

  164 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt . class_body endl_opt '}'

    CLASS      shift, and go to state 1
    STATIC     shift, and go to state 163
    PUBLIC     shift, and go to state 164
    PROTECTED  shift, and go to state 165
    PRIVATE    shift, and go to state 166
    READONLY   shift, and go to state 167
    FUNC       shift, and go to state 2

    $default  reduce using rule 162 (class_body)

    function_declaration          go to state 168
    property_modifier             go to state 169
    visibility                    go to state 170
    class_member                  go to state 171
    class_visibility_member       go to state 172
    class_visibility_member_list  go to state 173
    class_body                    go to state 174
    class_declaration             go to state 175


State 107

  145 implements_decl: implements_decl endl_opt ',' endl_opt . ID

    ID  shift, and go to state 176


State 108

  133 optional_param: ID endl_opt '?' endl_opt . type_mark

    ':'  shift, and go to state 37

    type_mark  go to state 177


State 109

  135 param_list: param_list endl_opt ',' endl_opt . param
  137           | param_list endl_opt ',' endl_opt . optional_param

    ID  shift, and go to state 33

    param           go to state 178
    optional_param  go to state 179


State 110

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   73 return_statement: RETURN expr . stmt_sep

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ';'        shift, and go to state 129
    ENDL       shift, and go to state 8

    endl      go to state 130
    stmt_sep  go to state 180


State 111

   60 do_while_stmt: DO endl_opt . stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'
   61              | DO endl_opt . empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    expr              go to state 86
    if_expr           go to state 87
    block_statement   go to state 88
    if_stmt           go to state 89
    while_stmt        go to state 90
    do_while_stmt     go to state 91
    for_stmt          go to state 92
    switch_stmt       go to state 93
    try_catch_block   go to state 95
    stmt              go to state 181
    empty_stmt        go to state 182
    modifier          go to state 102
    var_declaration   go to state 103
    enum_declaration  go to state 104


State 112

   55 if_stmt: IF endl_opt . '(' endl_opt if_expr endl_opt ')' endl_opt block_statement
   56        | IF endl_opt . '(' endl_opt if_expr endl_opt ')' endl_opt if_expr
   57        | IF endl_opt . '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    '('  shift, and go to state 183


State 113

   62 for_stmt: FOR endl_opt . '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt
   63         | FOR endl_opt . '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    '('  shift, and go to state 184


State 114

   58 while_stmt: WHILE endl_opt . '(' endl_opt if_expr endl_opt ')' endl_opt stmt
   59           | WHILE endl_opt . '(' endl_opt if_expr endl_opt ')' endl_opt empty_stmt

    '('  shift, and go to state 185


State 115

   64 switch_stmt: SWITCH endl_opt . '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

    '('  shift, and go to state 186


State 116

   76 try_catch_block: TRY endl_opt . block_statement endl_opt catch_clause

    '{'  shift, and go to state 85

    block_statement  go to state 187


State 117

   19 expr: INCREMENT endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 188
    if_expr  go to state 87


State 118

   17 expr: DECREMENT endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 189
    if_expr  go to state 87


State 119

  167 enum_declaration: ENUM endl_opt . ID endl_opt '{' endl_opt id_list endl_opt '}'

    ID  shift, and go to state 190


State 120

   20 expr: ID AS . endl_opt type

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 191


State 121

   31 if_expr: ID '(' . expr_list_opt ')'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 192
    expr_list_opt  go to state 193
    expr           go to state 194
    if_expr        go to state 87


State 122

   22 expr: '+' endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 195
    if_expr  go to state 87


State 123

   21 expr: '-' endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 196
    if_expr  go to state 87


State 124

   49 if_expr: NOT endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 198


State 125

   28 if_expr: '(' endl_opt . if_expr endl_opt ')'

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 199


State 126

   54 block_statement: '{' endl_opt . stmt_list_opt '}'

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    $default  reduce using rule 81 (stmt_list_opt)

    expr              go to state 86
    if_expr           go to state 87
    block_statement   go to state 88
    if_stmt           go to state 89
    while_stmt        go to state 90
    do_while_stmt     go to state 91
    for_stmt          go to state 92
    switch_stmt       go to state 93
    try_catch_block   go to state 95
    stmt_list_opt     go to state 200
    stmt_list         go to state 201
    stmt              go to state 202
    empty_stmt        go to state 203
    modifier          go to state 102
    var_declaration   go to state 103
    enum_declaration  go to state 104


State 127

   18 expr: expr INCREMENT .

    $default  reduce using rule 18 (expr)


State 128

   16 expr: expr DECREMENT .

    $default  reduce using rule 16 (expr)


State 129

    9 stmt_sep: ';' .

    $default  reduce using rule 9 (stmt_sep)


State 130

    6 endl: endl . ENDL
   10 stmt_sep: endl .

    ENDL  shift, and go to state 15

    ENDL      [reduce using rule 10 (stmt_sep)]
    $default  reduce using rule 10 (stmt_sep)


State 131

   93 stmt: expr stmt_sep .

    $default  reduce using rule 93 (stmt)


State 132

   43 if_expr: if_expr '=' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 204


State 133

   48 if_expr: if_expr MOD_ASSIGN . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 205


State 134

   47 if_expr: if_expr DIV_ASSIGN . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 206


State 135

   46 if_expr: if_expr MUL_ASSIGN . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 207


State 136

   45 if_expr: if_expr MINUS_ASSIGN . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 208


State 137

   44 if_expr: if_expr PLUS_ASSIGN . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 209


State 138

  129 dimensions_expr: '[' . endl_opt expr endl_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 210


State 139

   52 if_expr: if_expr '?' . endl_opt if_expr endl_opt ':' endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 211


State 140

   51 if_expr: if_expr OR . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 212


State 141

   50 if_expr: if_expr AND . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 213


State 142

   37 if_expr: if_expr '<' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 214


State 143

   38 if_expr: if_expr '>' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 215


State 144

   40 if_expr: if_expr GREATER_OR_EQUAL . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 216


State 145

   39 if_expr: if_expr LESS_OR_EQUAL . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 217


State 146

   42 if_expr: if_expr NOT_EQUALS . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 218


State 147

   41 if_expr: if_expr EQUALS . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 219


State 148

   32 if_expr: if_expr '+' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 220


State 149

   33 if_expr: if_expr '-' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 221


State 150

   34 if_expr: if_expr '*' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 222


State 151

   35 if_expr: if_expr '/' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 223


State 152

   36 if_expr: if_expr '%' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 224


State 153

   29 if_expr: if_expr '.' . endl_opt ID
   30        | if_expr '.' . endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 225


State 154

  130 dimensions_expr_list: dimensions_expr .

    $default  reduce using rule 130 (dimensions_expr_list)


State 155

   53 if_expr: if_expr dimensions_expr_list .
  131 dimensions_expr_list: dimensions_expr_list . endl_opt dimensions_expr

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 53 (if_expr)]
    '['       reduce using rule 7 (endl_opt)
    '['       [reduce using rule 53 (if_expr)]
    $default  reduce using rule 53 (if_expr)

    endl      go to state 9
    endl_opt  go to state 226


State 156

   97 stmt: do_while_stmt stmt_sep .

    $default  reduce using rule 97 (stmt)


State 157

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt . '}'

    '}'  shift, and go to state 227


State 158

   90 func_stmt_list: func_stmt_list func_elem .

    $default  reduce using rule 90 (func_stmt_list)


State 159

  124 var_declaration: modifier ID . endl_opt type_mark endl_opt dimensions_list
  125                | modifier ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 228


State 160

  123 var_declaration: modifier endl_opt . var_list

    ID  shift, and go to state 229

    variable  go to state 230
    var_list  go to state 231


State 161

  101 stmt: var_declaration stmt_sep .

    $default  reduce using rule 101 (stmt)


State 162

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt . func_stmt_list_opt endl_opt '}'

    RETURN          shift, and go to state 63
    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    $default  reduce using rule 87 (func_stmt_list_opt)

    expr                go to state 86
    if_expr             go to state 87
    block_statement     go to state 88
    if_stmt             go to state 89
    while_stmt          go to state 90
    do_while_stmt       go to state 91
    for_stmt            go to state 92
    switch_stmt         go to state 93
    return_statement    go to state 94
    try_catch_block     go to state 95
    func_stmt_list_opt  go to state 232
    func_stmt_list      go to state 97
    func_elem           go to state 98
    stmt                go to state 99
    func_stmt           go to state 100
    empty_stmt          go to state 101
    modifier            go to state 102
    var_declaration     go to state 103
    enum_declaration    go to state 104


State 163

  150 property_modifier: STATIC .

    $default  reduce using rule 150 (property_modifier)


State 164

  154 visibility: PUBLIC .

    $default  reduce using rule 154 (visibility)


State 165

  153 visibility: PROTECTED .

    $default  reduce using rule 153 (visibility)


State 166

  152 visibility: PRIVATE .

    $default  reduce using rule 152 (visibility)


State 167

  148 property_modifier: READONLY .

    $default  reduce using rule 148 (property_modifier)


State 168

  156 class_member: function_declaration .

    $default  reduce using rule 156 (class_member)


State 169

  155 class_member: property_modifier . expr endl_opt stmt_sep

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 233
    if_expr  go to state 87


State 170

  146 property_modifier: visibility .
  147                  | visibility . READONLY
  149                  | visibility . STATIC
  151                  | visibility . STATIC READONLY
  159 class_visibility_member: visibility . endl_opt class_member

    STATIC    shift, and go to state 234
    READONLY  shift, and go to state 235
    ENDL      shift, and go to state 8

    CLASS      reduce using rule 7 (endl_opt)
    STATIC     [reduce using rule 7 (endl_opt)]
    PUBLIC     reduce using rule 7 (endl_opt)
    PROTECTED  reduce using rule 7 (endl_opt)
    PRIVATE    reduce using rule 7 (endl_opt)
    READONLY   [reduce using rule 7 (endl_opt)]
    FUNC       reduce using rule 7 (endl_opt)
    $default   reduce using rule 146 (property_modifier)

    endl      go to state 9
    endl_opt  go to state 236


State 171

  158 class_visibility_member: class_member .

    $default  reduce using rule 158 (class_visibility_member)


State 172

  160 class_visibility_member_list: class_visibility_member .

    $default  reduce using rule 160 (class_visibility_member_list)


State 173

  161 class_visibility_member_list: class_visibility_member_list . endl_opt class_visibility_member
  163 class_body: class_visibility_member_list .

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 163 (class_body)]
    '}'       reduce using rule 163 (class_body)
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 237


State 174

  164 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body . endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 238


State 175

  157 class_member: class_declaration .

    $default  reduce using rule 157 (class_member)


State 176

  145 implements_decl: implements_decl endl_opt ',' endl_opt ID .

    $default  reduce using rule 145 (implements_decl)


State 177

  133 optional_param: ID endl_opt '?' endl_opt type_mark .

    $default  reduce using rule 133 (optional_param)


State 178

  135 param_list: param_list endl_opt ',' endl_opt param .

    $default  reduce using rule 135 (param_list)


State 179

  137 param_list: param_list endl_opt ',' endl_opt optional_param .

    $default  reduce using rule 137 (param_list)


State 180

   73 return_statement: RETURN expr stmt_sep .

    $default  reduce using rule 73 (return_statement)


State 181

   60 do_while_stmt: DO endl_opt stmt . endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 239


State 182

   61 do_while_stmt: DO endl_opt empty_stmt . endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 240


State 183

   55 if_stmt: IF endl_opt '(' . endl_opt if_expr endl_opt ')' endl_opt block_statement
   56        | IF endl_opt '(' . endl_opt if_expr endl_opt ')' endl_opt if_expr
   57        | IF endl_opt '(' . endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 241


State 184

   62 for_stmt: FOR endl_opt '(' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt
   63         | FOR endl_opt '(' . endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 242


State 185

   58 while_stmt: WHILE endl_opt '(' . endl_opt if_expr endl_opt ')' endl_opt stmt
   59           | WHILE endl_opt '(' . endl_opt if_expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 243


State 186

   64 switch_stmt: SWITCH endl_opt '(' . endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 244


State 187

   76 try_catch_block: TRY endl_opt block_statement . endl_opt catch_clause

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 245


State 188

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   19     | INCREMENT endl_opt expr .

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    INCREMENT  [reduce using rule 19 (expr)]
    DECREMENT  [reduce using rule 19 (expr)]
    $default   reduce using rule 19 (expr)


State 189

   16 expr: expr . DECREMENT
   17     | DECREMENT endl_opt expr .
   18     | expr . INCREMENT

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    INCREMENT  [reduce using rule 17 (expr)]
    DECREMENT  [reduce using rule 17 (expr)]
    $default   reduce using rule 17 (expr)


State 190

  167 enum_declaration: ENUM endl_opt ID . endl_opt '{' endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 246


State 191

   20 expr: ID AS endl_opt . type

    UNKNOWN  shift, and go to state 55
    ANY      shift, and go to state 56
    NUMBER   shift, and go to state 57
    STRING   shift, and go to state 58
    VOID     shift, and go to state 59
    BOOLEAN  shift, and go to state 60
    ID       shift, and go to state 61

    type  go to state 247


State 192

   12 expr_list: expr_list . endl_opt ',' endl_opt expr
   14 expr_list_opt: expr_list .

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 14 (expr_list_opt)]
    ','       reduce using rule 7 (endl_opt)
    $default  reduce using rule 14 (expr_list_opt)

    endl      go to state 9
    endl_opt  go to state 248


State 193

   31 if_expr: ID '(' expr_list_opt . ')'

    ')'  shift, and go to state 249


State 194

   11 expr_list: expr .
   16 expr: expr . DECREMENT
   18     | expr . INCREMENT

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    $default  reduce using rule 11 (expr_list)


State 195

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   22     | '+' endl_opt expr .

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    INCREMENT  [reduce using rule 22 (expr)]
    DECREMENT  [reduce using rule 22 (expr)]
    $default   reduce using rule 22 (expr)


State 196

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   21     | '-' endl_opt expr .

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    INCREMENT  [reduce using rule 21 (expr)]
    DECREMENT  [reduce using rule 21 (expr)]
    $default   reduce using rule 21 (expr)


State 197

   27 if_expr: ID .
   31        | ID . '(' expr_list_opt ')'

    '('  shift, and go to state 121

    '('       [reduce using rule 27 (if_expr)]
    $default  reduce using rule 27 (if_expr)


State 198

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   49        | NOT endl_opt if_expr .
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '.'  shift, and go to state 153

    $default  reduce using rule 49 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 199

   28 if_expr: '(' endl_opt if_expr . endl_opt ')'
   29        | if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    ENDL              shift, and go to state 8
    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '['               shift, and go to state 138
    '?'               shift, and go to state 139
    OR                shift, and go to state 140
    AND               shift, and go to state 141
    '<'               shift, and go to state 142
    '>'               shift, and go to state 143
    GREATER_OR_EQUAL  shift, and go to state 144
    LESS_OR_EQUAL     shift, and go to state 145
    NOT_EQUALS        shift, and go to state 146
    EQUALS            shift, and go to state 147
    '+'               shift, and go to state 148
    '-'               shift, and go to state 149
    '*'               shift, and go to state 150
    '/'               shift, and go to state 151
    '%'               shift, and go to state 152
    '.'               shift, and go to state 153

    $default  reduce using rule 7 (endl_opt)

    endl                  go to state 9
    endl_opt              go to state 250
    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 200

   54 block_statement: '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 251


State 201

   82 stmt_list_opt: stmt_list . endl_opt
   85 stmt_list: stmt_list . stmt
   86          | stmt_list . empty_stmt

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    ENDL            shift, and go to state 8
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl              go to state 9
    endl_opt          go to state 252
    expr              go to state 86
    if_expr           go to state 87
    block_statement   go to state 88
    if_stmt           go to state 89
    while_stmt        go to state 90
    do_while_stmt     go to state 91
    for_stmt          go to state 92
    switch_stmt       go to state 93
    try_catch_block   go to state 95
    stmt              go to state 253
    empty_stmt        go to state 254
    modifier          go to state 102
    var_declaration   go to state 103
    enum_declaration  go to state 104


State 202

   83 stmt_list: stmt .

    $default  reduce using rule 83 (stmt_list)


State 203

   84 stmt_list: empty_stmt .

    $default  reduce using rule 84 (stmt_list)


State 204

   43 if_expr: if_expr '=' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 255


State 205

   48 if_expr: if_expr MOD_ASSIGN endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 256


State 206

   47 if_expr: if_expr DIV_ASSIGN endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 257


State 207

   46 if_expr: if_expr MUL_ASSIGN endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 258


State 208

   45 if_expr: if_expr MINUS_ASSIGN endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 259


State 209

   44 if_expr: if_expr PLUS_ASSIGN endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 260


State 210

  129 dimensions_expr: '[' endl_opt . expr endl_opt ']'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 261
    if_expr  go to state 87


State 211

   52 if_expr: if_expr '?' endl_opt . if_expr endl_opt ':' endl_opt if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 262


State 212

   51 if_expr: if_expr OR endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 263


State 213

   50 if_expr: if_expr AND endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 264


State 214

   37 if_expr: if_expr '<' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 265


State 215

   38 if_expr: if_expr '>' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 266


State 216

   40 if_expr: if_expr GREATER_OR_EQUAL endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 267


State 217

   39 if_expr: if_expr LESS_OR_EQUAL endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 268


State 218

   42 if_expr: if_expr NOT_EQUALS endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 269


State 219

   41 if_expr: if_expr EQUALS endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 270


State 220

   32 if_expr: if_expr '+' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 271


State 221

   33 if_expr: if_expr '-' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 272


State 222

   34 if_expr: if_expr '*' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 273


State 223

   35 if_expr: if_expr '/' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 274


State 224

   36 if_expr: if_expr '%' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 275


State 225

   29 if_expr: if_expr '.' endl_opt . ID
   30        | if_expr '.' endl_opt . ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'

    ID  shift, and go to state 276


State 226

  131 dimensions_expr_list: dimensions_expr_list endl_opt . dimensions_expr

    '['  shift, and go to state 138

    dimensions_expr  go to state 277


State 227

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}' .

    $default  reduce using rule 75 (function_declaration)


State 228

  124 var_declaration: modifier ID endl_opt . type_mark endl_opt dimensions_list
  125                | modifier ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'

    ':'  shift, and go to state 37

    type_mark  go to state 278


State 229

  118 variable: ID . endl_opt type_mark_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 279


State 230

  121 var_list: variable . var_init_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 119 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 119 (var_init_opt)

    endl          go to state 9
    endl_opt      go to state 280
    var_init_opt  go to state 281


State 231

  122 var_list: var_list . endl_opt ',' endl_opt variable var_init_opt
  123 var_declaration: modifier endl_opt var_list .

    ENDL  shift, and go to state 8

    ';'       reduce using rule 123 (var_declaration)
    ENDL      [reduce using rule 123 (var_declaration)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 282


State 232

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt . endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 283


State 233

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
  155 class_member: property_modifier expr . endl_opt stmt_sep

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 284


State 234

  149 property_modifier: visibility STATIC .
  151                  | visibility STATIC . READONLY

    READONLY  shift, and go to state 285

    $default  reduce using rule 149 (property_modifier)


State 235

  147 property_modifier: visibility READONLY .

    $default  reduce using rule 147 (property_modifier)


State 236

  159 class_visibility_member: visibility endl_opt . class_member

    CLASS      shift, and go to state 1
    STATIC     shift, and go to state 163
    PUBLIC     shift, and go to state 164
    PROTECTED  shift, and go to state 165
    PRIVATE    shift, and go to state 166
    READONLY   shift, and go to state 167
    FUNC       shift, and go to state 2

    function_declaration  go to state 168
    property_modifier     go to state 169
    visibility            go to state 286
    class_member          go to state 287
    class_declaration     go to state 175


State 237

  161 class_visibility_member_list: class_visibility_member_list endl_opt . class_visibility_member

    CLASS      shift, and go to state 1
    STATIC     shift, and go to state 163
    PUBLIC     shift, and go to state 164
    PROTECTED  shift, and go to state 165
    PRIVATE    shift, and go to state 166
    READONLY   shift, and go to state 167
    FUNC       shift, and go to state 2

    function_declaration     go to state 168
    property_modifier        go to state 169
    visibility               go to state 170
    class_member             go to state 171
    class_visibility_member  go to state 288
    class_declaration        go to state 175


State 238

  164 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt . '}'

    '}'  shift, and go to state 289


State 239

   60 do_while_stmt: DO endl_opt stmt endl_opt . WHILE endl_opt '(' endl_opt expr endl_opt ')'

    WHILE  shift, and go to state 290


State 240

   61 do_while_stmt: DO endl_opt empty_stmt endl_opt . WHILE endl_opt '(' endl_opt expr endl_opt ')'

    WHILE  shift, and go to state 291


State 241

   55 if_stmt: IF endl_opt '(' endl_opt . if_expr endl_opt ')' endl_opt block_statement
   56        | IF endl_opt '(' endl_opt . if_expr endl_opt ')' endl_opt if_expr
   57        | IF endl_opt '(' endl_opt . if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 292


State 242

   62 for_stmt: FOR endl_opt '(' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt
   63         | FOR endl_opt '(' endl_opt . if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 293
    if_expr  go to state 294


State 243

   58 while_stmt: WHILE endl_opt '(' endl_opt . if_expr endl_opt ')' endl_opt stmt
   59           | WHILE endl_opt '(' endl_opt . if_expr endl_opt ')' endl_opt empty_stmt

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 295


State 244

   64 switch_stmt: SWITCH endl_opt '(' endl_opt . expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 296
    if_expr  go to state 87


State 245

   76 try_catch_block: TRY endl_opt block_statement endl_opt . catch_clause

    CATCH  shift, and go to state 297

    catch_clause  go to state 298


State 246

  167 enum_declaration: ENUM endl_opt ID endl_opt . '{' endl_opt id_list endl_opt '}'

    '{'  shift, and go to state 299


State 247

   20 expr: ID AS endl_opt type .

    $default  reduce using rule 20 (expr)


State 248

   12 expr_list: expr_list endl_opt . ',' endl_opt expr

    ','  shift, and go to state 300


State 249

   31 if_expr: ID '(' expr_list_opt ')' .

    $default  reduce using rule 31 (if_expr)


State 250

   28 if_expr: '(' endl_opt if_expr endl_opt . ')'

    ')'  shift, and go to state 301


State 251

   54 block_statement: '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 54 (block_statement)


State 252

   82 stmt_list_opt: stmt_list endl_opt .

    $default  reduce using rule 82 (stmt_list_opt)


State 253

   85 stmt_list: stmt_list stmt .

    $default  reduce using rule 85 (stmt_list)


State 254

   86 stmt_list: stmt_list empty_stmt .

    $default  reduce using rule 86 (stmt_list)


State 255

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   43        | if_expr '=' endl_opt if_expr .
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '['               shift, and go to state 138
    '?'               shift, and go to state 139
    OR                shift, and go to state 140
    AND               shift, and go to state 141
    '<'               shift, and go to state 142
    '>'               shift, and go to state 143
    GREATER_OR_EQUAL  shift, and go to state 144
    LESS_OR_EQUAL     shift, and go to state 145
    NOT_EQUALS        shift, and go to state 146
    EQUALS            shift, and go to state 147
    '+'               shift, and go to state 148
    '-'               shift, and go to state 149
    '*'               shift, and go to state 150
    '/'               shift, and go to state 151
    '%'               shift, and go to state 152
    '.'               shift, and go to state 153

    $default  reduce using rule 43 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 256

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   48        | if_expr MOD_ASSIGN endl_opt if_expr .
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '['               shift, and go to state 138
    '?'               shift, and go to state 139
    OR                shift, and go to state 140
    AND               shift, and go to state 141
    '<'               shift, and go to state 142
    '>'               shift, and go to state 143
    GREATER_OR_EQUAL  shift, and go to state 144
    LESS_OR_EQUAL     shift, and go to state 145
    NOT_EQUALS        shift, and go to state 146
    EQUALS            shift, and go to state 147
    '+'               shift, and go to state 148
    '-'               shift, and go to state 149
    '*'               shift, and go to state 150
    '/'               shift, and go to state 151
    '%'               shift, and go to state 152
    '.'               shift, and go to state 153

    $default  reduce using rule 48 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 257

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   47        | if_expr DIV_ASSIGN endl_opt if_expr .
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '['               shift, and go to state 138
    '?'               shift, and go to state 139
    OR                shift, and go to state 140
    AND               shift, and go to state 141
    '<'               shift, and go to state 142
    '>'               shift, and go to state 143
    GREATER_OR_EQUAL  shift, and go to state 144
    LESS_OR_EQUAL     shift, and go to state 145
    NOT_EQUALS        shift, and go to state 146
    EQUALS            shift, and go to state 147
    '+'               shift, and go to state 148
    '-'               shift, and go to state 149
    '*'               shift, and go to state 150
    '/'               shift, and go to state 151
    '%'               shift, and go to state 152
    '.'               shift, and go to state 153

    $default  reduce using rule 47 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 258

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   46        | if_expr MUL_ASSIGN endl_opt if_expr .
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '['               shift, and go to state 138
    '?'               shift, and go to state 139
    OR                shift, and go to state 140
    AND               shift, and go to state 141
    '<'               shift, and go to state 142
    '>'               shift, and go to state 143
    GREATER_OR_EQUAL  shift, and go to state 144
    LESS_OR_EQUAL     shift, and go to state 145
    NOT_EQUALS        shift, and go to state 146
    EQUALS            shift, and go to state 147
    '+'               shift, and go to state 148
    '-'               shift, and go to state 149
    '*'               shift, and go to state 150
    '/'               shift, and go to state 151
    '%'               shift, and go to state 152
    '.'               shift, and go to state 153

    $default  reduce using rule 46 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 259

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   45        | if_expr MINUS_ASSIGN endl_opt if_expr .
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '['               shift, and go to state 138
    '?'               shift, and go to state 139
    OR                shift, and go to state 140
    AND               shift, and go to state 141
    '<'               shift, and go to state 142
    '>'               shift, and go to state 143
    GREATER_OR_EQUAL  shift, and go to state 144
    LESS_OR_EQUAL     shift, and go to state 145
    NOT_EQUALS        shift, and go to state 146
    EQUALS            shift, and go to state 147
    '+'               shift, and go to state 148
    '-'               shift, and go to state 149
    '*'               shift, and go to state 150
    '/'               shift, and go to state 151
    '%'               shift, and go to state 152
    '.'               shift, and go to state 153

    $default  reduce using rule 45 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 260

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   44        | if_expr PLUS_ASSIGN endl_opt if_expr .
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '['               shift, and go to state 138
    '?'               shift, and go to state 139
    OR                shift, and go to state 140
    AND               shift, and go to state 141
    '<'               shift, and go to state 142
    '>'               shift, and go to state 143
    GREATER_OR_EQUAL  shift, and go to state 144
    LESS_OR_EQUAL     shift, and go to state 145
    NOT_EQUALS        shift, and go to state 146
    EQUALS            shift, and go to state 147
    '+'               shift, and go to state 148
    '-'               shift, and go to state 149
    '*'               shift, and go to state 150
    '/'               shift, and go to state 151
    '%'               shift, and go to state 152
    '.'               shift, and go to state 153

    $default  reduce using rule 44 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 261

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
  129 dimensions_expr: '[' endl_opt expr . endl_opt ']'

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 302


State 262

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   52        | if_expr '?' endl_opt if_expr . endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    ENDL              shift, and go to state 8
    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '['               shift, and go to state 138
    '?'               shift, and go to state 139
    OR                shift, and go to state 140
    AND               shift, and go to state 141
    '<'               shift, and go to state 142
    '>'               shift, and go to state 143
    GREATER_OR_EQUAL  shift, and go to state 144
    LESS_OR_EQUAL     shift, and go to state 145
    NOT_EQUALS        shift, and go to state 146
    EQUALS            shift, and go to state 147
    '+'               shift, and go to state 148
    '-'               shift, and go to state 149
    '*'               shift, and go to state 150
    '/'               shift, and go to state 151
    '%'               shift, and go to state 152
    '.'               shift, and go to state 153

    $default  reduce using rule 7 (endl_opt)

    endl                  go to state 9
    endl_opt              go to state 303
    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 263

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   51        | if_expr OR endl_opt if_expr .
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    AND               shift, and go to state 141
    '<'               shift, and go to state 142
    '>'               shift, and go to state 143
    GREATER_OR_EQUAL  shift, and go to state 144
    LESS_OR_EQUAL     shift, and go to state 145
    NOT_EQUALS        shift, and go to state 146
    EQUALS            shift, and go to state 147
    '+'               shift, and go to state 148
    '-'               shift, and go to state 149
    '*'               shift, and go to state 150
    '/'               shift, and go to state 151
    '%'               shift, and go to state 152
    '.'               shift, and go to state 153

    $default  reduce using rule 51 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 264

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   50        | if_expr AND endl_opt if_expr .
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '<'               shift, and go to state 142
    '>'               shift, and go to state 143
    GREATER_OR_EQUAL  shift, and go to state 144
    LESS_OR_EQUAL     shift, and go to state 145
    NOT_EQUALS        shift, and go to state 146
    EQUALS            shift, and go to state 147
    '+'               shift, and go to state 148
    '-'               shift, and go to state 149
    '*'               shift, and go to state 150
    '/'               shift, and go to state 151
    '%'               shift, and go to state 152
    '.'               shift, and go to state 153

    $default  reduce using rule 50 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 265

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   37        | if_expr '<' endl_opt if_expr .
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '+'  shift, and go to state 148
    '-'  shift, and go to state 149
    '*'  shift, and go to state 150
    '/'  shift, and go to state 151
    '%'  shift, and go to state 152
    '.'  shift, and go to state 153

    $default  reduce using rule 37 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 266

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   38        | if_expr '>' endl_opt if_expr .
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '+'  shift, and go to state 148
    '-'  shift, and go to state 149
    '*'  shift, and go to state 150
    '/'  shift, and go to state 151
    '%'  shift, and go to state 152
    '.'  shift, and go to state 153

    $default  reduce using rule 38 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 267

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   40        | if_expr GREATER_OR_EQUAL endl_opt if_expr .
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '+'  shift, and go to state 148
    '-'  shift, and go to state 149
    '*'  shift, and go to state 150
    '/'  shift, and go to state 151
    '%'  shift, and go to state 152
    '.'  shift, and go to state 153

    $default  reduce using rule 40 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 268

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   39        | if_expr LESS_OR_EQUAL endl_opt if_expr .
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '+'  shift, and go to state 148
    '-'  shift, and go to state 149
    '*'  shift, and go to state 150
    '/'  shift, and go to state 151
    '%'  shift, and go to state 152
    '.'  shift, and go to state 153

    $default  reduce using rule 39 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 269

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   42        | if_expr NOT_EQUALS endl_opt if_expr .
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '+'  shift, and go to state 148
    '-'  shift, and go to state 149
    '*'  shift, and go to state 150
    '/'  shift, and go to state 151
    '%'  shift, and go to state 152
    '.'  shift, and go to state 153

    $default  reduce using rule 42 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 270

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   41        | if_expr EQUALS endl_opt if_expr .
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '+'  shift, and go to state 148
    '-'  shift, and go to state 149
    '*'  shift, and go to state 150
    '/'  shift, and go to state 151
    '%'  shift, and go to state 152
    '.'  shift, and go to state 153

    $default  reduce using rule 41 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 271

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   32        | if_expr '+' endl_opt if_expr .
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '*'  shift, and go to state 150
    '/'  shift, and go to state 151
    '%'  shift, and go to state 152
    '.'  shift, and go to state 153

    $default  reduce using rule 32 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 272

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   33        | if_expr '-' endl_opt if_expr .
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '*'  shift, and go to state 150
    '/'  shift, and go to state 151
    '%'  shift, and go to state 152
    '.'  shift, and go to state 153

    $default  reduce using rule 33 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 273

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   34        | if_expr '*' endl_opt if_expr .
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '.'  shift, and go to state 153

    $default  reduce using rule 34 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 274

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   35        | if_expr '/' endl_opt if_expr .
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '.'  shift, and go to state 153

    $default  reduce using rule 35 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 275

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   36        | if_expr '%' endl_opt if_expr .
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list

    '.'  shift, and go to state 153

    $default  reduce using rule 36 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 276

   29 if_expr: if_expr '.' endl_opt ID .
   30        | if_expr '.' endl_opt ID . endl_opt '(' endl_opt expr_list_opt endl_opt ')'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 29 (if_expr)]
    '('       reduce using rule 7 (endl_opt)
    '('       [reduce using rule 29 (if_expr)]
    $default  reduce using rule 29 (if_expr)

    endl      go to state 9
    endl_opt  go to state 304


State 277

  131 dimensions_expr_list: dimensions_expr_list endl_opt dimensions_expr .

    $default  reduce using rule 131 (dimensions_expr_list)


State 278

  124 var_declaration: modifier ID endl_opt type_mark . endl_opt dimensions_list
  125                | modifier ID endl_opt type_mark . dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'

    ENDL  shift, and go to state 8
    '['   shift, and go to state 305

    '['  [reduce using rule 7 (endl_opt)]

    endl             go to state 9
    endl_opt         go to state 306
    dimensions       go to state 307
    dimensions_list  go to state 308


State 279

  118 variable: ID endl_opt . type_mark_opt

    ':'  shift, and go to state 37

    $default  reduce using rule 116 (type_mark_opt)

    type_mark      go to state 309
    type_mark_opt  go to state 310


State 280

  120 var_init_opt: endl_opt . '=' endl_opt expr

    '='  shift, and go to state 311


State 281

  121 var_list: variable var_init_opt .

    $default  reduce using rule 121 (var_list)


State 282

  122 var_list: var_list endl_opt . ',' endl_opt variable var_init_opt

    ','  shift, and go to state 312


State 283

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt . '}'

    '}'  shift, and go to state 313


State 284

  155 class_member: property_modifier expr endl_opt . stmt_sep

    ';'   shift, and go to state 129
    ENDL  shift, and go to state 8

    endl      go to state 130
    stmt_sep  go to state 314


State 285

  151 property_modifier: visibility STATIC READONLY .

    $default  reduce using rule 151 (property_modifier)


State 286

  146 property_modifier: visibility .
  147                  | visibility . READONLY
  149                  | visibility . STATIC
  151                  | visibility . STATIC READONLY

    STATIC    shift, and go to state 234
    READONLY  shift, and go to state 235

    $default  reduce using rule 146 (property_modifier)


State 287

  159 class_visibility_member: visibility endl_opt class_member .

    $default  reduce using rule 159 (class_visibility_member)


State 288

  161 class_visibility_member_list: class_visibility_member_list endl_opt class_visibility_member .

    $default  reduce using rule 161 (class_visibility_member_list)


State 289

  164 class_declaration: CLASS endl_opt ID endl_opt extends_decl endl_opt implements_decl_opt endl_opt '{' endl_opt class_body endl_opt '}' .

    $default  reduce using rule 164 (class_declaration)


State 290

   60 do_while_stmt: DO endl_opt stmt endl_opt WHILE . endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 315


State 291

   61 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE . endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 316


State 292

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list
   55 if_stmt: IF endl_opt '(' endl_opt if_expr . endl_opt ')' endl_opt block_statement
   56        | IF endl_opt '(' endl_opt if_expr . endl_opt ')' endl_opt if_expr
   57        | IF endl_opt '(' endl_opt if_expr . endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    ENDL              shift, and go to state 8
    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '['               shift, and go to state 138
    '?'               shift, and go to state 139
    OR                shift, and go to state 140
    AND               shift, and go to state 141
    '<'               shift, and go to state 142
    '>'               shift, and go to state 143
    GREATER_OR_EQUAL  shift, and go to state 144
    LESS_OR_EQUAL     shift, and go to state 145
    NOT_EQUALS        shift, and go to state 146
    EQUALS            shift, and go to state 147
    '+'               shift, and go to state 148
    '-'               shift, and go to state 149
    '*'               shift, and go to state 150
    '/'               shift, and go to state 151
    '%'               shift, and go to state 152
    '.'               shift, and go to state 153

    $default  reduce using rule 7 (endl_opt)

    endl                  go to state 9
    endl_opt              go to state 317
    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 293

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   62 for_stmt: FOR endl_opt '(' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 318


State 294

   15 expr: if_expr .
   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list
   63 for_stmt: FOR endl_opt '(' endl_opt if_expr . endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL              shift, and go to state 8
    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '['               shift, and go to state 138
    '?'               shift, and go to state 139
    OR                shift, and go to state 140
    AND               shift, and go to state 141
    '<'               shift, and go to state 142
    '>'               shift, and go to state 143
    GREATER_OR_EQUAL  shift, and go to state 144
    LESS_OR_EQUAL     shift, and go to state 145
    NOT_EQUALS        shift, and go to state 146
    EQUALS            shift, and go to state 147
    '+'               shift, and go to state 148
    '-'               shift, and go to state 149
    '*'               shift, and go to state 150
    '/'               shift, and go to state 151
    '%'               shift, and go to state 152
    '.'               shift, and go to state 153

    ';'       reduce using rule 7 (endl_opt)
    ';'       [reduce using rule 15 (expr)]
    ENDL      [reduce using rule 15 (expr)]
    $default  reduce using rule 15 (expr)

    endl                  go to state 9
    endl_opt              go to state 319
    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 295

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list
   58 while_stmt: WHILE endl_opt '(' endl_opt if_expr . endl_opt ')' endl_opt stmt
   59           | WHILE endl_opt '(' endl_opt if_expr . endl_opt ')' endl_opt empty_stmt

    ENDL              shift, and go to state 8
    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '['               shift, and go to state 138
    '?'               shift, and go to state 139
    OR                shift, and go to state 140
    AND               shift, and go to state 141
    '<'               shift, and go to state 142
    '>'               shift, and go to state 143
    GREATER_OR_EQUAL  shift, and go to state 144
    LESS_OR_EQUAL     shift, and go to state 145
    NOT_EQUALS        shift, and go to state 146
    EQUALS            shift, and go to state 147
    '+'               shift, and go to state 148
    '-'               shift, and go to state 149
    '*'               shift, and go to state 150
    '/'               shift, and go to state 151
    '%'               shift, and go to state 152
    '.'               shift, and go to state 153

    $default  reduce using rule 7 (endl_opt)

    endl                  go to state 9
    endl_opt              go to state 320
    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 296

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   64 switch_stmt: SWITCH endl_opt '(' endl_opt expr . endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}'

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 321


State 297

   77 catch_clause: CATCH . endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement
   78             | CATCH . endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 322


State 298

   76 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause .

    $default  reduce using rule 76 (try_catch_block)


State 299

  167 enum_declaration: ENUM endl_opt ID endl_opt '{' . endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 323


State 300

   12 expr_list: expr_list endl_opt ',' . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 324


State 301

   28 if_expr: '(' endl_opt if_expr endl_opt ')' .

    $default  reduce using rule 28 (if_expr)


State 302

  129 dimensions_expr: '[' endl_opt expr endl_opt . ']'

    ']'  shift, and go to state 325


State 303

   52 if_expr: if_expr '?' endl_opt if_expr endl_opt . ':' endl_opt if_expr

    ':'  shift, and go to state 326


State 304

   30 if_expr: if_expr '.' endl_opt ID endl_opt . '(' endl_opt expr_list_opt endl_opt ')'

    '('  shift, and go to state 327


State 305

  126 dimensions: '[' . endl_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 328


State 306

  124 var_declaration: modifier ID endl_opt type_mark endl_opt . dimensions_list

    '['  shift, and go to state 305

    dimensions       go to state 307
    dimensions_list  go to state 329


State 307

  127 dimensions_list: dimensions .

    $default  reduce using rule 127 (dimensions_list)


State 308

  125 var_declaration: modifier ID endl_opt type_mark dimensions_list . endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'
  128 dimensions_list: dimensions_list . dimensions

    ENDL  shift, and go to state 8
    '['   shift, and go to state 305

    $default  reduce using rule 7 (endl_opt)

    endl        go to state 9
    endl_opt    go to state 330
    dimensions  go to state 331


State 309

  117 type_mark_opt: type_mark .

    $default  reduce using rule 117 (type_mark_opt)


State 310

  118 variable: ID endl_opt type_mark_opt .

    $default  reduce using rule 118 (variable)


State 311

  120 var_init_opt: endl_opt '=' . endl_opt expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 332


State 312

  122 var_list: var_list endl_opt ',' . endl_opt variable var_init_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 333


State 313

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt func_stmt_list_opt endl_opt '}' .

    $default  reduce using rule 74 (function_declaration)


State 314

  155 class_member: property_modifier expr endl_opt stmt_sep .

    $default  reduce using rule 155 (class_member)


State 315

   60 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt . '(' endl_opt expr endl_opt ')'

    '('  shift, and go to state 334


State 316

   61 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt . '(' endl_opt expr endl_opt ')'

    '('  shift, and go to state 335


State 317

   55 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt . ')' endl_opt block_statement
   56        | IF endl_opt '(' endl_opt if_expr endl_opt . ')' endl_opt if_expr
   57        | IF endl_opt '(' endl_opt if_expr endl_opt . ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement

    ')'  shift, and go to state 336


State 318

   62 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 337


State 319

   63 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt . ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ';'  shift, and go to state 338


State 320

   58 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt . ')' endl_opt stmt
   59           | WHILE endl_opt '(' endl_opt if_expr endl_opt . ')' endl_opt empty_stmt

    ')'  shift, and go to state 339


State 321

   64 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt . ')' endl_opt '{' endl_opt case_list endl_opt '}'

    ')'  shift, and go to state 340


State 322

   77 catch_clause: CATCH endl_opt . '(' endl_opt ID endl_opt ')' endl_opt block_statement
   78             | CATCH endl_opt . '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    '('  shift, and go to state 341


State 323

  167 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt . id_list endl_opt '}'

    ID  shift, and go to state 342

    id_list  go to state 343


State 324

   12 expr_list: expr_list endl_opt ',' endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 344
    if_expr  go to state 87


State 325

  129 dimensions_expr: '[' endl_opt expr endl_opt ']' .

    $default  reduce using rule 129 (dimensions_expr)


State 326

   52 if_expr: if_expr '?' endl_opt if_expr endl_opt ':' . endl_opt if_expr

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 345


State 327

   30 if_expr: if_expr '.' endl_opt ID endl_opt '(' . endl_opt expr_list_opt endl_opt ')'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 346


State 328

  126 dimensions: '[' endl_opt . ']'

    ']'  shift, and go to state 347


State 329

  124 var_declaration: modifier ID endl_opt type_mark endl_opt dimensions_list .
  128 dimensions_list: dimensions_list . dimensions

    '['  shift, and go to state 305

    $default  reduce using rule 124 (var_declaration)

    dimensions  go to state 331


State 330

  125 var_declaration: modifier ID endl_opt type_mark dimensions_list endl_opt . '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']'

    '='  shift, and go to state 348


State 331

  128 dimensions_list: dimensions_list dimensions .

    $default  reduce using rule 128 (dimensions_list)


State 332

  120 var_init_opt: endl_opt '=' endl_opt . expr

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 349
    if_expr  go to state 87


State 333

  122 var_list: var_list endl_opt ',' endl_opt . variable var_init_opt

    ID  shift, and go to state 229

    variable  go to state 350


State 334

   60 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' . endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 351


State 335

   61 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' . endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 352


State 336

   55 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' . endl_opt block_statement
   56        | IF endl_opt '(' endl_opt if_expr endl_opt ')' . endl_opt if_expr
   57        | IF endl_opt '(' endl_opt if_expr endl_opt ')' . endl_opt block_statement endl_opt ELSE endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 353


State 337

   62 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 354


State 338

   63 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 355


State 339

   58 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt ')' . endl_opt stmt
   59           | WHILE endl_opt '(' endl_opt if_expr endl_opt ')' . endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 356


State 340

   64 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' . endl_opt '{' endl_opt case_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 357


State 341

   77 catch_clause: CATCH endl_opt '(' . endl_opt ID endl_opt ')' endl_opt block_statement
   78             | CATCH endl_opt '(' . endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 358


State 342

  168 id_list: ID . var_init_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 119 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 119 (var_init_opt)

    endl          go to state 9
    endl_opt      go to state 280
    var_init_opt  go to state 359


State 343

  167 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list . endl_opt '}'
  169 id_list: id_list . endl_opt ',' endl_opt ID var_init_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 360


State 344

   12 expr_list: expr_list endl_opt ',' endl_opt expr .
   16 expr: expr . DECREMENT
   18     | expr . INCREMENT

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    $default  reduce using rule 12 (expr_list)


State 345

   52 if_expr: if_expr '?' endl_opt if_expr endl_opt ':' endl_opt . if_expr

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 361


State 346

   30 if_expr: if_expr '.' endl_opt ID endl_opt '(' endl_opt . expr_list_opt endl_opt ')'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 192
    expr_list_opt  go to state 362
    expr           go to state 194
    if_expr        go to state 87


State 347

  126 dimensions: '[' endl_opt ']' .

    $default  reduce using rule 126 (dimensions)


State 348

  125 var_declaration: modifier ID endl_opt type_mark dimensions_list endl_opt '=' . endl_opt '[' endl_opt expr_list_opt endl_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 363


State 349

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
  120 var_init_opt: endl_opt '=' endl_opt expr .

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    $default  reduce using rule 120 (var_init_opt)


State 350

  122 var_list: var_list endl_opt ',' endl_opt variable . var_init_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 119 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 119 (var_init_opt)

    endl          go to state 9
    endl_opt      go to state 280
    var_init_opt  go to state 364


State 351

   60 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt . expr endl_opt ')'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 365
    if_expr  go to state 87


State 352

   61 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt . expr endl_opt ')'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 366
    if_expr  go to state 87


State 353

   55 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt . block_statement
   56        | IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt . if_expr
   57        | IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt . block_statement endl_opt ELSE endl_opt block_statement

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    if_expr          go to state 367
    block_statement  go to state 368


State 354

   62 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 369
    if_expr  go to state 87


State 355

   63 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 370
    if_expr  go to state 87


State 356

   58 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt . stmt
   59           | WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt . empty_stmt

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    expr              go to state 86
    if_expr           go to state 87
    block_statement   go to state 88
    if_stmt           go to state 89
    while_stmt        go to state 90
    do_while_stmt     go to state 91
    for_stmt          go to state 92
    switch_stmt       go to state 93
    try_catch_block   go to state 95
    stmt              go to state 371
    empty_stmt        go to state 372
    modifier          go to state 102
    var_declaration   go to state 103
    enum_declaration  go to state 104


State 357

   64 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt . '{' endl_opt case_list endl_opt '}'

    '{'  shift, and go to state 373


State 358

   77 catch_clause: CATCH endl_opt '(' endl_opt . ID endl_opt ')' endl_opt block_statement
   78             | CATCH endl_opt '(' endl_opt . ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ID  shift, and go to state 374


State 359

  168 id_list: ID var_init_opt .

    $default  reduce using rule 168 (id_list)


State 360

  167 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt . '}'
  169 id_list: id_list endl_opt . ',' endl_opt ID var_init_opt

    ','  shift, and go to state 375
    '}'  shift, and go to state 376


State 361

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   52        | if_expr '?' endl_opt if_expr endl_opt ':' endl_opt if_expr .
   53        | if_expr . dimensions_expr_list

    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '['               shift, and go to state 138
    '?'               shift, and go to state 139
    OR                shift, and go to state 140
    AND               shift, and go to state 141
    '<'               shift, and go to state 142
    '>'               shift, and go to state 143
    GREATER_OR_EQUAL  shift, and go to state 144
    LESS_OR_EQUAL     shift, and go to state 145
    NOT_EQUALS        shift, and go to state 146
    EQUALS            shift, and go to state 147
    '+'               shift, and go to state 148
    '-'               shift, and go to state 149
    '*'               shift, and go to state 150
    '/'               shift, and go to state 151
    '%'               shift, and go to state 152
    '.'               shift, and go to state 153

    '='               [reduce using rule 52 (if_expr)]
    MOD_ASSIGN        [reduce using rule 52 (if_expr)]
    DIV_ASSIGN        [reduce using rule 52 (if_expr)]
    MUL_ASSIGN        [reduce using rule 52 (if_expr)]
    MINUS_ASSIGN      [reduce using rule 52 (if_expr)]
    PLUS_ASSIGN       [reduce using rule 52 (if_expr)]
    '['               [reduce using rule 52 (if_expr)]
    '?'               [reduce using rule 52 (if_expr)]
    OR                [reduce using rule 52 (if_expr)]
    AND               [reduce using rule 52 (if_expr)]
    '<'               [reduce using rule 52 (if_expr)]
    '>'               [reduce using rule 52 (if_expr)]
    GREATER_OR_EQUAL  [reduce using rule 52 (if_expr)]
    LESS_OR_EQUAL     [reduce using rule 52 (if_expr)]
    NOT_EQUALS        [reduce using rule 52 (if_expr)]
    EQUALS            [reduce using rule 52 (if_expr)]
    '+'               [reduce using rule 52 (if_expr)]
    '-'               [reduce using rule 52 (if_expr)]
    '*'               [reduce using rule 52 (if_expr)]
    '/'               [reduce using rule 52 (if_expr)]
    '%'               [reduce using rule 52 (if_expr)]
    '.'               [reduce using rule 52 (if_expr)]
    $default          reduce using rule 52 (if_expr)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 362

   30 if_expr: if_expr '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt . endl_opt ')'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 377


State 363

  125 var_declaration: modifier ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt . '[' endl_opt expr_list_opt endl_opt ']'

    '['  shift, and go to state 378


State 364

  122 var_list: var_list endl_opt ',' endl_opt variable var_init_opt .

    $default  reduce using rule 122 (var_list)


State 365

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   60 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr . endl_opt ')'

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 379


State 366

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   61 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr . endl_opt ')'

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 380


State 367

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list
   56 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt if_expr .

    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '['               shift, and go to state 138
    '?'               shift, and go to state 139
    OR                shift, and go to state 140
    AND               shift, and go to state 141
    '<'               shift, and go to state 142
    '>'               shift, and go to state 143
    GREATER_OR_EQUAL  shift, and go to state 144
    LESS_OR_EQUAL     shift, and go to state 145
    NOT_EQUALS        shift, and go to state 146
    EQUALS            shift, and go to state 147
    '*'               shift, and go to state 150
    '/'               shift, and go to state 151
    '%'               shift, and go to state 152
    '.'               shift, and go to state 153

    $default  reduce using rule 56 (if_stmt)

    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 368

   55 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement .
   57        | IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement . endl_opt ELSE endl_opt block_statement

    ELSE      reduce using rule 7 (endl_opt)
    $default  reduce using rule 55 (if_stmt)

    endl      go to state 9
    endl_opt  go to state 381


State 369

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   62 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 382


State 370

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   63 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 383


State 371

   58 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 58 (while_stmt)


State 372

   59 while_stmt: WHILE endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt empty_stmt .

    $default  reduce using rule 59 (while_stmt)


State 373

   64 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' . endl_opt case_list endl_opt '}'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 384


State 374

   77 catch_clause: CATCH endl_opt '(' endl_opt ID . endl_opt ')' endl_opt block_statement
   78             | CATCH endl_opt '(' endl_opt ID . endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 385


State 375

  169 id_list: id_list endl_opt ',' . endl_opt ID var_init_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 386


State 376

  167 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}' .

    $default  reduce using rule 167 (enum_declaration)


State 377

   30 if_expr: if_expr '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt . ')'

    ')'  shift, and go to state 387


State 378

  125 var_declaration: modifier ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' . endl_opt expr_list_opt endl_opt ']'

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 388


State 379

   60 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt . ')'

    ')'  shift, and go to state 389


State 380

   61 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt . ')'

    ')'  shift, and go to state 390


State 381

   57 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt . ELSE endl_opt block_statement

    ELSE  shift, and go to state 391


State 382

   62 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ';' endl_opt if_expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 392


State 383

   63 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ';'  shift, and go to state 393


State 384

   64 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt . case_list endl_opt '}'

    DEFAULT  shift, and go to state 394
    CASE     shift, and go to state 395

    case_list  go to state 396
    case_stmt  go to state 397


State 385

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt . ')' endl_opt block_statement
   78             | CATCH endl_opt '(' endl_opt ID endl_opt . ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ')'  shift, and go to state 398
    ':'  shift, and go to state 399


State 386

  169 id_list: id_list endl_opt ',' endl_opt . ID var_init_opt

    ID  shift, and go to state 400


State 387

   30 if_expr: if_expr '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')' .

    $default  reduce using rule 30 (if_expr)


State 388

  125 var_declaration: modifier ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt . expr_list_opt endl_opt ']'

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 192
    expr_list_opt  go to state 401
    expr           go to state 194
    if_expr        go to state 87


State 389

   60 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')' .

    $default  reduce using rule 60 (do_while_stmt)


State 390

   61 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')' .

    $default  reduce using rule 61 (do_while_stmt)


State 391

   57 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE . endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 402


State 392

   62 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' . endl_opt if_expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 403


State 393

   63 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 404


State 394

   69 case_stmt: DEFAULT . endl_opt ':' endl_opt stmt endl_opt break_opt
   70          | DEFAULT . endl_opt ':' endl_opt empty_stmt endl_opt break_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 405


State 395

   67 case_stmt: CASE . endl_opt expr endl_opt ':' endl_opt stmt endl_opt break_opt
   68          | CASE . endl_opt expr endl_opt ':' endl_opt empty_stmt endl_opt break_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 406


State 396

   64 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list . endl_opt '}'
   66 case_list: case_list . case_stmt

    DEFAULT  shift, and go to state 394
    CASE     shift, and go to state 395
    ENDL     shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl       go to state 9
    endl_opt   go to state 407
    case_stmt  go to state 408


State 397

   65 case_list: case_stmt .

    $default  reduce using rule 65 (case_list)


State 398

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' . endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 409


State 399

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' . endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 410


State 400

  169 id_list: id_list endl_opt ',' endl_opt ID . var_init_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 119 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 119 (var_init_opt)

    endl          go to state 9
    endl_opt      go to state 280
    var_init_opt  go to state 411


State 401

  125 var_declaration: modifier ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt . endl_opt ']'

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 412


State 402

   57 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt . block_statement

    '{'  shift, and go to state 85

    block_statement  go to state 413


State 403

   62 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt . if_expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 197
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    if_expr  go to state 414


State 404

   63 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ')' endl_opt empty_stmt

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 415
    if_expr  go to state 87


State 405

   69 case_stmt: DEFAULT endl_opt . ':' endl_opt stmt endl_opt break_opt
   70          | DEFAULT endl_opt . ':' endl_opt empty_stmt endl_opt break_opt

    ':'  shift, and go to state 416


State 406

   67 case_stmt: CASE endl_opt . expr endl_opt ':' endl_opt stmt endl_opt break_opt
   68          | CASE endl_opt . expr endl_opt ':' endl_opt empty_stmt endl_opt break_opt

    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84

    expr     go to state 417
    if_expr  go to state 87


State 407

   64 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt . '}'

    '}'  shift, and go to state 418


State 408

   66 case_list: case_list case_stmt .

    $default  reduce using rule 66 (case_list)


State 409

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt . block_statement

    '{'  shift, and go to state 85

    block_statement  go to state 419


State 410

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt . error_type endl_opt ')' endl_opt block_statement

    UNKNOWN  shift, and go to state 420
    ANY      shift, and go to state 421

    error_type  go to state 422


State 411

  169 id_list: id_list endl_opt ',' endl_opt ID var_init_opt .

    $default  reduce using rule 169 (id_list)


State 412

  125 var_declaration: modifier ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt . ']'

    ']'  shift, and go to state 423


State 413

   57 if_stmt: IF endl_opt '(' endl_opt if_expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement .

    $default  reduce using rule 57 (if_stmt)


State 414

   29 if_expr: if_expr . '.' endl_opt ID
   30        | if_expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt endl_opt ')'
   32        | if_expr . '+' endl_opt if_expr
   33        | if_expr . '-' endl_opt if_expr
   34        | if_expr . '*' endl_opt if_expr
   35        | if_expr . '/' endl_opt if_expr
   36        | if_expr . '%' endl_opt if_expr
   37        | if_expr . '<' endl_opt if_expr
   38        | if_expr . '>' endl_opt if_expr
   39        | if_expr . LESS_OR_EQUAL endl_opt if_expr
   40        | if_expr . GREATER_OR_EQUAL endl_opt if_expr
   41        | if_expr . EQUALS endl_opt if_expr
   42        | if_expr . NOT_EQUALS endl_opt if_expr
   43        | if_expr . '=' endl_opt if_expr
   44        | if_expr . PLUS_ASSIGN endl_opt if_expr
   45        | if_expr . MINUS_ASSIGN endl_opt if_expr
   46        | if_expr . MUL_ASSIGN endl_opt if_expr
   47        | if_expr . DIV_ASSIGN endl_opt if_expr
   48        | if_expr . MOD_ASSIGN endl_opt if_expr
   50        | if_expr . AND endl_opt if_expr
   51        | if_expr . OR endl_opt if_expr
   52        | if_expr . '?' endl_opt if_expr endl_opt ':' endl_opt if_expr
   53        | if_expr . dimensions_expr_list
   62 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr . endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 8
    '='               shift, and go to state 132
    MOD_ASSIGN        shift, and go to state 133
    DIV_ASSIGN        shift, and go to state 134
    MUL_ASSIGN        shift, and go to state 135
    MINUS_ASSIGN      shift, and go to state 136
    PLUS_ASSIGN       shift, and go to state 137
    '['               shift, and go to state 138
    '?'               shift, and go to state 139
    OR                shift, and go to state 140
    AND               shift, and go to state 141
    '<'               shift, and go to state 142
    '>'               shift, and go to state 143
    GREATER_OR_EQUAL  shift, and go to state 144
    LESS_OR_EQUAL     shift, and go to state 145
    NOT_EQUALS        shift, and go to state 146
    EQUALS            shift, and go to state 147
    '+'               shift, and go to state 148
    '-'               shift, and go to state 149
    '*'               shift, and go to state 150
    '/'               shift, and go to state 151
    '%'               shift, and go to state 152
    '.'               shift, and go to state 153

    $default  reduce using rule 7 (endl_opt)

    endl                  go to state 9
    endl_opt              go to state 424
    dimensions_expr       go to state 154
    dimensions_expr_list  go to state 155


State 415

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   63 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ')' endl_opt empty_stmt

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 425


State 416

   69 case_stmt: DEFAULT endl_opt ':' . endl_opt stmt endl_opt break_opt
   70          | DEFAULT endl_opt ':' . endl_opt empty_stmt endl_opt break_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 426


State 417

   16 expr: expr . DECREMENT
   18     | expr . INCREMENT
   67 case_stmt: CASE endl_opt expr . endl_opt ':' endl_opt stmt endl_opt break_opt
   68          | CASE endl_opt expr . endl_opt ':' endl_opt empty_stmt endl_opt break_opt

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128
    ENDL       shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 427


State 418

   64 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list endl_opt '}' .

    $default  reduce using rule 64 (switch_stmt)


State 419

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement .

    $default  reduce using rule 77 (catch_clause)


State 420

   79 error_type: UNKNOWN .

    $default  reduce using rule 79 (error_type)


State 421

   80 error_type: ANY .

    $default  reduce using rule 80 (error_type)


State 422

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type . endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 428


State 423

  125 var_declaration: modifier ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt endl_opt ']' .

    $default  reduce using rule 125 (var_declaration)


State 424

   62 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt . ')' endl_opt stmt

    ')'  shift, and go to state 429


State 425

   63 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ')' endl_opt empty_stmt

    ')'  shift, and go to state 430


State 426

   69 case_stmt: DEFAULT endl_opt ':' endl_opt . stmt endl_opt break_opt
   70          | DEFAULT endl_opt ':' endl_opt . empty_stmt endl_opt break_opt

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    expr              go to state 86
    if_expr           go to state 87
    block_statement   go to state 88
    if_stmt           go to state 89
    while_stmt        go to state 90
    do_while_stmt     go to state 91
    for_stmt          go to state 92
    switch_stmt       go to state 93
    try_catch_block   go to state 95
    stmt              go to state 431
    empty_stmt        go to state 432
    modifier          go to state 102
    var_declaration   go to state 103
    enum_declaration  go to state 104


State 427

   67 case_stmt: CASE endl_opt expr endl_opt . ':' endl_opt stmt endl_opt break_opt
   68          | CASE endl_opt expr endl_opt . ':' endl_opt empty_stmt endl_opt break_opt

    ':'  shift, and go to state 433


State 428

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt . ')' endl_opt block_statement

    ')'  shift, and go to state 434


State 429

   62 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' . endl_opt stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 435


State 430

   63 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' . endl_opt empty_stmt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 436


State 431

   69 case_stmt: DEFAULT endl_opt ':' endl_opt stmt . endl_opt break_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 437


State 432

   70 case_stmt: DEFAULT endl_opt ':' endl_opt empty_stmt . endl_opt break_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 438


State 433

   67 case_stmt: CASE endl_opt expr endl_opt ':' . endl_opt stmt endl_opt break_opt
   68          | CASE endl_opt expr endl_opt ':' . endl_opt empty_stmt endl_opt break_opt

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 439


State 434

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' . endl_opt block_statement

    ENDL  shift, and go to state 8

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 440


State 435

   62 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt . stmt

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    expr              go to state 86
    if_expr           go to state 87
    block_statement   go to state 88
    if_stmt           go to state 89
    while_stmt        go to state 90
    do_while_stmt     go to state 91
    for_stmt          go to state 92
    switch_stmt       go to state 93
    try_catch_block   go to state 95
    stmt              go to state 441
    modifier          go to state 102
    var_declaration   go to state 103
    enum_declaration  go to state 104


State 436

   63 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt . empty_stmt

    ';'  shift, and go to state 80

    empty_stmt  go to state 442


State 437

   69 case_stmt: DEFAULT endl_opt ':' endl_opt stmt endl_opt . break_opt

    BREAK  shift, and go to state 443

    $default  reduce using rule 71 (break_opt)

    break_opt  go to state 444


State 438

   70 case_stmt: DEFAULT endl_opt ':' endl_opt empty_stmt endl_opt . break_opt

    BREAK  shift, and go to state 443

    $default  reduce using rule 71 (break_opt)

    break_opt  go to state 445


State 439

   67 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt . stmt endl_opt break_opt
   68          | CASE endl_opt expr endl_opt ':' endl_opt . empty_stmt endl_opt break_opt

    DO              shift, and go to state 64
    IF              shift, and go to state 65
    FOR             shift, and go to state 66
    WHILE           shift, and go to state 67
    SWITCH          shift, and go to state 68
    TRY             shift, and go to state 69
    INCREMENT       shift, and go to state 70
    DECREMENT       shift, and go to state 71
    LET             shift, and go to state 72
    CONST           shift, and go to state 73
    ENUM            shift, and go to state 74
    NUMBER_LITERAL  shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    TRUE_LITERAL    shift, and go to state 77
    FALSE_LITERAL   shift, and go to state 78
    ID              shift, and go to state 79
    ';'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    NOT             shift, and go to state 83
    '('             shift, and go to state 84
    '{'             shift, and go to state 85

    expr              go to state 86
    if_expr           go to state 87
    block_statement   go to state 88
    if_stmt           go to state 89
    while_stmt        go to state 90
    do_while_stmt     go to state 91
    for_stmt          go to state 92
    switch_stmt       go to state 93
    try_catch_block   go to state 95
    stmt              go to state 446
    empty_stmt        go to state 447
    modifier          go to state 102
    var_declaration   go to state 103
    enum_declaration  go to state 104


State 440

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt . block_statement

    '{'  shift, and go to state 85

    block_statement  go to state 448


State 441

   62 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt if_expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 62 (for_stmt)


State 442

   63 for_stmt: FOR endl_opt '(' endl_opt if_expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt .

    $default  reduce using rule 63 (for_stmt)


State 443

   72 break_opt: BREAK . stmt_sep

    ';'   shift, and go to state 129
    ENDL  shift, and go to state 8

    endl      go to state 130
    stmt_sep  go to state 449


State 444

   69 case_stmt: DEFAULT endl_opt ':' endl_opt stmt endl_opt break_opt .

    $default  reduce using rule 69 (case_stmt)


State 445

   70 case_stmt: DEFAULT endl_opt ':' endl_opt empty_stmt endl_opt break_opt .

    $default  reduce using rule 70 (case_stmt)


State 446

   67 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt . endl_opt break_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 450


State 447

   68 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt empty_stmt . endl_opt break_opt

    ENDL  shift, and go to state 8

    ENDL      [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 9
    endl_opt  go to state 451


State 448

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement .

    $default  reduce using rule 78 (catch_clause)


State 449

   72 break_opt: BREAK stmt_sep .

    $default  reduce using rule 72 (break_opt)


State 450

   67 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt endl_opt . break_opt

    BREAK  shift, and go to state 443

    $default  reduce using rule 71 (break_opt)

    break_opt  go to state 452


State 451

   68 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt empty_stmt endl_opt . break_opt

    BREAK  shift, and go to state 443

    $default  reduce using rule 71 (break_opt)

    break_opt  go to state 453


State 452

   67 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt endl_opt break_opt .

    $default  reduce using rule 67 (case_stmt)


State 453

   68 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt empty_stmt endl_opt break_opt .

    $default  reduce using rule 68 (case_stmt)
