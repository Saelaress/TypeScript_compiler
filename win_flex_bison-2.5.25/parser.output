Terminals unused in grammar

    INTERFACE
    CONSTRUCTOR
    NEW
    THIS
    DELETE
    EXPORT
    OF
    IN
    CONTINUE
    INCREMENT
    DECREMENT
    DECLARE
    IS


State 126 conflicts: 1 shift/reduce
State 174 conflicts: 1 shift/reduce
State 185 conflicts: 2 shift/reduce
State 186 conflicts: 1 shift/reduce
State 229 conflicts: 1 shift/reduce
State 236 conflicts: 1 shift/reduce
State 275 conflicts: 1 shift/reduce
State 276 conflicts: 1 shift/reduce
State 329 conflicts: 1 shift/reduce
State 334 conflicts: 1 shift/reduce
State 381 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_elem
    2        | program program_elem

    3 program_elem: class_declaration
    4             | function_declaration

    5 endl: ENDL
    6     | endl ENDL

    7 endl_opt: %empty
    8         | endl

    9 stmt_sep: ';'
   10         | endl

   11 expr_list: expr
   12          | expr_list endl_opt ',' endl_opt expr

   13 expr_list_opt: %empty
   14              | expr_list

   15 expr: expr POST_DECREMENT
   16     | PREF_DECREMENT endl_opt expr
   17     | expr POST_INCREMENT
   18     | PREF_INCREMENT endl_opt expr
   19     | expr AS endl_opt type
   20     | '-' endl_opt expr
   21     | '+' endl_opt expr
   22     | NUMBER_LITERAL
   23     | STRING_LITERAL
   24     | TRUE_LITERAL
   25     | FALSE_LITERAL
   26     | ID
   27     | '(' endl_opt expr_list_opt ')'
   28     | expr '+' endl_opt expr
   29     | expr '-' endl_opt expr
   30     | expr '*' endl_opt expr
   31     | expr '/' endl_opt expr
   32     | expr '%' endl_opt expr
   33     | expr '<' endl_opt expr
   34     | expr '>' endl_opt expr
   35     | expr LESS_OR_EQUAL endl_opt expr
   36     | expr GREATER_OR_EQUAL endl_opt expr
   37     | expr EQUALS endl_opt expr
   38     | expr NOT_EQUALS endl_opt expr
   39     | expr '=' endl_opt expr
   40     | expr PLUS_ASSIGN endl_opt expr
   41     | expr MINUS_ASSIGN endl_opt expr
   42     | expr MUL_ASSIGN endl_opt expr
   43     | expr DIV_ASSIGN endl_opt expr
   44     | expr MOD_ASSIGN endl_opt expr
   45     | NOT endl_opt expr
   46     | expr AND endl_opt expr
   47     | expr OR endl_opt expr
   48     | expr '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr '[' endl_opt expr endl_opt ']'
   50     | expr '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr '.' endl_opt ID

   52 block_statement: '{' endl_opt stmt_list_opt '}'

   53 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement
   54        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep
   55        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement
   56        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep
   57        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement
   58        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

   59 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt

   60 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

   61 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

   62 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}'

   63 case_list: case_stmt
   64          | case_list case_stmt

   65 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt
   66          | DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt

   67 break_opt: %empty
   68          | BREAK stmt_sep endl_opt

   69 return_statement: RETURN expr stmt_sep

   70 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   71                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

   72 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause

   73 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement
   74             | CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

   75 error_type: UNKNOWN
   76           | ANY

   77 stmt_list_opt: %empty
   78              | stmt_list endl_opt

   79 stmt_list: stmt
   80          | stmt_list stmt

   81 stmt: expr stmt_sep
   82     | if_stmt
   83     | while_stmt
   84     | for_stmt
   85     | do_while_stmt stmt_sep
   86     | switch_stmt
   87     | try_catch_block
   88     | block_statement
   89     | modifier endl_opt var_stmt
   90     | modifier endl_opt var_list stmt_sep
   91     | enum_declaration
   92     | return_statement
   93     | ';'

   94 modifier: LET
   95         | CONST

   96 type: NUMBER
   97     | STRING
   98     | BOOLEAN
   99     | ANY
  100     | UNKNOWN
  101     | VOID
  102     | ID

  103 type_mark: endl_opt ':' endl_opt type

  104 type_mark_opt: %empty
  105              | type_mark

  106 variable: ID type_mark_opt var_init_opt

  107 var_init_opt: %empty
  108             | endl_opt '=' endl_opt expr

  109 var_list: variable endl_opt ',' endl_opt variable
  110         | var_list endl_opt ',' endl_opt variable

  111 var_stmt: variable stmt_sep
  112         | ID type_mark endl_opt dimensions_list stmt_sep
  113         | ID type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

  114 dimensions: '[' endl_opt ']'

  115 dimensions_list: dimensions
  116                | dimensions_list dimensions

  117 param: ID type_mark
  118      | ID endl_opt '?' type_mark

  119 param_list: param
  120           | param_list endl_opt ',' endl_opt param

  121 param_list_0_or_more: '(' endl_opt param_list endl_opt ')'
  122                     | '(' ')'

  123 implements_decl: IMPLEMENTS endl_opt ID
  124                | implements_decl endl_opt ',' endl_opt ID

  125 readonly_opt: %empty
  126             | READONLY endl_opt

  127 static_opt: %empty
  128           | STATIC endl_opt

  129 visibility: PRIVATE
  130           | PROTECTED
  131           | PUBLIC

  132 visibility_opt: %empty
  133               | visibility endl_opt

  134 class_member: visibility_opt static_opt readonly_opt var_stmt
  135             | visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}'
  136             | visibility_opt static_opt class_declaration

  137 class_member_list: class_member
  138                  | class_member_list endl_opt class_member

  139 class_body: %empty
  140           | class_member_list endl_opt

  141 class_declaration: CLASS endl_opt ID endl_opt '{' endl_opt class_body '}'
  142                  | CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  143                  | CLASS endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt class_body '}'
  144                  | CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

  145 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}'

  146 id_list: ID var_init_opt
  147        | id_list endl_opt ',' endl_opt ID var_init_opt


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 32
    '(' (40) 27 50 53 54 55 56 57 58 59 60 61 62 73 74 121 122
    ')' (41) 27 50 53 54 55 56 57 58 59 60 61 62 73 74 121 122
    '*' (42) 30
    '+' (43) 21 28
    ',' (44) 12 109 110 120 124 147
    '-' (45) 20 29
    '.' (46) 50 51
    '/' (47) 31
    ':' (58) 48 65 66 74 103
    ';' (59) 9 61 93
    '<' (60) 33
    '=' (61) 39 108 113
    '>' (62) 34
    '?' (63) 48 118
    '[' (91) 49 113 114
    ']' (93) 49 113 114
    '{' (123) 52 62 70 71 135 141 142 143 144 145
    '}' (125) 52 62 70 71 135 141 142 143 144 145
    error (256)
    INTERFACE (258)
    IMPLEMENTS (259) 123
    CONSTRUCTOR (260)
    NEW (261)
    EXTENDS (262) 142 144
    THIS (263)
    CLASS (264) 141 142 143 144
    STATIC (265) 128
    RETURN (266) 69
    DELETE (267)
    EXPORT (268)
    PUBLIC (269) 131
    PROTECTED (270) 130
    PRIVATE (271) 129
    READONLY (272) 126
    DO (273) 60
    IF (274) 53 54 55 56 57 58
    ELSE (275) 55 56 57 58
    FOR (276) 61
    OF (277)
    IN (278)
    WHILE (279) 59 60
    BREAK (280) 68
    CONTINUE (281)
    DEFAULT (282) 66
    SWITCH (283) 62
    CASE (284) 65
    TRY (285) 72
    CATCH (286) 73 74
    INCREMENT (287)
    DECREMENT (288)
    LET (289) 94
    CONST (290) 95
    FUNC (291) 70 71
    DECLARE (292)
    UNKNOWN (293) 75 100
    ANY (294) 76 99
    NUMBER (295) 96
    STRING (296) 97
    VOID (297) 101
    BOOLEAN (298) 98
    ENUM (299) 145
    NUMBER_LITERAL (300) 22
    STRING_LITERAL (301) 23
    TRUE_LITERAL (302) 24
    FALSE_LITERAL (303) 25
    ID (304) 26 50 51 70 71 73 74 102 106 112 113 117 118 123 124 135 141 142 143 144 145 146 147
    ENDL (305) 5 6
    PLUS_ASSIGN (306) 40
    MINUS_ASSIGN (307) 41
    MUL_ASSIGN (308) 42
    DIV_ASSIGN (309) 43
    MOD_ASSIGN (310) 44
    OR (311) 47
    AND (312) 46
    EQUALS (313) 37
    NOT_EQUALS (314) 38
    LESS_OR_EQUAL (315) 35
    GREATER_OR_EQUAL (316) 36
    IS (317)
    AS (318) 19
    PREF_INCREMENT (319) 18
    PREF_DECREMENT (320) 16
    POST_INCREMENT (321) 17
    POST_DECREMENT (322) 15
    NOT (323) 45
    UPLUS (324)
    UMINUS (325)


Nonterminals, with rules where they appear

    $accept (90)
        on left: 0
    program (91)
        on left: 1 2
        on right: 0 2
    program_elem (92)
        on left: 3 4
        on right: 1 2
    endl (93)
        on left: 5 6
        on right: 6 8 10
    endl_opt (94)
        on left: 7 8
        on right: 12 16 18 19 20 21 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 65 66 68 70 71 72 73 74 78 89 90 103 108 109 110 112 113 114 118 120 121 123 124 126 128 133 135 138 140 141 142 143 144 145 147
    stmt_sep (95)
        on left: 9 10
        on right: 54 56 57 58 68 69 81 85 90 111 112 113
    expr_list (96)
        on left: 11 12
        on right: 12 14
    expr_list_opt (97)
        on left: 13 14
        on right: 27 50 113
    expr (98)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
        on right: 11 12 15 16 17 18 19 20 21 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 53 54 55 56 57 58 59 60 61 62 65 69 81 108
    block_statement (99)
        on left: 52
        on right: 53 55 56 57 72 73 74 88
    if_stmt (100)
        on left: 53 54 55 56 57 58
        on right: 82
    while_stmt (101)
        on left: 59
        on right: 83
    do_while_stmt (102)
        on left: 60
        on right: 85
    for_stmt (103)
        on left: 61
        on right: 84
    switch_stmt (104)
        on left: 62
        on right: 86
    case_list (105)
        on left: 63 64
        on right: 62 64
    case_stmt (106)
        on left: 65 66
        on right: 63 64
    break_opt (107)
        on left: 67 68
        on right: 65 66
    return_statement (108)
        on left: 69
        on right: 92
    function_declaration (109)
        on left: 70 71
        on right: 4
    try_catch_block (110)
        on left: 72
        on right: 87
    catch_clause (111)
        on left: 73 74
        on right: 72
    error_type (112)
        on left: 75 76
        on right: 74
    stmt_list_opt (113)
        on left: 77 78
        on right: 52 65 66 70 71 135
    stmt_list (114)
        on left: 79 80
        on right: 78 80
    stmt (115)
        on left: 81 82 83 84 85 86 87 88 89 90 91 92 93
        on right: 59 60 61 79 80
    modifier (116)
        on left: 94 95
        on right: 89 90
    type (117)
        on left: 96 97 98 99 100 101 102
        on right: 19 103
    type_mark (118)
        on left: 103
        on right: 70 105 112 113 117 118
    type_mark_opt (119)
        on left: 104 105
        on right: 106 135
    variable (120)
        on left: 106
        on right: 109 110 111
    var_init_opt (121)
        on left: 107 108
        on right: 106 146 147
    var_list (122)
        on left: 109 110
        on right: 90 110
    var_stmt (123)
        on left: 111 112 113
        on right: 89 134
    dimensions (124)
        on left: 114
        on right: 115 116
    dimensions_list (125)
        on left: 115 116
        on right: 112 113 116
    param (126)
        on left: 117 118
        on right: 119 120
    param_list (127)
        on left: 119 120
        on right: 120 121
    param_list_0_or_more (128)
        on left: 121 122
        on right: 70 71 135
    implements_decl (129)
        on left: 123 124
        on right: 124 143 144
    readonly_opt (130)
        on left: 125 126
        on right: 134 135
    static_opt (131)
        on left: 127 128
        on right: 134 135 136
    visibility (132)
        on left: 129 130 131
        on right: 133
    visibility_opt (133)
        on left: 132 133
        on right: 134 135 136
    class_member (134)
        on left: 134 135 136
        on right: 137 138
    class_member_list (135)
        on left: 137 138
        on right: 138 140
    class_body (136)
        on left: 139 140
        on right: 141 142 143 144
    class_declaration (137)
        on left: 141 142 143 144
        on right: 3 136
    enum_declaration (138)
        on left: 145
        on right: 91
    id_list (139)
        on left: 146 147
        on right: 145 147


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1
    FUNC   shift, and go to state 2

    program               go to state 3
    program_elem          go to state 4
    function_declaration  go to state 5
    class_declaration     go to state 6


State 1

  141 class_declaration: CLASS . endl_opt ID endl_opt '{' endl_opt class_body '}'
  142                  | CLASS . endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  143                  | CLASS . endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt class_body '}'
  144                  | CLASS . endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 9


State 2

   70 function_declaration: FUNC . endl_opt ID endl_opt param_list_0_or_more type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   71                     | FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 10


State 3

    0 $accept: program . $end
    2 program: program . program_elem

    $end   shift, and go to state 11
    CLASS  shift, and go to state 1
    FUNC   shift, and go to state 2

    program_elem          go to state 12
    function_declaration  go to state 5
    class_declaration     go to state 6


State 4

    1 program: program_elem .

    $default  reduce using rule 1 (program)


State 5

    4 program_elem: function_declaration .

    $default  reduce using rule 4 (program_elem)


State 6

    3 program_elem: class_declaration .

    $default  reduce using rule 3 (program_elem)


State 7

    5 endl: ENDL .

    $default  reduce using rule 5 (endl)


State 8

    6 endl: endl . ENDL
    8 endl_opt: endl .

    ENDL  shift, and go to state 13

    $default  reduce using rule 8 (endl_opt)


State 9

  141 class_declaration: CLASS endl_opt . ID endl_opt '{' endl_opt class_body '}'
  142                  | CLASS endl_opt . ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  143                  | CLASS endl_opt . ID endl_opt implements_decl endl_opt '{' endl_opt class_body '}'
  144                  | CLASS endl_opt . ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    ID  shift, and go to state 14


State 10

   70 function_declaration: FUNC endl_opt . ID endl_opt param_list_0_or_more type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   71                     | FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ID  shift, and go to state 15


State 11

    0 $accept: program $end .

    $default  accept


State 12

    2 program: program program_elem .

    $default  reduce using rule 2 (program)


State 13

    6 endl: endl ENDL .

    $default  reduce using rule 6 (endl)


State 14

  141 class_declaration: CLASS endl_opt ID . endl_opt '{' endl_opt class_body '}'
  142                  | CLASS endl_opt ID . endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  143                  | CLASS endl_opt ID . endl_opt implements_decl endl_opt '{' endl_opt class_body '}'
  144                  | CLASS endl_opt ID . endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 16


State 15

   70 function_declaration: FUNC endl_opt ID . endl_opt param_list_0_or_more type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   71                     | FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 17


State 16

  141 class_declaration: CLASS endl_opt ID endl_opt . '{' endl_opt class_body '}'
  142                  | CLASS endl_opt ID endl_opt . EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  143                  | CLASS endl_opt ID endl_opt . implements_decl endl_opt '{' endl_opt class_body '}'
  144                  | CLASS endl_opt ID endl_opt . EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    IMPLEMENTS  shift, and go to state 18
    EXTENDS     shift, and go to state 19
    '{'         shift, and go to state 20

    implements_decl  go to state 21


State 17

   70 function_declaration: FUNC endl_opt ID endl_opt . param_list_0_or_more type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   71                     | FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    '('  shift, and go to state 22

    param_list_0_or_more  go to state 23


State 18

  123 implements_decl: IMPLEMENTS . endl_opt ID

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 24


State 19

  142 class_declaration: CLASS endl_opt ID endl_opt EXTENDS . endl_opt ID endl_opt '{' endl_opt class_body '}'
  144                  | CLASS endl_opt ID endl_opt EXTENDS . endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 25


State 20

  141 class_declaration: CLASS endl_opt ID endl_opt '{' . endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 26


State 21

  124 implements_decl: implements_decl . endl_opt ',' endl_opt ID
  143 class_declaration: CLASS endl_opt ID endl_opt implements_decl . endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 27


State 22

  121 param_list_0_or_more: '(' . endl_opt param_list endl_opt ')'
  122                     | '(' . ')'

    ENDL  shift, and go to state 7
    ')'   shift, and go to state 28

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 29


State 23

   70 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more . type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   71                     | FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl       go to state 8
    endl_opt   go to state 30
    type_mark  go to state 31


State 24

  123 implements_decl: IMPLEMENTS endl_opt . ID

    ID  shift, and go to state 32


State 25

  142 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt . ID endl_opt '{' endl_opt class_body '}'
  144                  | CLASS endl_opt ID endl_opt EXTENDS endl_opt . ID implements_decl endl_opt '{' endl_opt class_body '}'

    ID  shift, and go to state 33


State 26

  141 class_declaration: CLASS endl_opt ID endl_opt '{' endl_opt . class_body '}'

    PUBLIC     shift, and go to state 34
    PROTECTED  shift, and go to state 35
    PRIVATE    shift, and go to state 36

    '}'       reduce using rule 139 (class_body)
    $default  reduce using rule 132 (visibility_opt)

    visibility         go to state 37
    visibility_opt     go to state 38
    class_member       go to state 39
    class_member_list  go to state 40
    class_body         go to state 41


State 27

  124 implements_decl: implements_decl endl_opt . ',' endl_opt ID
  143 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt . '{' endl_opt class_body '}'

    ','  shift, and go to state 42
    '{'  shift, and go to state 43


State 28

  122 param_list_0_or_more: '(' ')' .

    $default  reduce using rule 122 (param_list_0_or_more)


State 29

  121 param_list_0_or_more: '(' endl_opt . param_list endl_opt ')'

    ID  shift, and go to state 44

    param       go to state 45
    param_list  go to state 46


State 30

   71 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . '{' endl_opt stmt_list_opt '}'
  103 type_mark: endl_opt . ':' endl_opt type

    ':'  shift, and go to state 47
    '{'  shift, and go to state 48


State 31

   70 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more type_mark . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 49


State 32

  123 implements_decl: IMPLEMENTS endl_opt ID .

    $default  reduce using rule 123 (implements_decl)


State 33

  142 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID . endl_opt '{' endl_opt class_body '}'
  144                  | CLASS endl_opt ID endl_opt EXTENDS endl_opt ID . implements_decl endl_opt '{' endl_opt class_body '}'

    IMPLEMENTS  shift, and go to state 18
    ENDL        shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl             go to state 8
    endl_opt         go to state 50
    implements_decl  go to state 51


State 34

  131 visibility: PUBLIC .

    $default  reduce using rule 131 (visibility)


State 35

  130 visibility: PROTECTED .

    $default  reduce using rule 130 (visibility)


State 36

  129 visibility: PRIVATE .

    $default  reduce using rule 129 (visibility)


State 37

  133 visibility_opt: visibility . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 52


State 38

  134 class_member: visibility_opt . static_opt readonly_opt var_stmt
  135             | visibility_opt . static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}'
  136             | visibility_opt . static_opt class_declaration

    STATIC  shift, and go to state 53

    $default  reduce using rule 127 (static_opt)

    static_opt  go to state 54


State 39

  137 class_member_list: class_member .

    $default  reduce using rule 137 (class_member_list)


State 40

  138 class_member_list: class_member_list . endl_opt class_member
  140 class_body: class_member_list . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 55


State 41

  141 class_declaration: CLASS endl_opt ID endl_opt '{' endl_opt class_body . '}'

    '}'  shift, and go to state 56


State 42

  124 implements_decl: implements_decl endl_opt ',' . endl_opt ID

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 57


State 43

  143 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt '{' . endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 58


State 44

  117 param: ID . type_mark
  118      | ID . endl_opt '?' type_mark

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl       go to state 8
    endl_opt   go to state 59
    type_mark  go to state 60


State 45

  119 param_list: param .

    $default  reduce using rule 119 (param_list)


State 46

  120 param_list: param_list . endl_opt ',' endl_opt param
  121 param_list_0_or_more: '(' endl_opt param_list . endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 61


State 47

  103 type_mark: endl_opt ':' . endl_opt type

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 62


State 48

   71 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 63


State 49

   70 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more type_mark endl_opt . '{' endl_opt stmt_list_opt '}'

    '{'  shift, and go to state 64


State 50

  142 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt . '{' endl_opt class_body '}'

    '{'  shift, and go to state 65


State 51

  124 implements_decl: implements_decl . endl_opt ',' endl_opt ID
  144 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl . endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 66


State 52

  133 visibility_opt: visibility endl_opt .

    $default  reduce using rule 133 (visibility_opt)


State 53

  128 static_opt: STATIC . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 67


State 54

  134 class_member: visibility_opt static_opt . readonly_opt var_stmt
  135             | visibility_opt static_opt . readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}'
  136             | visibility_opt static_opt . class_declaration

    CLASS     shift, and go to state 1
    READONLY  shift, and go to state 68

    $default  reduce using rule 125 (readonly_opt)

    readonly_opt       go to state 69
    class_declaration  go to state 70


State 55

  138 class_member_list: class_member_list endl_opt . class_member
  140 class_body: class_member_list endl_opt .

    PUBLIC     shift, and go to state 34
    PROTECTED  shift, and go to state 35
    PRIVATE    shift, and go to state 36

    '}'       reduce using rule 140 (class_body)
    $default  reduce using rule 132 (visibility_opt)

    visibility      go to state 37
    visibility_opt  go to state 38
    class_member    go to state 71


State 56

  141 class_declaration: CLASS endl_opt ID endl_opt '{' endl_opt class_body '}' .

    $default  reduce using rule 141 (class_declaration)


State 57

  124 implements_decl: implements_decl endl_opt ',' endl_opt . ID

    ID  shift, and go to state 72


State 58

  143 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt . class_body '}'

    PUBLIC     shift, and go to state 34
    PROTECTED  shift, and go to state 35
    PRIVATE    shift, and go to state 36

    '}'       reduce using rule 139 (class_body)
    $default  reduce using rule 132 (visibility_opt)

    visibility         go to state 37
    visibility_opt     go to state 38
    class_member       go to state 39
    class_member_list  go to state 40
    class_body         go to state 73


State 59

  103 type_mark: endl_opt . ':' endl_opt type
  118 param: ID endl_opt . '?' type_mark

    '?'  shift, and go to state 74
    ':'  shift, and go to state 47


State 60

  117 param: ID type_mark .

    $default  reduce using rule 117 (param)


State 61

  120 param_list: param_list endl_opt . ',' endl_opt param
  121 param_list_0_or_more: '(' endl_opt param_list endl_opt . ')'

    ')'  shift, and go to state 75
    ','  shift, and go to state 76


State 62

  103 type_mark: endl_opt ':' endl_opt . type

    UNKNOWN  shift, and go to state 77
    ANY      shift, and go to state 78
    NUMBER   shift, and go to state 79
    STRING   shift, and go to state 80
    VOID     shift, and go to state 81
    BOOLEAN  shift, and go to state 82
    ID       shift, and go to state 83

    type  go to state 84


State 63

   71 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    $default  reduce using rule 77 (stmt_list_opt)

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt_list_opt     go to state 117
    stmt_list         go to state 118
    stmt              go to state 119
    modifier          go to state 120
    enum_declaration  go to state 121


State 64

   70 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more type_mark endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 122


State 65

  142 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' . endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 123


State 66

  124 implements_decl: implements_decl endl_opt . ',' endl_opt ID
  144 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt . '{' endl_opt class_body '}'

    ','  shift, and go to state 42
    '{'  shift, and go to state 124


State 67

  128 static_opt: STATIC endl_opt .

    $default  reduce using rule 128 (static_opt)


State 68

  126 readonly_opt: READONLY . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 125


State 69

  134 class_member: visibility_opt static_opt readonly_opt . var_stmt
  135             | visibility_opt static_opt readonly_opt . ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}'

    ID  shift, and go to state 126

    variable  go to state 127
    var_stmt  go to state 128


State 70

  136 class_member: visibility_opt static_opt class_declaration .

    $default  reduce using rule 136 (class_member)


State 71

  138 class_member_list: class_member_list endl_opt class_member .

    $default  reduce using rule 138 (class_member_list)


State 72

  124 implements_decl: implements_decl endl_opt ',' endl_opt ID .

    $default  reduce using rule 124 (implements_decl)


State 73

  143 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt class_body . '}'

    '}'  shift, and go to state 129


State 74

  118 param: ID endl_opt '?' . type_mark

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl       go to state 8
    endl_opt   go to state 130
    type_mark  go to state 131


State 75

  121 param_list_0_or_more: '(' endl_opt param_list endl_opt ')' .

    $default  reduce using rule 121 (param_list_0_or_more)


State 76

  120 param_list: param_list endl_opt ',' . endl_opt param

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 132


State 77

  100 type: UNKNOWN .

    $default  reduce using rule 100 (type)


State 78

   99 type: ANY .

    $default  reduce using rule 99 (type)


State 79

   96 type: NUMBER .

    $default  reduce using rule 96 (type)


State 80

   97 type: STRING .

    $default  reduce using rule 97 (type)


State 81

  101 type: VOID .

    $default  reduce using rule 101 (type)


State 82

   98 type: BOOLEAN .

    $default  reduce using rule 98 (type)


State 83

  102 type: ID .

    $default  reduce using rule 102 (type)


State 84

  103 type_mark: endl_opt ':' endl_opt type .

    $default  reduce using rule 103 (type_mark)


State 85

   69 return_statement: RETURN . expr stmt_sep

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 133


State 86

   60 do_while_stmt: DO . endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 134


State 87

   53 if_stmt: IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement
   54        | IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep
   55        | IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement
   56        | IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep
   57        | IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement
   58        | IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 135


State 88

   61 for_stmt: FOR . endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 136


State 89

   59 while_stmt: WHILE . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 137


State 90

   62 switch_stmt: SWITCH . endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 138


State 91

   72 try_catch_block: TRY . endl_opt block_statement endl_opt catch_clause

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 139


State 92

   94 modifier: LET .

    $default  reduce using rule 94 (modifier)


State 93

   95 modifier: CONST .

    $default  reduce using rule 95 (modifier)


State 94

  145 enum_declaration: ENUM . endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 140


State 95

   22 expr: NUMBER_LITERAL .

    $default  reduce using rule 22 (expr)


State 96

   23 expr: STRING_LITERAL .

    $default  reduce using rule 23 (expr)


State 97

   24 expr: TRUE_LITERAL .

    $default  reduce using rule 24 (expr)


State 98

   25 expr: FALSE_LITERAL .

    $default  reduce using rule 25 (expr)


State 99

   26 expr: ID .

    $default  reduce using rule 26 (expr)


State 100

   93 stmt: ';' .

    $default  reduce using rule 93 (stmt)


State 101

   21 expr: '+' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 141


State 102

   20 expr: '-' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 142


State 103

   18 expr: PREF_INCREMENT . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 143


State 104

   16 expr: PREF_DECREMENT . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 144


State 105

   45 expr: NOT . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 145


State 106

   27 expr: '(' . endl_opt expr_list_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 146


State 107

   52 block_statement: '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 147


State 108

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   81 stmt: expr . stmt_sep

    ';'               shift, and go to state 148
    ENDL              shift, and go to state 7
    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    endl      go to state 174
    stmt_sep  go to state 175


State 109

   88 stmt: block_statement .

    $default  reduce using rule 88 (stmt)


State 110

   82 stmt: if_stmt .

    $default  reduce using rule 82 (stmt)


State 111

   83 stmt: while_stmt .

    $default  reduce using rule 83 (stmt)


State 112

   85 stmt: do_while_stmt . stmt_sep

    ';'   shift, and go to state 148
    ENDL  shift, and go to state 7

    endl      go to state 174
    stmt_sep  go to state 176


State 113

   84 stmt: for_stmt .

    $default  reduce using rule 84 (stmt)


State 114

   86 stmt: switch_stmt .

    $default  reduce using rule 86 (stmt)


State 115

   92 stmt: return_statement .

    $default  reduce using rule 92 (stmt)


State 116

   87 stmt: try_catch_block .

    $default  reduce using rule 87 (stmt)


State 117

   71 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 177


State 118

   78 stmt_list_opt: stmt_list . endl_opt
   80 stmt_list: stmt_list . stmt

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    ENDL            shift, and go to state 7
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    $default  reduce using rule 7 (endl_opt)

    endl              go to state 8
    endl_opt          go to state 178
    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt              go to state 179
    modifier          go to state 120
    enum_declaration  go to state 121


State 119

   79 stmt_list: stmt .

    $default  reduce using rule 79 (stmt_list)


State 120

   89 stmt: modifier . endl_opt var_stmt
   90     | modifier . endl_opt var_list stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 180


State 121

   91 stmt: enum_declaration .

    $default  reduce using rule 91 (stmt)


State 122

   70 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more type_mark endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    $default  reduce using rule 77 (stmt_list_opt)

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt_list_opt     go to state 181
    stmt_list         go to state 118
    stmt              go to state 119
    modifier          go to state 120
    enum_declaration  go to state 121


State 123

  142 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt . class_body '}'

    PUBLIC     shift, and go to state 34
    PROTECTED  shift, and go to state 35
    PRIVATE    shift, and go to state 36

    '}'       reduce using rule 139 (class_body)
    $default  reduce using rule 132 (visibility_opt)

    visibility         go to state 37
    visibility_opt     go to state 38
    class_member       go to state 39
    class_member_list  go to state 40
    class_body         go to state 182


State 124

  144 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' . endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 183


State 125

  126 readonly_opt: READONLY endl_opt .

    $default  reduce using rule 126 (readonly_opt)


State 126

  106 variable: ID . type_mark_opt var_init_opt
  112 var_stmt: ID . type_mark endl_opt dimensions_list stmt_sep
  113         | ID . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  135 class_member: visibility_opt static_opt readonly_opt ID . endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    ';'       reduce using rule 104 (type_mark_opt)
    ENDL      [reduce using rule 104 (type_mark_opt)]
    '='       reduce using rule 104 (type_mark_opt)
    $default  reduce using rule 7 (endl_opt)

    endl           go to state 8
    endl_opt       go to state 184
    type_mark      go to state 185
    type_mark_opt  go to state 186

    shift/reduce conflict on token ENDL:
      104 type_mark_opt: %empty .
        5 endl: . ENDL
      First example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt ID . ENDL param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                   $end
               `-> 1: class_declaration
                      `-> 141: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                                                    '}'
                                                                       `-> 140: class_member_list                                                                                                                                           endl_opt
                                                                                `-> 137: class_member
                                                                                         `-> 135: visibility_opt static_opt readonly_opt ID endl_opt             param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}'
                                                                                                                                            `-> 8: endl
                                                                                                                                                   `-> 5: . ENDL
      Second example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt ID . ENDL '=' endl_opt expr stmt_sep endl_opt '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                     $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 141: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                                               '}'
                                                                              `-> 140: class_member_list                                                                                                                                      endl_opt
                                                                                       `-> 137: class_member
                                                                                                `-> 134: visibility_opt static_opt readonly_opt var_stmt
                                                                                                                                                `-> 111: variable                                                                    stmt_sep
                                                                                                                                                         `-> 106: ID type_mark_opt     var_init_opt
                                                                                                                                                                     `-> 104: %empty . `-> 108: endl_opt           '=' endl_opt expr
                                                                                                                                                                                                `-> 8: endl
                                                                                                                                                                                                       `-> 5: ENDL



State 127

  111 var_stmt: variable . stmt_sep

    ';'   shift, and go to state 148
    ENDL  shift, and go to state 7

    endl      go to state 174
    stmt_sep  go to state 187


State 128

  134 class_member: visibility_opt static_opt readonly_opt var_stmt .

    $default  reduce using rule 134 (class_member)


State 129

  143 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt class_body '}' .

    $default  reduce using rule 143 (class_declaration)


State 130

  103 type_mark: endl_opt . ':' endl_opt type

    ':'  shift, and go to state 47


State 131

  118 param: ID endl_opt '?' type_mark .

    $default  reduce using rule 118 (param)


State 132

  120 param_list: param_list endl_opt ',' endl_opt . param

    ID  shift, and go to state 44

    param  go to state 188


State 133

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   69 return_statement: RETURN expr . stmt_sep

    ';'               shift, and go to state 148
    ENDL              shift, and go to state 7
    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    endl      go to state 174
    stmt_sep  go to state 189


State 134

   60 do_while_stmt: DO endl_opt . stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt              go to state 190
    modifier          go to state 120
    enum_declaration  go to state 121


State 135

   53 if_stmt: IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt block_statement
   54        | IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep
   55        | IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement
   56        | IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep
   57        | IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement
   58        | IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    '('  shift, and go to state 191


State 136

   61 for_stmt: FOR endl_opt . '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    '('  shift, and go to state 192


State 137

   59 while_stmt: WHILE endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt

    '('  shift, and go to state 193


State 138

   62 switch_stmt: SWITCH endl_opt . '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}'

    '('  shift, and go to state 194


State 139

   72 try_catch_block: TRY endl_opt . block_statement endl_opt catch_clause

    '{'  shift, and go to state 107

    block_statement  go to state 195


State 140

  145 enum_declaration: ENUM endl_opt . ID endl_opt '{' endl_opt id_list endl_opt '}'

    ID  shift, and go to state 196


State 141

   21 expr: '+' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 197


State 142

   20 expr: '-' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 198


State 143

   18 expr: PREF_INCREMENT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 199


State 144

   16 expr: PREF_DECREMENT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 200


State 145

   45 expr: NOT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 201


State 146

   27 expr: '(' endl_opt . expr_list_opt ')'

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 202
    expr_list_opt  go to state 203
    expr           go to state 204


State 147

   52 block_statement: '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    $default  reduce using rule 77 (stmt_list_opt)

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt_list_opt     go to state 205
    stmt_list         go to state 118
    stmt              go to state 119
    modifier          go to state 120
    enum_declaration  go to state 121


State 148

    9 stmt_sep: ';' .

    $default  reduce using rule 9 (stmt_sep)


State 149

   39 expr: expr '=' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 206


State 150

   40 expr: expr PLUS_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 207


State 151

   41 expr: expr MINUS_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 208


State 152

   42 expr: expr MUL_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 209


State 153

   43 expr: expr DIV_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 210


State 154

   44 expr: expr MOD_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 211


State 155

   49 expr: expr '[' . endl_opt expr endl_opt ']'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 212


State 156

   48 expr: expr '?' . endl_opt expr endl_opt ':' endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 213


State 157

   47 expr: expr OR . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 214


State 158

   46 expr: expr AND . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 215


State 159

   37 expr: expr EQUALS . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 216


State 160

   38 expr: expr NOT_EQUALS . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 217


State 161

   33 expr: expr '<' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 218


State 162

   34 expr: expr '>' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 219


State 163

   35 expr: expr LESS_OR_EQUAL . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 220


State 164

   36 expr: expr GREATER_OR_EQUAL . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 221


State 165

   19 expr: expr AS . endl_opt type

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 222


State 166

   28 expr: expr '+' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 223


State 167

   29 expr: expr '-' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 224


State 168

   30 expr: expr '*' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 225


State 169

   31 expr: expr '/' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 226


State 170

   32 expr: expr '%' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 227


State 171

   17 expr: expr POST_INCREMENT .

    $default  reduce using rule 17 (expr)


State 172

   15 expr: expr POST_DECREMENT .

    $default  reduce using rule 15 (expr)


State 173

   50 expr: expr '.' . endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr '.' . endl_opt ID

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 228


State 174

    6 endl: endl . ENDL
   10 stmt_sep: endl .

    ENDL  shift, and go to state 13

    ENDL      [reduce using rule 10 (stmt_sep)]
    $default  reduce using rule 10 (stmt_sep)

    shift/reduce conflict on token ENDL:
       10 stmt_sep: endl .
        6 endl: endl . ENDL
      Example: expr endl . ENDL
      Shift derivation
        stmt_list_opt
        `-> 78: stmt_list                                       endl_opt
                `-> 79: stmt                                    `-> 78: %empty
                        `-> 81: expr stmt_sep
                                     `-> 10: endl
                                             `-> 6: endl . ENDL
      Reduce derivation
        stmt_list_opt
        `-> 78: stmt_list                           endl_opt
                `-> 79: stmt                        `-> 8: endl
                        `-> 81: expr stmt_sep              `-> 5: ENDL
                                     `-> 10: endl .



State 175

   81 stmt: expr stmt_sep .

    $default  reduce using rule 81 (stmt)


State 176

   85 stmt: do_while_stmt stmt_sep .

    $default  reduce using rule 85 (stmt)


State 177

   71 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 71 (function_declaration)


State 178

   78 stmt_list_opt: stmt_list endl_opt .

    $default  reduce using rule 78 (stmt_list_opt)


State 179

   80 stmt_list: stmt_list stmt .

    $default  reduce using rule 80 (stmt_list)


State 180

   89 stmt: modifier endl_opt . var_stmt
   90     | modifier endl_opt . var_list stmt_sep

    ID  shift, and go to state 229

    variable  go to state 230
    var_list  go to state 231
    var_stmt  go to state 232


State 181

   70 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more type_mark endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 233


State 182

  142 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body . '}'

    '}'  shift, and go to state 234


State 183

  144 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt . class_body '}'

    PUBLIC     shift, and go to state 34
    PROTECTED  shift, and go to state 35
    PRIVATE    shift, and go to state 36

    '}'       reduce using rule 139 (class_body)
    $default  reduce using rule 132 (visibility_opt)

    visibility         go to state 37
    visibility_opt     go to state 38
    class_member       go to state 39
    class_member_list  go to state 40
    class_body         go to state 235


State 184

  103 type_mark: endl_opt . ':' endl_opt type
  135 class_member: visibility_opt static_opt readonly_opt ID endl_opt . param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}'

    ':'  shift, and go to state 47
    '('  shift, and go to state 22

    param_list_0_or_more  go to state 236


State 185

  105 type_mark_opt: type_mark .
  112 var_stmt: ID type_mark . endl_opt dimensions_list stmt_sep
  113         | ID type_mark . dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    ENDL  shift, and go to state 7
    '['   shift, and go to state 237

    ENDL      [reduce using rule 105 (type_mark_opt)]
    '['       [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 105 (type_mark_opt)

    endl             go to state 8
    endl_opt         go to state 238
    dimensions       go to state 239
    dimensions_list  go to state 240

    shift/reduce conflict on token '[':
        7 endl_opt: %empty .
      114 dimensions: . '[' endl_opt ']'
      First example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt ID type_mark . '[' endl_opt ']' endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                       $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 141: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                                                                 '}'
                                                                              `-> 140: class_member                                                                                                                                                             endl_opt
                                                                                       `-> 134: visibility_opt static_opt readonly_opt var_stmt
                                                                                                                                       `-> 113: ID type_mark dimensions_list                      endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
                                                                                                                                                             `-> 115: dimensions
                                                                                                                                                                      `-> 114: . '[' endl_opt ']'
      Second example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt ID type_mark . '[' endl_opt ']' stmt_sep endl_opt '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                         $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 141: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                                   '}'
                                                                              `-> 140: class_member_list                                                                                                                          endl_opt
                                                                                       `-> 137: class_member
                                                                                                `-> 134: visibility_opt static_opt readonly_opt var_stmt
                                                                                                                                                `-> 112: ID type_mark endl_opt        dimensions_list                    stmt_sep
                                                                                                                                                                      `-> 7: %empty . `-> 115: dimensions
                                                                                                                                                                                               `-> 114: '[' endl_opt ']'

    shift/reduce conflict on token ENDL:
      105 type_mark_opt: type_mark .
        5 endl: . ENDL
      First example: visibility_opt ID type_mark . ENDL endl_opt dimensions_list stmt_sep
      Shift derivation
        class_member
        `-> 134: visibility_opt ID type_mark var_stmt
                                             `-> 112: endl_opt             endl_opt dimensions_list stmt_sep
                                                      `-> 8: endl
                                                             `-> 5: . ENDL
      Second example: visibility_opt static_opt ID type_mark . ENDL
      Reduce derivation
        class_member
        `-> 134: visibility_opt static_opt var_stmt
                                           `-> 111: variable                                         stmt_sep
                                                    `-> 106: ID type_mark_opt        var_init_opt    `-> 10: endl
                                                                `-> 105: type_mark . `-> 106: %empty         `-> 5: ENDL



State 186

  106 variable: ID type_mark_opt . var_init_opt

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 107 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 107 (var_init_opt)

    endl          go to state 8
    endl_opt      go to state 241
    var_init_opt  go to state 242

    shift/reduce conflict on token ENDL:
      107 var_init_opt: %empty .
        5 endl: . ENDL
      First example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt ID type_mark_opt . ENDL '=' endl_opt expr endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                 $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 141: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                           '}'
                                                                              `-> 140: class_member_list                                                                                                                  endl_opt
                                                                                       `-> 137: class_member
                                                                                                `-> 134: visibility_opt static_opt readonly_opt variable
                                                                                                                                                `-> 106: ID type_mark_opt var_init_opt
                                                                                                                                                                          `-> 108: endl_opt             '=' endl_opt expr
                                                                                                                                                                                   `-> 8: endl
                                                                                                                                                                                          `-> 5: . ENDL
      Second example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt ID type_mark_opt . ENDL endl_opt '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 141: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                          '}'
                                                                              `-> 140: class_member_list                                                                                                                 endl_opt
                                                                                       `-> 137: class_member
                                                                                                `-> 134: visibility_opt static_opt readonly_opt var_stmt
                                                                                                                                                `-> 111: variable                                    stmt_sep
                                                                                                                                                         `-> 106: ID type_mark_opt var_init_opt      `-> 10: endl
                                                                                                                                                                                   `-> 107: %empty .         `-> 5: ENDL



State 187

  111 var_stmt: variable stmt_sep .

    $default  reduce using rule 111 (var_stmt)


State 188

  120 param_list: param_list endl_opt ',' endl_opt param .

    $default  reduce using rule 120 (param_list)


State 189

   69 return_statement: RETURN expr stmt_sep .

    $default  reduce using rule 69 (return_statement)


State 190

   60 do_while_stmt: DO endl_opt stmt . endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 243


State 191

   53 if_stmt: IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt block_statement
   54        | IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt expr stmt_sep
   55        | IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement
   56        | IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep
   57        | IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement
   58        | IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 244


State 192

   61 for_stmt: FOR endl_opt '(' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 245


State 193

   59 while_stmt: WHILE endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 246


State 194

   62 switch_stmt: SWITCH endl_opt '(' . endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 247


State 195

   72 try_catch_block: TRY endl_opt block_statement . endl_opt catch_clause

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 248


State 196

  145 enum_declaration: ENUM endl_opt ID . endl_opt '{' endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 249


State 197

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   21     | '+' endl_opt expr .
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '.'  shift, and go to state 173

    $default  reduce using rule 21 (expr)


State 198

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   20     | '-' endl_opt expr .
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '.'  shift, and go to state 173

    $default  reduce using rule 20 (expr)


State 199

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   18     | PREF_INCREMENT endl_opt expr .
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 171
    POST_DECREMENT  shift, and go to state 172
    '.'             shift, and go to state 173

    $default  reduce using rule 18 (expr)


State 200

   15 expr: expr . POST_DECREMENT
   16     | PREF_DECREMENT endl_opt expr .
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 171
    POST_DECREMENT  shift, and go to state 172
    '.'             shift, and go to state 173

    $default  reduce using rule 16 (expr)


State 201

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   45     | NOT endl_opt expr .
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '.'  shift, and go to state 173

    $default  reduce using rule 45 (expr)


State 202

   12 expr_list: expr_list . endl_opt ',' endl_opt expr
   14 expr_list_opt: expr_list .

    ENDL  shift, and go to state 7

    ','       reduce using rule 7 (endl_opt)
    $default  reduce using rule 14 (expr_list_opt)

    endl      go to state 8
    endl_opt  go to state 250


State 203

   27 expr: '(' endl_opt expr_list_opt . ')'

    ')'  shift, and go to state 251


State 204

   11 expr_list: expr .
   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 11 (expr_list)


State 205

   52 block_statement: '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 252


State 206

   39 expr: expr '=' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 253


State 207

   40 expr: expr PLUS_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 254


State 208

   41 expr: expr MINUS_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 255


State 209

   42 expr: expr MUL_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 256


State 210

   43 expr: expr DIV_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 257


State 211

   44 expr: expr MOD_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 258


State 212

   49 expr: expr '[' endl_opt . expr endl_opt ']'

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 259


State 213

   48 expr: expr '?' endl_opt . expr endl_opt ':' endl_opt expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 260


State 214

   47 expr: expr OR endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 261


State 215

   46 expr: expr AND endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 262


State 216

   37 expr: expr EQUALS endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 263


State 217

   38 expr: expr NOT_EQUALS endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 264


State 218

   33 expr: expr '<' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 265


State 219

   34 expr: expr '>' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 266


State 220

   35 expr: expr LESS_OR_EQUAL endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 267


State 221

   36 expr: expr GREATER_OR_EQUAL endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 268


State 222

   19 expr: expr AS endl_opt . type

    UNKNOWN  shift, and go to state 77
    ANY      shift, and go to state 78
    NUMBER   shift, and go to state 79
    STRING   shift, and go to state 80
    VOID     shift, and go to state 81
    BOOLEAN  shift, and go to state 82
    ID       shift, and go to state 83

    type  go to state 269


State 223

   28 expr: expr '+' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 270


State 224

   29 expr: expr '-' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 271


State 225

   30 expr: expr '*' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 272


State 226

   31 expr: expr '/' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 273


State 227

   32 expr: expr '%' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 274


State 228

   50 expr: expr '.' endl_opt . ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr '.' endl_opt . ID

    ID  shift, and go to state 275


State 229

  106 variable: ID . type_mark_opt var_init_opt
  112 var_stmt: ID . type_mark endl_opt dimensions_list stmt_sep
  113         | ID . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 104 (type_mark_opt)]
    ':'       reduce using rule 7 (endl_opt)
    $default  reduce using rule 104 (type_mark_opt)

    endl           go to state 8
    endl_opt       go to state 130
    type_mark      go to state 185
    type_mark_opt  go to state 186

    shift/reduce conflict on token ENDL:
      104 type_mark_opt: %empty .
        5 endl: . ENDL
      First example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt modifier endl_opt ID . ENDL ':' endl_opt type endl_opt dimensions_list stmt_sep endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                 $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 71: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                                            '}'
                                                                                                          `-> 78: stmt                                                                                                                    endl_opt
                                                                                                                  `-> 89: modifier endl_opt var_stmt
                                                                                                                                            `-> 112: ID type_mark                                       endl_opt dimensions_list stmt_sep
                                                                                                                                                        `-> 103: endl_opt             ':' endl_opt type
                                                                                                                                                                 `-> 8: endl
                                                                                                                                                                        `-> 5: . ENDL
      Second example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt modifier endl_opt ID . ENDL '=' endl_opt expr stmt_sep endl_opt '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                         $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 71: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                                                    '}'
                                                                                                          `-> 78: stmt_list                                                                                                                       endl_opt
                                                                                                                  `-> 79: stmt
                                                                                                                          `-> 89: modifier endl_opt var_stmt
                                                                                                                                                    `-> 111: variable                                                                    stmt_sep
                                                                                                                                                             `-> 106: ID type_mark_opt     var_init_opt
                                                                                                                                                                         `-> 104: %empty . `-> 108: endl_opt           '=' endl_opt expr
                                                                                                                                                                                                    `-> 8: endl
                                                                                                                                                                                                           `-> 5: ENDL



State 230

  109 var_list: variable . endl_opt ',' endl_opt variable
  111 var_stmt: variable . stmt_sep

    ';'   shift, and go to state 148
    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 276
    endl_opt  go to state 277
    stmt_sep  go to state 187


State 231

   90 stmt: modifier endl_opt var_list . stmt_sep
  110 var_list: var_list . endl_opt ',' endl_opt variable

    ';'   shift, and go to state 148
    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 276
    endl_opt  go to state 278
    stmt_sep  go to state 279


State 232

   89 stmt: modifier endl_opt var_stmt .

    $default  reduce using rule 89 (stmt)


State 233

   70 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more type_mark endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 70 (function_declaration)


State 234

  142 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}' .

    $default  reduce using rule 142 (class_declaration)


State 235

  144 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body . '}'

    '}'  shift, and go to state 280


State 236

  135 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more . type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 104 (type_mark_opt)]
    '{'       reduce using rule 104 (type_mark_opt)
    $default  reduce using rule 7 (endl_opt)

    endl           go to state 8
    endl_opt       go to state 130
    type_mark      go to state 281
    type_mark_opt  go to state 282

    shift/reduce conflict on token ENDL:
      104 type_mark_opt: %empty .
        5 endl: . ENDL
      First example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more . ENDL ':' endl_opt type endl_opt '{' endl_opt stmt_list_opt '}' endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 141: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                                                                          '}'
                                                                              `-> 140: class_member                                                                                                                                                                      endl_opt
                                                                                       `-> 135: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt                                            endl_opt '{' endl_opt stmt_list_opt '}'
                                                                                                                                                                        `-> 105: type_mark
                                                                                                                                                                                 `-> 103: endl_opt             ':' endl_opt type
                                                                                                                                                                                          `-> 8: endl
                                                                                                                                                                                                 `-> 5: . ENDL
      Second example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more . ENDL '{' endl_opt stmt_list_opt '}' endl_opt '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                            $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 141: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                                                      '}'
                                                                              `-> 140: class_member_list                                                                                                                                             endl_opt
                                                                                       `-> 137: class_member
                                                                                                `-> 135: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt     endl_opt           '{' endl_opt stmt_list_opt '}'
                                                                                                                                                                                 `-> 104: %empty . `-> 8: endl
                                                                                                                                                                                                          `-> 5: ENDL



State 237

  114 dimensions: '[' . endl_opt ']'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 283


State 238

  112 var_stmt: ID type_mark endl_opt . dimensions_list stmt_sep

    '['  shift, and go to state 237

    dimensions       go to state 239
    dimensions_list  go to state 284


State 239

  115 dimensions_list: dimensions .

    $default  reduce using rule 115 (dimensions_list)


State 240

  113 var_stmt: ID type_mark dimensions_list . endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  116 dimensions_list: dimensions_list . dimensions

    ENDL  shift, and go to state 7
    '['   shift, and go to state 237

    $default  reduce using rule 7 (endl_opt)

    endl        go to state 8
    endl_opt    go to state 285
    dimensions  go to state 286


State 241

  108 var_init_opt: endl_opt . '=' endl_opt expr

    '='  shift, and go to state 287


State 242

  106 variable: ID type_mark_opt var_init_opt .

    $default  reduce using rule 106 (variable)


State 243

   60 do_while_stmt: DO endl_opt stmt endl_opt . WHILE endl_opt '(' endl_opt expr endl_opt ')'

    WHILE  shift, and go to state 288


State 244

   53 if_stmt: IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt block_statement
   54        | IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt expr stmt_sep
   55        | IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement
   56        | IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep
   57        | IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement
   58        | IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 289


State 245

   61 for_stmt: FOR endl_opt '(' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 290


State 246

   59 while_stmt: WHILE endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 291


State 247

   62 switch_stmt: SWITCH endl_opt '(' endl_opt . expr endl_opt ')' endl_opt '{' endl_opt case_list '}'

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 292


State 248

   72 try_catch_block: TRY endl_opt block_statement endl_opt . catch_clause

    CATCH  shift, and go to state 293

    catch_clause  go to state 294


State 249

  145 enum_declaration: ENUM endl_opt ID endl_opt . '{' endl_opt id_list endl_opt '}'

    '{'  shift, and go to state 295


State 250

   12 expr_list: expr_list endl_opt . ',' endl_opt expr

    ','  shift, and go to state 296


State 251

   27 expr: '(' endl_opt expr_list_opt ')' .

    $default  reduce using rule 27 (expr)


State 252

   52 block_statement: '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 52 (block_statement)


State 253

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   39     | expr '=' endl_opt expr .
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 39 (expr)


State 254

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   40     | expr PLUS_ASSIGN endl_opt expr .
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 40 (expr)


State 255

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   41     | expr MINUS_ASSIGN endl_opt expr .
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 41 (expr)


State 256

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   42     | expr MUL_ASSIGN endl_opt expr .
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 42 (expr)


State 257

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   43     | expr DIV_ASSIGN endl_opt expr .
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 43 (expr)


State 258

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   44     | expr MOD_ASSIGN endl_opt expr .
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 44 (expr)


State 259

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   49     | expr '[' endl_opt expr . endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    ENDL              shift, and go to state 7
    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 297


State 260

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   48     | expr '?' endl_opt expr . endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    ENDL              shift, and go to state 7
    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 298


State 261

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   47     | expr OR endl_opt expr .
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 47 (expr)


State 262

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   46     | expr AND endl_opt expr .
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 46 (expr)


State 263

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   37     | expr EQUALS endl_opt expr .
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 166
    '-'             shift, and go to state 167
    '*'             shift, and go to state 168
    '/'             shift, and go to state 169
    '%'             shift, and go to state 170
    POST_INCREMENT  shift, and go to state 171
    POST_DECREMENT  shift, and go to state 172
    '.'             shift, and go to state 173

    $default  reduce using rule 37 (expr)


State 264

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   38     | expr NOT_EQUALS endl_opt expr .
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 166
    '-'             shift, and go to state 167
    '*'             shift, and go to state 168
    '/'             shift, and go to state 169
    '%'             shift, and go to state 170
    POST_INCREMENT  shift, and go to state 171
    POST_DECREMENT  shift, and go to state 172
    '.'             shift, and go to state 173

    $default  reduce using rule 38 (expr)


State 265

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   33     | expr '<' endl_opt expr .
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 166
    '-'             shift, and go to state 167
    '*'             shift, and go to state 168
    '/'             shift, and go to state 169
    '%'             shift, and go to state 170
    POST_INCREMENT  shift, and go to state 171
    POST_DECREMENT  shift, and go to state 172
    '.'             shift, and go to state 173

    $default  reduce using rule 33 (expr)


State 266

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   34     | expr '>' endl_opt expr .
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 166
    '-'             shift, and go to state 167
    '*'             shift, and go to state 168
    '/'             shift, and go to state 169
    '%'             shift, and go to state 170
    POST_INCREMENT  shift, and go to state 171
    POST_DECREMENT  shift, and go to state 172
    '.'             shift, and go to state 173

    $default  reduce using rule 34 (expr)


State 267

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   35     | expr LESS_OR_EQUAL endl_opt expr .
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 166
    '-'             shift, and go to state 167
    '*'             shift, and go to state 168
    '/'             shift, and go to state 169
    '%'             shift, and go to state 170
    POST_INCREMENT  shift, and go to state 171
    POST_DECREMENT  shift, and go to state 172
    '.'             shift, and go to state 173

    $default  reduce using rule 35 (expr)


State 268

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   36     | expr GREATER_OR_EQUAL endl_opt expr .
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 166
    '-'             shift, and go to state 167
    '*'             shift, and go to state 168
    '/'             shift, and go to state 169
    '%'             shift, and go to state 170
    POST_INCREMENT  shift, and go to state 171
    POST_DECREMENT  shift, and go to state 172
    '.'             shift, and go to state 173

    $default  reduce using rule 36 (expr)


State 269

   19 expr: expr AS endl_opt type .

    $default  reduce using rule 19 (expr)


State 270

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   28     | expr '+' endl_opt expr .
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '*'             shift, and go to state 168
    '/'             shift, and go to state 169
    '%'             shift, and go to state 170
    POST_INCREMENT  shift, and go to state 171
    POST_DECREMENT  shift, and go to state 172
    '.'             shift, and go to state 173

    $default  reduce using rule 28 (expr)


State 271

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   29     | expr '-' endl_opt expr .
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '*'             shift, and go to state 168
    '/'             shift, and go to state 169
    '%'             shift, and go to state 170
    POST_INCREMENT  shift, and go to state 171
    POST_DECREMENT  shift, and go to state 172
    '.'             shift, and go to state 173

    $default  reduce using rule 29 (expr)


State 272

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   30     | expr '*' endl_opt expr .
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 171
    POST_DECREMENT  shift, and go to state 172
    '.'             shift, and go to state 173

    $default  reduce using rule 30 (expr)


State 273

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   31     | expr '/' endl_opt expr .
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 171
    POST_DECREMENT  shift, and go to state 172
    '.'             shift, and go to state 173

    $default  reduce using rule 31 (expr)


State 274

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   32     | expr '%' endl_opt expr .
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 171
    POST_DECREMENT  shift, and go to state 172
    '.'             shift, and go to state 173

    $default  reduce using rule 32 (expr)


State 275

   50 expr: expr '.' endl_opt ID . endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr '.' endl_opt ID .

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 51 (expr)]
    '('       reduce using rule 7 (endl_opt)
    $default  reduce using rule 51 (expr)

    endl      go to state 8
    endl_opt  go to state 299

    shift/reduce conflict on token ENDL:
       51 expr: expr '.' endl_opt ID .
        5 endl: . ENDL
      Example: expr '.' endl_opt ID . ENDL '(' ')' stmt_sep
      Shift derivation
        stmt_list
        `-> 79: stmt
                `-> 81: expr                                                                                    stmt_sep
                        `-> 50: expr '.' endl_opt ID endl_opt             '(' endl_opt       expr_list_opt  ')'
                                                     `-> 8: endl              `-> 50: %empty `-> 50: %empty
                                                            `-> 5: . ENDL
      Reduce derivation
        stmt_list
        `-> 80: stmt_list                                                          stmt
                `-> 79: stmt                                                       `-> 81: expr                                          stmt_sep
                        `-> 81: expr                           stmt_sep                    `-> 27: '(' endl_opt       expr_list_opt  ')'
                                `-> 51: expr '.' endl_opt ID . `-> 10: endl                            `-> 27: %empty `-> 27: %empty
                                                                       `-> 5: ENDL



State 276

    6 endl: endl . ENDL
    8 endl_opt: endl .
   10 stmt_sep: endl .

    ENDL  shift, and go to state 13

    ENDL      [reduce using rule 10 (stmt_sep)]
    ','       reduce using rule 8 (endl_opt)
    $default  reduce using rule 10 (stmt_sep)

    shift/reduce conflict on token ENDL:
       10 stmt_sep: endl .
        6 endl: endl . ENDL
      Example: modifier endl_opt var_list endl . ENDL
      Shift derivation
        stmt_list_opt
        `-> 78: stmt_list                                                             endl_opt
                `-> 79: stmt                                                          `-> 78: %empty
                        `-> 90: modifier endl_opt var_list stmt_sep
                                                           `-> 10: endl
                                                                   `-> 6: endl . ENDL
      Reduce derivation
        stmt_list_opt
        `-> 78: stmt_list                                                 endl_opt
                `-> 79: stmt                                              `-> 8: endl
                        `-> 90: modifier endl_opt var_list stmt_sep              `-> 5: ENDL
                                                           `-> 10: endl .



State 277

  109 var_list: variable endl_opt . ',' endl_opt variable

    ','  shift, and go to state 300


State 278

  110 var_list: var_list endl_opt . ',' endl_opt variable

    ','  shift, and go to state 301


State 279

   90 stmt: modifier endl_opt var_list stmt_sep .

    $default  reduce using rule 90 (stmt)


State 280

  144 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}' .

    $default  reduce using rule 144 (class_declaration)


State 281

  105 type_mark_opt: type_mark .

    $default  reduce using rule 105 (type_mark_opt)


State 282

  135 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 302


State 283

  114 dimensions: '[' endl_opt . ']'

    ']'  shift, and go to state 303


State 284

  112 var_stmt: ID type_mark endl_opt dimensions_list . stmt_sep
  116 dimensions_list: dimensions_list . dimensions

    ';'   shift, and go to state 148
    ENDL  shift, and go to state 7
    '['   shift, and go to state 237

    endl        go to state 174
    stmt_sep    go to state 304
    dimensions  go to state 286


State 285

  113 var_stmt: ID type_mark dimensions_list endl_opt . '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    '='  shift, and go to state 305


State 286

  116 dimensions_list: dimensions_list dimensions .

    $default  reduce using rule 116 (dimensions_list)


State 287

  108 var_init_opt: endl_opt '=' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 306


State 288

   60 do_while_stmt: DO endl_opt stmt endl_opt WHILE . endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 307


State 289

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   53 if_stmt: IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt block_statement
   54        | IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt expr stmt_sep
   55        | IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement
   56        | IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep
   57        | IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement
   58        | IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    ENDL              shift, and go to state 7
    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 308


State 290

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   61 for_stmt: FOR endl_opt '(' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 309


State 291

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   59 while_stmt: WHILE endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 310


State 292

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   62 switch_stmt: SWITCH endl_opt '(' endl_opt expr . endl_opt ')' endl_opt '{' endl_opt case_list '}'

    ENDL              shift, and go to state 7
    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 311


State 293

   73 catch_clause: CATCH . endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement
   74             | CATCH . endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 312


State 294

   72 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause .

    $default  reduce using rule 72 (try_catch_block)


State 295

  145 enum_declaration: ENUM endl_opt ID endl_opt '{' . endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 313


State 296

   12 expr_list: expr_list endl_opt ',' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 314


State 297

   49 expr: expr '[' endl_opt expr endl_opt . ']'

    ']'  shift, and go to state 315


State 298

   48 expr: expr '?' endl_opt expr endl_opt . ':' endl_opt expr

    ':'  shift, and go to state 316


State 299

   50 expr: expr '.' endl_opt ID endl_opt . '(' endl_opt expr_list_opt ')'

    '('  shift, and go to state 317


State 300

  109 var_list: variable endl_opt ',' . endl_opt variable

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 318


State 301

  110 var_list: var_list endl_opt ',' . endl_opt variable

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 319


State 302

  135 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt . '{' endl_opt stmt_list_opt '}'

    '{'  shift, and go to state 320


State 303

  114 dimensions: '[' endl_opt ']' .

    $default  reduce using rule 114 (dimensions)


State 304

  112 var_stmt: ID type_mark endl_opt dimensions_list stmt_sep .

    $default  reduce using rule 112 (var_stmt)


State 305

  113 var_stmt: ID type_mark dimensions_list endl_opt '=' . endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 321


State 306

  108 var_init_opt: endl_opt '=' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 322


State 307

   60 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt . '(' endl_opt expr endl_opt ')'

    '('  shift, and go to state 323


State 308

   53 if_stmt: IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt block_statement
   54        | IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt expr stmt_sep
   55        | IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement
   56        | IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep
   57        | IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement
   58        | IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    ')'  shift, and go to state 324


State 309

   61 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 325


State 310

   59 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt

    ')'  shift, and go to state 326


State 311

   62 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt . ')' endl_opt '{' endl_opt case_list '}'

    ')'  shift, and go to state 327


State 312

   73 catch_clause: CATCH endl_opt . '(' endl_opt ID endl_opt ')' endl_opt block_statement
   74             | CATCH endl_opt . '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    '('  shift, and go to state 328


State 313

  145 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt . id_list endl_opt '}'

    ID  shift, and go to state 329

    id_list  go to state 330


State 314

   12 expr_list: expr_list endl_opt ',' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 331


State 315

   49 expr: expr '[' endl_opt expr endl_opt ']' .

    $default  reduce using rule 49 (expr)


State 316

   48 expr: expr '?' endl_opt expr endl_opt ':' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 332


State 317

   50 expr: expr '.' endl_opt ID endl_opt '(' . endl_opt expr_list_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 333


State 318

  109 var_list: variable endl_opt ',' endl_opt . variable

    ID  shift, and go to state 334

    variable  go to state 335


State 319

  110 var_list: var_list endl_opt ',' endl_opt . variable

    ID  shift, and go to state 334

    variable  go to state 336


State 320

  135 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 337


State 321

  113 var_stmt: ID type_mark dimensions_list endl_opt '=' endl_opt . '[' endl_opt expr_list_opt ']' stmt_sep

    '['  shift, and go to state 338


State 322

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
  108 var_init_opt: endl_opt '=' endl_opt expr .

    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 108 (var_init_opt)


State 323

   60 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' . endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 339


State 324

   53 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt block_statement
   54        | IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt expr stmt_sep
   55        | IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt block_statement endl_opt ELSE endl_opt block_statement
   56        | IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep
   57        | IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement
   58        | IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 340


State 325

   61 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 341


State 326

   59 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 342


State 327

   62 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' . endl_opt '{' endl_opt case_list '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 343


State 328

   73 catch_clause: CATCH endl_opt '(' . endl_opt ID endl_opt ')' endl_opt block_statement
   74             | CATCH endl_opt '(' . endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 344


State 329

  146 id_list: ID . var_init_opt

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 107 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 107 (var_init_opt)

    endl          go to state 8
    endl_opt      go to state 241
    var_init_opt  go to state 345

    shift/reduce conflict on token ENDL:
      107 var_init_opt: %empty .
        5 endl: . ENDL
      First example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt ENUM endl_opt ID endl_opt '{' ID . ENDL '=' endl_opt expr id_list endl_opt '}' endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                 $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 71: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                                                            '}'
                                                                                                          `-> 78: stmt_list                                                                                                                               endl_opt
                                                                                                                  `-> 79: stmt
                                                                                                                          `-> 91: enum_declaration
                                                                                                                                  `-> 145: ENUM endl_opt ID endl_opt '{' id_list                                                     id_list endl_opt '}'
                                                                                                                                                                         `-> 146: ID var_init_opt
                                                                                                                                                                                     `-> 108: endl_opt             '=' endl_opt expr
                                                                                                                                                                                              `-> 8: endl
                                                                                                                                                                                                     `-> 5: . ENDL
      Second example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt ENUM endl_opt ID endl_opt '{' endl_opt ID . ENDL '}' endl_opt '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                              $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 71: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                                         '}'
                                                                                                          `-> 78: stmt_list                                                                                                            endl_opt
                                                                                                                  `-> 79: stmt
                                                                                                                          `-> 91: enum_declaration
                                                                                                                                  `-> 145: ENUM endl_opt ID endl_opt '{' endl_opt id_list                       endl_opt           '}'
                                                                                                                                                                                  `-> 146: ID var_init_opt      `-> 8: endl
                                                                                                                                                                                              `-> 107: %empty .        `-> 5: ENDL



State 330

  145 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list . endl_opt '}'
  147 id_list: id_list . endl_opt ',' endl_opt ID var_init_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 346


State 331

   12 expr_list: expr_list endl_opt ',' endl_opt expr .
   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 12 (expr_list)


State 332

   48 expr: expr '?' endl_opt expr endl_opt ':' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 347


State 333

   50 expr: expr '.' endl_opt ID endl_opt '(' endl_opt . expr_list_opt ')'

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 202
    expr_list_opt  go to state 348
    expr           go to state 204


State 334

  106 variable: ID . type_mark_opt var_init_opt

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 104 (type_mark_opt)]
    ':'       reduce using rule 7 (endl_opt)
    $default  reduce using rule 104 (type_mark_opt)

    endl           go to state 8
    endl_opt       go to state 130
    type_mark      go to state 281
    type_mark_opt  go to state 186

    shift/reduce conflict on token ENDL:
      104 type_mark_opt: %empty .
        5 endl: . ENDL
      First example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt modifier endl_opt variable endl_opt ',' ID . ENDL ':' endl_opt type var_init_opt variable stmt_sep endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                              $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 71: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                                                                                         '}'
                                                                                                          `-> 78: stmt_list                                                                                                                                                            endl_opt
                                                                                                                  `-> 79: stmt
                                                                                                                          `-> 90: modifier endl_opt var_list                                                                                                                  stmt_sep
                                                                                                                                                    `-> 109: variable endl_opt ',' variable                                                                          variable
                                                                                                                                                                                   `-> 106: ID type_mark_opt                                            var_init_opt
                                                                                                                                                                                               `-> 105: type_mark
                                                                                                                                                                                                        `-> 103: endl_opt             ':' endl_opt type
                                                                                                                                                                                                                 `-> 8: endl
                                                                                                                                                                                                                        `-> 5: . ENDL
      Second example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt modifier endl_opt variable endl_opt ',' endl_opt ID . ENDL '=' endl_opt expr stmt_sep endl_opt '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                        $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 71: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                                                                                   '}'
                                                                                                          `-> 78: stmt_list                                                                                                                                                      endl_opt
                                                                                                                  `-> 79: stmt
                                                                                                                          `-> 90: modifier endl_opt var_list                                                                                                            stmt_sep
                                                                                                                                                    `-> 109: variable endl_opt ',' endl_opt variable
                                                                                                                                                                                            `-> 106: ID type_mark_opt     var_init_opt
                                                                                                                                                                                                        `-> 104: %empty . `-> 108: endl_opt           '=' endl_opt expr
                                                                                                                                                                                                                                   `-> 8: endl
                                                                                                                                                                                                                                          `-> 5: ENDL



State 335

  109 var_list: variable endl_opt ',' endl_opt variable .

    $default  reduce using rule 109 (var_list)


State 336

  110 var_list: var_list endl_opt ',' endl_opt variable .

    $default  reduce using rule 110 (var_list)


State 337

  135 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    $default  reduce using rule 77 (stmt_list_opt)

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt_list_opt     go to state 349
    stmt_list         go to state 118
    stmt              go to state 119
    modifier          go to state 120
    enum_declaration  go to state 121


State 338

  113 var_stmt: ID type_mark dimensions_list endl_opt '=' endl_opt '[' . endl_opt expr_list_opt ']' stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 350


State 339

   60 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt . expr endl_opt ')'

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 351


State 340

   53 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . block_statement
   54        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . expr stmt_sep
   55        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . block_statement endl_opt ELSE endl_opt block_statement
   56        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . block_statement endl_opt ELSE endl_opt expr stmt_sep
   57        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . expr stmt_sep endl_opt ELSE endl_opt block_statement
   58        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    expr             go to state 352
    block_statement  go to state 353


State 341

   61 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 354


State 342

   59 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt              go to state 355
    modifier          go to state 120
    enum_declaration  go to state 121


State 343

   62 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt . '{' endl_opt case_list '}'

    '{'  shift, and go to state 356


State 344

   73 catch_clause: CATCH endl_opt '(' endl_opt . ID endl_opt ')' endl_opt block_statement
   74             | CATCH endl_opt '(' endl_opt . ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ID  shift, and go to state 357


State 345

  146 id_list: ID var_init_opt .

    $default  reduce using rule 146 (id_list)


State 346

  145 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt . '}'
  147 id_list: id_list endl_opt . ',' endl_opt ID var_init_opt

    ','  shift, and go to state 358
    '}'  shift, and go to state 359


State 347

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   48     | expr '?' endl_opt expr endl_opt ':' endl_opt expr .
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 48 (expr)


State 348

   50 expr: expr '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt . ')'

    ')'  shift, and go to state 360


State 349

  135 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 361


State 350

  113 var_stmt: ID type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt . expr_list_opt ']' stmt_sep

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 202
    expr_list_opt  go to state 362
    expr           go to state 204


State 351

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   60 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr . endl_opt ')'

    ENDL              shift, and go to state 7
    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 363


State 352

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   54 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr . stmt_sep
   57        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr . stmt_sep endl_opt ELSE endl_opt block_statement
   58        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr . stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    ';'               shift, and go to state 148
    ENDL              shift, and go to state 7
    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    endl      go to state 174
    stmt_sep  go to state 364


State 353

   53 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement .
   55        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement . endl_opt ELSE endl_opt block_statement
   56        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement . endl_opt ELSE endl_opt expr stmt_sep

    ELSE      reduce using rule 7 (endl_opt)
    $default  reduce using rule 53 (if_stmt)

    endl      go to state 8
    endl_opt  go to state 365


State 354

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   61 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 366


State 355

   59 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 59 (while_stmt)


State 356

   62 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' . endl_opt case_list '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 367


State 357

   73 catch_clause: CATCH endl_opt '(' endl_opt ID . endl_opt ')' endl_opt block_statement
   74             | CATCH endl_opt '(' endl_opt ID . endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 368


State 358

  147 id_list: id_list endl_opt ',' . endl_opt ID var_init_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 369


State 359

  145 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}' .

    $default  reduce using rule 145 (enum_declaration)


State 360

   50 expr: expr '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')' .

    $default  reduce using rule 50 (expr)


State 361

  135 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 135 (class_member)


State 362

  113 var_stmt: ID type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt . ']' stmt_sep

    ']'  shift, and go to state 370


State 363

   60 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt . ')'

    ')'  shift, and go to state 371


State 364

   54 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep .
   57        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep . endl_opt ELSE endl_opt block_statement
   58        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep . endl_opt ELSE endl_opt expr stmt_sep

    ELSE      reduce using rule 7 (endl_opt)
    $default  reduce using rule 54 (if_stmt)

    endl      go to state 8
    endl_opt  go to state 372


State 365

   55 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt . ELSE endl_opt block_statement
   56        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt . ELSE endl_opt expr stmt_sep

    ELSE  shift, and go to state 373


State 366

   61 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 374


State 367

   62 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt . case_list '}'

    DEFAULT  shift, and go to state 375
    CASE     shift, and go to state 376

    case_list  go to state 377
    case_stmt  go to state 378


State 368

   73 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt . ')' endl_opt block_statement
   74             | CATCH endl_opt '(' endl_opt ID endl_opt . ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ':'  shift, and go to state 379
    ')'  shift, and go to state 380


State 369

  147 id_list: id_list endl_opt ',' endl_opt . ID var_init_opt

    ID  shift, and go to state 381


State 370

  113 var_stmt: ID type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' . stmt_sep

    ';'   shift, and go to state 148
    ENDL  shift, and go to state 7

    endl      go to state 174
    stmt_sep  go to state 382


State 371

   60 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')' .

    $default  reduce using rule 60 (do_while_stmt)


State 372

   57 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt . ELSE endl_opt block_statement
   58        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt . ELSE endl_opt expr stmt_sep

    ELSE  shift, and go to state 383


State 373

   55 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE . endl_opt block_statement
   56        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE . endl_opt expr stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 384


State 374

   61 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 385


State 375

   66 case_stmt: DEFAULT . endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 386


State 376

   65 case_stmt: CASE . endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 387


State 377

   62 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list . '}'
   64 case_list: case_list . case_stmt

    DEFAULT  shift, and go to state 375
    CASE     shift, and go to state 376
    '}'      shift, and go to state 388

    case_stmt  go to state 389


State 378

   63 case_list: case_stmt .

    $default  reduce using rule 63 (case_list)


State 379

   74 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' . endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 390


State 380

   73 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' . endl_opt block_statement

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 391


State 381

  147 id_list: id_list endl_opt ',' endl_opt ID . var_init_opt

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 107 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 107 (var_init_opt)

    endl          go to state 8
    endl_opt      go to state 241
    var_init_opt  go to state 392

    shift/reduce conflict on token ENDL:
      107 var_init_opt: %empty .
        5 endl: . ENDL
      First example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt ENUM endl_opt ID endl_opt '{' id_list endl_opt ',' endl_opt ID . ENDL '=' endl_opt expr id_list endl_opt '}' endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                               $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 71: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                                                                                          '}'
                                                                                                          `-> 78: stmt_list                                                                                                                                                             endl_opt
                                                                                                                  `-> 79: stmt
                                                                                                                          `-> 91: enum_declaration
                                                                                                                                  `-> 145: ENUM endl_opt ID endl_opt '{' id_list                                                                                   id_list endl_opt '}'
                                                                                                                                                                         `-> 147: id_list endl_opt ',' endl_opt ID var_init_opt
                                                                                                                                                                                                                   `-> 108: endl_opt             '=' endl_opt expr
                                                                                                                                                                                                                            `-> 8: endl
                                                                                                                                                                                                                                   `-> 5: . ENDL
      Second example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt ',' endl_opt ID . ENDL '}' endl_opt '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                            $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 71: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                                                                       '}'
                                                                                                          `-> 78: stmt_list                                                                                                                                          endl_opt
                                                                                                                  `-> 79: stmt
                                                                                                                          `-> 91: enum_declaration
                                                                                                                                  `-> 145: ENUM endl_opt ID endl_opt '{' endl_opt id_list                                                     endl_opt           '}'
                                                                                                                                                                                  `-> 147: id_list endl_opt ',' endl_opt ID var_init_opt      `-> 8: endl
                                                                                                                                                                                                                            `-> 107: %empty .        `-> 5: ENDL



State 382

  113 var_stmt: ID type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep .

    $default  reduce using rule 113 (var_stmt)


State 383

   57 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE . endl_opt block_statement
   58        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE . endl_opt expr stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 393


State 384

   55 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt . block_statement
   56        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt . expr stmt_sep

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    expr             go to state 394
    block_statement  go to state 395


State 385

   61 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 396


State 386

   66 case_stmt: DEFAULT endl_opt . ':' endl_opt stmt_list_opt break_opt

    ':'  shift, and go to state 397


State 387

   65 case_stmt: CASE endl_opt . expr endl_opt ':' endl_opt stmt_list_opt break_opt

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 398


State 388

   62 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' .

    $default  reduce using rule 62 (switch_stmt)


State 389

   64 case_list: case_list case_stmt .

    $default  reduce using rule 64 (case_list)


State 390

   74 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt . error_type endl_opt ')' endl_opt block_statement

    UNKNOWN  shift, and go to state 399
    ANY      shift, and go to state 400

    error_type  go to state 401


State 391

   73 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt . block_statement

    '{'  shift, and go to state 107

    block_statement  go to state 402


State 392

  147 id_list: id_list endl_opt ',' endl_opt ID var_init_opt .

    $default  reduce using rule 147 (id_list)


State 393

   57 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt . block_statement
   58        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt . expr stmt_sep

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    expr             go to state 403
    block_statement  go to state 404


State 394

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   56 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt expr . stmt_sep

    ';'               shift, and go to state 148
    ENDL              shift, and go to state 7
    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    endl      go to state 174
    stmt_sep  go to state 405


State 395

   55 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement .

    $default  reduce using rule 55 (if_stmt)


State 396

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   61 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 406


State 397

   66 case_stmt: DEFAULT endl_opt ':' . endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 407


State 398

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   65 case_stmt: CASE endl_opt expr . endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 408


State 399

   75 error_type: UNKNOWN .

    $default  reduce using rule 75 (error_type)


State 400

   76 error_type: ANY .

    $default  reduce using rule 76 (error_type)


State 401

   74 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type . endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 409


State 402

   73 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement .

    $default  reduce using rule 73 (catch_clause)


State 403

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   58 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr . stmt_sep

    ';'               shift, and go to state 148
    ENDL              shift, and go to state 7
    '='               shift, and go to state 149
    PLUS_ASSIGN       shift, and go to state 150
    MINUS_ASSIGN      shift, and go to state 151
    MUL_ASSIGN        shift, and go to state 152
    DIV_ASSIGN        shift, and go to state 153
    MOD_ASSIGN        shift, and go to state 154
    '['               shift, and go to state 155
    '?'               shift, and go to state 156
    OR                shift, and go to state 157
    AND               shift, and go to state 158
    EQUALS            shift, and go to state 159
    NOT_EQUALS        shift, and go to state 160
    '<'               shift, and go to state 161
    '>'               shift, and go to state 162
    LESS_OR_EQUAL     shift, and go to state 163
    GREATER_OR_EQUAL  shift, and go to state 164
    AS                shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    '/'               shift, and go to state 169
    '%'               shift, and go to state 170
    POST_INCREMENT    shift, and go to state 171
    POST_DECREMENT    shift, and go to state 172
    '.'               shift, and go to state 173

    endl      go to state 174
    stmt_sep  go to state 410


State 404

   57 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement .

    $default  reduce using rule 57 (if_stmt)


State 405

   56 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep .

    $default  reduce using rule 56 (if_stmt)


State 406

   61 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ')' endl_opt stmt

    ')'  shift, and go to state 411


State 407

   66 case_stmt: DEFAULT endl_opt ':' endl_opt . stmt_list_opt break_opt

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    $default  reduce using rule 77 (stmt_list_opt)

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt_list_opt     go to state 412
    stmt_list         go to state 118
    stmt              go to state 119
    modifier          go to state 120
    enum_declaration  go to state 121


State 408

   65 case_stmt: CASE endl_opt expr endl_opt . ':' endl_opt stmt_list_opt break_opt

    ':'  shift, and go to state 413


State 409

   74 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt . ')' endl_opt block_statement

    ')'  shift, and go to state 414


State 410

   58 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep .

    $default  reduce using rule 58 (if_stmt)


State 411

   61 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' . endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 415


State 412

   66 case_stmt: DEFAULT endl_opt ':' endl_opt stmt_list_opt . break_opt

    BREAK  shift, and go to state 416

    $default  reduce using rule 67 (break_opt)

    break_opt  go to state 417


State 413

   65 case_stmt: CASE endl_opt expr endl_opt ':' . endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 418


State 414

   74 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' . endl_opt block_statement

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 419


State 415

   61 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt . stmt

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt              go to state 420
    modifier          go to state 120
    enum_declaration  go to state 121


State 416

   68 break_opt: BREAK . stmt_sep endl_opt

    ';'   shift, and go to state 148
    ENDL  shift, and go to state 7

    endl      go to state 174
    stmt_sep  go to state 421


State 417

   66 case_stmt: DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt .

    $default  reduce using rule 66 (case_stmt)


State 418

   65 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt . stmt_list_opt break_opt

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    $default  reduce using rule 77 (stmt_list_opt)

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt_list_opt     go to state 422
    stmt_list         go to state 118
    stmt              go to state 119
    modifier          go to state 120
    enum_declaration  go to state 121


State 419

   74 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt . block_statement

    '{'  shift, and go to state 107

    block_statement  go to state 423


State 420

   61 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 61 (for_stmt)


State 421

   68 break_opt: BREAK stmt_sep . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 424


State 422

   65 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt . break_opt

    BREAK  shift, and go to state 416

    $default  reduce using rule 67 (break_opt)

    break_opt  go to state 425


State 423

   74 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement .

    $default  reduce using rule 74 (catch_clause)


State 424

   68 break_opt: BREAK stmt_sep endl_opt .

    $default  reduce using rule 68 (break_opt)


State 425

   65 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt .

    $default  reduce using rule 65 (case_stmt)
