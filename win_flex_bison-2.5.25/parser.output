Terminals unused in grammar

    DELETE
    EXPORT
    PUBLIC
    PROTECTED
    PRIVATE
    READONLY
    OF
    IN
    CONTINUE
    INCREMENT
    DECREMENT
    DECLARE
    IS
    NEW
    '.'


State 301 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: program

    2 program: program_elem
    3        | program program_elem

    4 program_elem: stmt_top
    5             | function_declaration

    6 endl: ENDL
    7     | endl ENDL

    8 endl_opt: %empty
    9         | endl

   10 stmt_sep: ';' endl_opt
   11         | endl

   12 expr_list: expr
   13          | expr_list endl_opt ',' endl_opt expr

   14 expr_list_endl_opt: %empty
   15                   | expr_list_endl

   16 expr_list_endl: expr_list endl_opt

   17 expr: expr POST_DECREMENT
   18     | PREF_DECREMENT endl_opt expr
   19     | expr POST_INCREMENT
   20     | PREF_INCREMENT endl_opt expr
   21     | expr AS endl_opt type
   22     | '-' endl_opt expr
   23     | '+' endl_opt expr
   24     | NUMBER_LITERAL
   25     | STRING_LITERAL
   26     | TRUE_LITERAL
   27     | FALSE_LITERAL
   28     | ID
   29     | '(' endl_opt expr endl_opt ')'
   30     | expr '+' endl_opt expr
   31     | expr '-' endl_opt expr
   32     | expr '*' endl_opt expr
   33     | expr '/' endl_opt expr
   34     | expr '%' endl_opt expr
   35     | expr '<' endl_opt expr
   36     | expr '>' endl_opt expr
   37     | expr LESS_OR_EQUAL endl_opt expr
   38     | expr GREATER_OR_EQUAL endl_opt expr
   39     | expr EQUALS endl_opt expr
   40     | expr NOT_EQUALS endl_opt expr
   41     | expr '=' endl_opt expr
   42     | expr PLUS_ASSIGN endl_opt expr
   43     | expr MINUS_ASSIGN endl_opt expr
   44     | expr MUL_ASSIGN endl_opt expr
   45     | expr DIV_ASSIGN endl_opt expr
   46     | expr MOD_ASSIGN endl_opt expr
   47     | NOT endl_opt expr
   48     | expr AND endl_opt expr
   49     | expr OR endl_opt expr
   50     | expr '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr '[' endl_opt expr endl_opt ']'
   52     | ID '(' endl_opt expr_list_endl_opt ')'
   53     | '[' endl_opt expr_list_endl_opt ']'

   54 block_statement: '{' endl_opt stmt_list_opt '}'

   55 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
   56        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

   57 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt

   58 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')' stmt_sep

   59 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

   60 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list_break '}' endl_opt

   61 case_list: case_stmt
   62          | case_list case_stmt

   63 case_list_break: case_stmt_break
   64                | case_list case_stmt_break

   65 case_stmt_break: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt_special
   66                | DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt_special

   67 break_opt_special: %empty
   68                  | BREAK endl
   69                  | BREAK ';' endl_opt
   70                  | BREAK

   71 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt
   72          | DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt

   73 break_opt: %empty
   74          | BREAK endl
   75          | BREAK ';' endl_opt

   76 return_statement: RETURN expr stmt_sep

   77 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   78                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

   79 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause

   80 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   81             | CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

   82 error_type: UNKNOWN
   83           | ANY

   84 stmt_list_opt: %empty
   85              | stmt_list

   86 stmt_list: stmt
   87          | stmt_list stmt

   88 stmt_top: expr stmt_sep
   89         | if_stmt
   90         | while_stmt
   91         | for_stmt
   92         | do_while_stmt
   93         | switch_stmt
   94         | try_catch_block
   95         | block_statement endl_opt
   96         | modifier endl_opt ID stmt_sep
   97         | modifier endl_opt var_list_stmt
   98         | enum_declaration
   99         | ';' endl_opt
  100         | THROW expr stmt_sep

  101 stmt: stmt_top
  102     | return_statement

  103 modifier: LET
  104         | CONST

  105 type: NUMBER
  106     | STRING
  107     | BOOLEAN
  108     | ANY
  109     | UNKNOWN
  110     | VOID
  111     | ID

  112 type_mark: ':' endl_opt type

  113 variable_endl: ID endl_opt type_mark endl_opt var_init endl_opt
  114              | ID endl_opt type_mark endl_opt
  115              | ID endl_opt var_init endl_opt
  116              | ID endl_opt type_mark dimensions_list endl_opt
  117              | ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' endl_opt

  118 variable_stmt: ID endl_opt type_mark endl_opt var_init stmt_sep
  119              | ID endl_opt type_mark stmt_sep
  120              | ID endl_opt var_init stmt_sep
  121              | ID endl_opt type_mark dimensions_list stmt_sep
  122              | ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' stmt_sep

  123 var_init: '=' endl_opt expr

  124 var_list: variable_endl ',' endl_opt variable_endl
  125         | ID endl_opt ',' endl_opt variable_endl
  126         | variable_endl ',' endl_opt ID endl_opt
  127         | ID endl_opt ',' endl_opt ID endl_opt
  128         | var_list ',' endl_opt variable_endl

  129 var_list_stmt: variable_stmt
  130              | variable_endl ',' endl_opt variable_stmt
  131              | ID endl_opt ',' endl_opt variable_stmt
  132              | variable_endl ',' endl_opt ID stmt_sep
  133              | ID endl_opt ',' endl_opt ID stmt_sep
  134              | var_list ',' endl_opt variable_stmt

  135 dimensions: '[' endl_opt ']'

  136 dimensions_list: dimensions
  137                | dimensions_list dimensions

  138 param: ID endl_opt type_mark
  139      | ID endl_opt '?' endl_opt type_mark

  140 param_list: param
  141           | param_list endl_opt ',' endl_opt param

  142 param_list_0_or_more: '(' endl_opt param_list endl_opt ')'
  143                     | '(' endl_opt ')'

  144 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_endl '}'
  145                 | ENUM endl_opt ID endl_opt '{' endl_opt id_list_init endl_opt '}'
  146                 | ENUM endl_opt ID endl_opt '{' endl_opt id_list_endl ',' endl_opt id_list_init endl_opt '}'
  147                 | ENUM endl_opt ID endl_opt '{' endl_opt '}'

  148 id_list_init: ID endl_opt var_init
  149             | id_list_init endl_opt ',' endl_opt ID endl_opt var_init

  150 id_list_endl: ID endl_opt
  151             | id_list_endl ',' endl_opt ID endl_opt


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 34
    '(' (40) 29 52 55 56 57 58 59 60 80 81 142 143
    ')' (41) 29 52 55 56 57 58 59 60 80 81 142 143
    '*' (42) 32
    '+' (43) 23 30
    ',' (44) 13 124 125 126 127 128 130 131 132 133 134 141 146 149 151
    '-' (45) 22 31
    '.' (46)
    '/' (47) 33
    ':' (58) 50 65 66 71 72 81 112
    ';' (59) 10 59 69 75 99
    '<' (60) 35
    '=' (61) 41 117 122 123
    '>' (62) 36
    '?' (63) 50 139
    '[' (91) 51 53 117 122 135
    ']' (93) 51 53 117 122 135
    '{' (123) 54 60 77 78 144 145 146 147
    '}' (125) 54 60 77 78 144 145 146 147
    error (256)
    RETURN (258) 76
    DELETE (259)
    EXPORT (260)
    PUBLIC (261)
    PROTECTED (262)
    PRIVATE (263)
    READONLY (264)
    DO (265) 58
    IF (266) 55 56
    ELSE (267) 56
    FOR (268) 59
    OF (269)
    IN (270)
    WHILE (271) 57 58
    BREAK (272) 68 69 70 74 75
    CONTINUE (273)
    DEFAULT (274) 66 72
    SWITCH (275) 60
    CASE (276) 65 71
    TRY (277) 79
    CATCH (278) 80 81
    THROW (279) 100
    INCREMENT (280)
    DECREMENT (281)
    LET (282) 103
    CONST (283) 104
    FUNC (284) 77 78
    DECLARE (285)
    UNKNOWN (286) 82 109
    ANY (287) 83 108
    NUMBER (288) 105
    STRING (289) 106
    VOID (290) 110
    BOOLEAN (291) 107
    ENUM (292) 144 145 146 147
    NUMBER_LITERAL (293) 24
    STRING_LITERAL (294) 25
    TRUE_LITERAL (295) 26
    FALSE_LITERAL (296) 27
    ID (297) 28 52 77 78 80 81 96 111 113 114 115 116 117 118 119 120 121 122 125 126 127 131 132 133 138 139 144 145 146 147 148 149 150 151
    ENDL (298) 6 7
    PLUS_ASSIGN (299) 42
    MINUS_ASSIGN (300) 43
    MUL_ASSIGN (301) 44
    DIV_ASSIGN (302) 45
    MOD_ASSIGN (303) 46
    OR (304) 49
    AND (305) 48
    EQUALS (306) 39
    NOT_EQUALS (307) 40
    LESS_OR_EQUAL (308) 37
    GREATER_OR_EQUAL (309) 38
    IS (310)
    AS (311) 21
    NEW (312)
    PREF_INCREMENT (313) 20
    PREF_DECREMENT (314) 18
    POST_INCREMENT (315) 19
    POST_DECREMENT (316) 17
    NOT (317) 47
    UPLUS (318)
    UMINUS (319)


Nonterminals, with rules where they appear

    $accept (84)
        on left: 0
    prog (85)
        on left: 1
        on right: 0
    program (86)
        on left: 2 3
        on right: 1 3
    program_elem (87)
        on left: 4 5
        on right: 2 3
    endl (88)
        on left: 6 7
        on right: 7 9 11 68 74
    endl_opt (89)
        on left: 8 9
        on right: 10 13 16 18 20 21 22 23 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 65 66 69 71 72 75 77 78 79 80 81 95 96 97 99 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 130 131 132 133 134 135 138 139 141 142 143 144 145 146 147 148 149 150 151
    stmt_sep (90)
        on left: 10 11
        on right: 58 76 88 96 100 118 119 120 121 122 132 133
    expr_list (91)
        on left: 12 13
        on right: 13 16
    expr_list_endl_opt (92)
        on left: 14 15
        on right: 52 53 117 122
    expr_list_endl (93)
        on left: 16
        on right: 15
    expr (94)
        on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
        on right: 12 13 17 18 19 20 21 22 23 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 55 56 57 58 59 60 65 71 76 88 100 123
    block_statement (95)
        on left: 54
        on right: 79 80 81 95
    if_stmt (96)
        on left: 55 56
        on right: 89
    while_stmt (97)
        on left: 57
        on right: 90
    do_while_stmt (98)
        on left: 58
        on right: 92
    for_stmt (99)
        on left: 59
        on right: 91
    switch_stmt (100)
        on left: 60
        on right: 93
    case_list (101)
        on left: 61 62
        on right: 62 64
    case_list_break (102)
        on left: 63 64
        on right: 60
    case_stmt_break (103)
        on left: 65 66
        on right: 63 64
    break_opt_special (104)
        on left: 67 68 69 70
        on right: 65 66
    case_stmt (105)
        on left: 71 72
        on right: 61 62
    break_opt (106)
        on left: 73 74 75
        on right: 71 72
    return_statement (107)
        on left: 76
        on right: 102
    function_declaration (108)
        on left: 77 78
        on right: 5
    try_catch_block (109)
        on left: 79
        on right: 94
    catch_clause (110)
        on left: 80 81
        on right: 79
    error_type (111)
        on left: 82 83
        on right: 81
    stmt_list_opt (112)
        on left: 84 85
        on right: 54 65 66 71 72 77 78
    stmt_list (113)
        on left: 86 87
        on right: 85 87
    stmt_top (114)
        on left: 88 89 90 91 92 93 94 95 96 97 98 99 100
        on right: 4 101
    stmt (115)
        on left: 101 102
        on right: 55 56 57 58 59 86 87
    modifier (116)
        on left: 103 104
        on right: 96 97
    type (117)
        on left: 105 106 107 108 109 110 111
        on right: 21 112
    type_mark (118)
        on left: 112
        on right: 77 113 114 116 117 118 119 121 122 138 139
    variable_endl (119)
        on left: 113 114 115 116 117
        on right: 124 125 126 128 130 132
    variable_stmt (120)
        on left: 118 119 120 121 122
        on right: 129 130 131 134
    var_init (121)
        on left: 123
        on right: 113 115 118 120 148 149
    var_list (122)
        on left: 124 125 126 127 128
        on right: 128 134
    var_list_stmt (123)
        on left: 129 130 131 132 133 134
        on right: 97
    dimensions (124)
        on left: 135
        on right: 136 137
    dimensions_list (125)
        on left: 136 137
        on right: 116 117 121 122 137
    param (126)
        on left: 138 139
        on right: 140 141
    param_list (127)
        on left: 140 141
        on right: 141 142
    param_list_0_or_more (128)
        on left: 142 143
        on right: 77 78
    enum_declaration (129)
        on left: 144 145 146 147
        on right: 98
    id_list_init (130)
        on left: 148 149
        on right: 145 146 149
    id_list_endl (131)
        on left: 150 151
        on right: 144 146 151


State 0

    0 $accept: . prog $end

    DO              shift, and go to state 1
    IF              shift, and go to state 2
    FOR             shift, and go to state 3
    WHILE           shift, and go to state 4
    SWITCH          shift, and go to state 5
    TRY             shift, and go to state 6
    THROW           shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    FUNC            shift, and go to state 10
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24
    '{'             shift, and go to state 25

    prog                  go to state 26
    program               go to state 27
    program_elem          go to state 28
    expr                  go to state 29
    block_statement       go to state 30
    if_stmt               go to state 31
    while_stmt            go to state 32
    do_while_stmt         go to state 33
    for_stmt              go to state 34
    switch_stmt           go to state 35
    function_declaration  go to state 36
    try_catch_block       go to state 37
    stmt_top              go to state 38
    modifier              go to state 39
    enum_declaration      go to state 40


State 1

   58 do_while_stmt: DO . endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')' stmt_sep

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 43


State 2

   55 if_stmt: IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
   56        | IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 44


State 3

   59 for_stmt: FOR . endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 45


State 4

   57 while_stmt: WHILE . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 46


State 5

   60 switch_stmt: SWITCH . endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list_break '}' endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 47


State 6

   79 try_catch_block: TRY . endl_opt block_statement endl_opt catch_clause

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 48


State 7

  100 stmt_top: THROW . expr stmt_sep

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 49


State 8

  103 modifier: LET .

    $default  reduce using rule 103 (modifier)


State 9

  104 modifier: CONST .

    $default  reduce using rule 104 (modifier)


State 10

   77 function_declaration: FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   78                     | FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 50


State 11

  144 enum_declaration: ENUM . endl_opt ID endl_opt '{' endl_opt id_list_endl '}'
  145                 | ENUM . endl_opt ID endl_opt '{' endl_opt id_list_init endl_opt '}'
  146                 | ENUM . endl_opt ID endl_opt '{' endl_opt id_list_endl ',' endl_opt id_list_init endl_opt '}'
  147                 | ENUM . endl_opt ID endl_opt '{' endl_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 51


State 12

   24 expr: NUMBER_LITERAL .

    $default  reduce using rule 24 (expr)


State 13

   25 expr: STRING_LITERAL .

    $default  reduce using rule 25 (expr)


State 14

   26 expr: TRUE_LITERAL .

    $default  reduce using rule 26 (expr)


State 15

   27 expr: FALSE_LITERAL .

    $default  reduce using rule 27 (expr)


State 16

   28 expr: ID .
   52     | ID . '(' endl_opt expr_list_endl_opt ')'

    '('  shift, and go to state 52

    $default  reduce using rule 28 (expr)


State 17

   99 stmt_top: ';' . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 53


State 18

   53 expr: '[' . endl_opt expr_list_endl_opt ']'

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 54


State 19

   23 expr: '+' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 55


State 20

   22 expr: '-' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 56


State 21

   20 expr: PREF_INCREMENT . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 57


State 22

   18 expr: PREF_DECREMENT . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 58


State 23

   47 expr: NOT . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 59


State 24

   29 expr: '(' . endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 60


State 25

   54 block_statement: '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 61


State 26

    0 $accept: prog . $end

    $end  shift, and go to state 62


State 27

    1 prog: program .
    3 program: program . program_elem

    DO              shift, and go to state 1
    IF              shift, and go to state 2
    FOR             shift, and go to state 3
    WHILE           shift, and go to state 4
    SWITCH          shift, and go to state 5
    TRY             shift, and go to state 6
    THROW           shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    FUNC            shift, and go to state 10
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24
    '{'             shift, and go to state 25

    $default  reduce using rule 1 (prog)

    program_elem          go to state 63
    expr                  go to state 29
    block_statement       go to state 30
    if_stmt               go to state 31
    while_stmt            go to state 32
    do_while_stmt         go to state 33
    for_stmt              go to state 34
    switch_stmt           go to state 35
    function_declaration  go to state 36
    try_catch_block       go to state 37
    stmt_top              go to state 38
    modifier              go to state 39
    enum_declaration      go to state 40


State 28

    2 program: program_elem .

    $default  reduce using rule 2 (program)


State 29

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'
   88 stmt_top: expr . stmt_sep

    ';'               shift, and go to state 64
    ENDL              shift, and go to state 41
    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    endl      go to state 89
    stmt_sep  go to state 90


State 30

   95 stmt_top: block_statement . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 91


State 31

   89 stmt_top: if_stmt .

    $default  reduce using rule 89 (stmt_top)


State 32

   90 stmt_top: while_stmt .

    $default  reduce using rule 90 (stmt_top)


State 33

   92 stmt_top: do_while_stmt .

    $default  reduce using rule 92 (stmt_top)


State 34

   91 stmt_top: for_stmt .

    $default  reduce using rule 91 (stmt_top)


State 35

   93 stmt_top: switch_stmt .

    $default  reduce using rule 93 (stmt_top)


State 36

    5 program_elem: function_declaration .

    $default  reduce using rule 5 (program_elem)


State 37

   94 stmt_top: try_catch_block .

    $default  reduce using rule 94 (stmt_top)


State 38

    4 program_elem: stmt_top .

    $default  reduce using rule 4 (program_elem)


State 39

   96 stmt_top: modifier . endl_opt ID stmt_sep
   97         | modifier . endl_opt var_list_stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 92


State 40

   98 stmt_top: enum_declaration .

    $default  reduce using rule 98 (stmt_top)


State 41

    6 endl: ENDL .

    $default  reduce using rule 6 (endl)


State 42

    7 endl: endl . ENDL
    9 endl_opt: endl .

    ENDL  shift, and go to state 93

    $default  reduce using rule 9 (endl_opt)


State 43

   58 do_while_stmt: DO endl_opt . stmt WHILE endl_opt '(' endl_opt expr endl_opt ')' stmt_sep

    RETURN          shift, and go to state 94
    DO              shift, and go to state 1
    IF              shift, and go to state 2
    FOR             shift, and go to state 3
    WHILE           shift, and go to state 4
    SWITCH          shift, and go to state 5
    TRY             shift, and go to state 6
    THROW           shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24
    '{'             shift, and go to state 25

    expr              go to state 29
    block_statement   go to state 30
    if_stmt           go to state 31
    while_stmt        go to state 32
    do_while_stmt     go to state 33
    for_stmt          go to state 34
    switch_stmt       go to state 35
    return_statement  go to state 95
    try_catch_block   go to state 37
    stmt_top          go to state 96
    stmt              go to state 97
    modifier          go to state 39
    enum_declaration  go to state 40


State 44

   55 if_stmt: IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt
   56        | IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    '('  shift, and go to state 98


State 45

   59 for_stmt: FOR endl_opt . '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    '('  shift, and go to state 99


State 46

   57 while_stmt: WHILE endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt

    '('  shift, and go to state 100


State 47

   60 switch_stmt: SWITCH endl_opt . '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list_break '}' endl_opt

    '('  shift, and go to state 101


State 48

   79 try_catch_block: TRY endl_opt . block_statement endl_opt catch_clause

    '{'  shift, and go to state 25

    block_statement  go to state 102


State 49

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'
  100 stmt_top: THROW expr . stmt_sep

    ';'               shift, and go to state 64
    ENDL              shift, and go to state 41
    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    endl      go to state 89
    stmt_sep  go to state 103


State 50

   77 function_declaration: FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   78                     | FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ID  shift, and go to state 104


State 51

  144 enum_declaration: ENUM endl_opt . ID endl_opt '{' endl_opt id_list_endl '}'
  145                 | ENUM endl_opt . ID endl_opt '{' endl_opt id_list_init endl_opt '}'
  146                 | ENUM endl_opt . ID endl_opt '{' endl_opt id_list_endl ',' endl_opt id_list_init endl_opt '}'
  147                 | ENUM endl_opt . ID endl_opt '{' endl_opt '}'

    ID  shift, and go to state 105


State 52

   52 expr: ID '(' . endl_opt expr_list_endl_opt ')'

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 106


State 53

   99 stmt_top: ';' endl_opt .

    $default  reduce using rule 99 (stmt_top)


State 54

   53 expr: '[' endl_opt . expr_list_endl_opt ']'

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    $default  reduce using rule 14 (expr_list_endl_opt)

    expr_list           go to state 107
    expr_list_endl_opt  go to state 108
    expr_list_endl      go to state 109
    expr                go to state 110


State 55

   23 expr: '+' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 111


State 56

   22 expr: '-' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 112


State 57

   20 expr: PREF_INCREMENT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 113


State 58

   18 expr: PREF_DECREMENT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 114


State 59

   47 expr: NOT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 115


State 60

   29 expr: '(' endl_opt . expr endl_opt ')'

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 116


State 61

   54 block_statement: '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 94
    DO              shift, and go to state 1
    IF              shift, and go to state 2
    FOR             shift, and go to state 3
    WHILE           shift, and go to state 4
    SWITCH          shift, and go to state 5
    TRY             shift, and go to state 6
    THROW           shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24
    '{'             shift, and go to state 25

    $default  reduce using rule 84 (stmt_list_opt)

    expr              go to state 29
    block_statement   go to state 30
    if_stmt           go to state 31
    while_stmt        go to state 32
    do_while_stmt     go to state 33
    for_stmt          go to state 34
    switch_stmt       go to state 35
    return_statement  go to state 95
    try_catch_block   go to state 37
    stmt_list_opt     go to state 117
    stmt_list         go to state 118
    stmt_top          go to state 96
    stmt              go to state 119
    modifier          go to state 39
    enum_declaration  go to state 40


State 62

    0 $accept: prog $end .

    $default  accept


State 63

    3 program: program program_elem .

    $default  reduce using rule 3 (program)


State 64

   10 stmt_sep: ';' . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 120


State 65

   41 expr: expr '=' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 121


State 66

   42 expr: expr PLUS_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 122


State 67

   43 expr: expr MINUS_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 123


State 68

   44 expr: expr MUL_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 124


State 69

   45 expr: expr DIV_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 125


State 70

   46 expr: expr MOD_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 126


State 71

   51 expr: expr '[' . endl_opt expr endl_opt ']'

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 127


State 72

   50 expr: expr '?' . endl_opt expr endl_opt ':' endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 128


State 73

   49 expr: expr OR . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 129


State 74

   48 expr: expr AND . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 130


State 75

   39 expr: expr EQUALS . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 131


State 76

   40 expr: expr NOT_EQUALS . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 132


State 77

   35 expr: expr '<' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 133


State 78

   36 expr: expr '>' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 134


State 79

   37 expr: expr LESS_OR_EQUAL . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 135


State 80

   38 expr: expr GREATER_OR_EQUAL . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 136


State 81

   21 expr: expr AS . endl_opt type

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 137


State 82

   30 expr: expr '+' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 138


State 83

   31 expr: expr '-' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 139


State 84

   32 expr: expr '*' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 140


State 85

   33 expr: expr '/' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 141


State 86

   34 expr: expr '%' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 142


State 87

   19 expr: expr POST_INCREMENT .

    $default  reduce using rule 19 (expr)


State 88

   17 expr: expr POST_DECREMENT .

    $default  reduce using rule 17 (expr)


State 89

    7 endl: endl . ENDL
   11 stmt_sep: endl .

    ENDL  shift, and go to state 93

    $default  reduce using rule 11 (stmt_sep)


State 90

   88 stmt_top: expr stmt_sep .

    $default  reduce using rule 88 (stmt_top)


State 91

   95 stmt_top: block_statement endl_opt .

    $default  reduce using rule 95 (stmt_top)


State 92

   96 stmt_top: modifier endl_opt . ID stmt_sep
   97         | modifier endl_opt . var_list_stmt

    ID  shift, and go to state 143

    variable_endl  go to state 144
    variable_stmt  go to state 145
    var_list       go to state 146
    var_list_stmt  go to state 147


State 93

    7 endl: endl ENDL .

    $default  reduce using rule 7 (endl)


State 94

   76 return_statement: RETURN . expr stmt_sep

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 148


State 95

  102 stmt: return_statement .

    $default  reduce using rule 102 (stmt)


State 96

  101 stmt: stmt_top .

    $default  reduce using rule 101 (stmt)


State 97

   58 do_while_stmt: DO endl_opt stmt . WHILE endl_opt '(' endl_opt expr endl_opt ')' stmt_sep

    WHILE  shift, and go to state 149


State 98

   55 if_stmt: IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt
   56        | IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 150


State 99

   59 for_stmt: FOR endl_opt '(' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 151


State 100

   57 while_stmt: WHILE endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 152


State 101

   60 switch_stmt: SWITCH endl_opt '(' . endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list_break '}' endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 153


State 102

   79 try_catch_block: TRY endl_opt block_statement . endl_opt catch_clause

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 154


State 103

  100 stmt_top: THROW expr stmt_sep .

    $default  reduce using rule 100 (stmt_top)


State 104

   77 function_declaration: FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   78                     | FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 155


State 105

  144 enum_declaration: ENUM endl_opt ID . endl_opt '{' endl_opt id_list_endl '}'
  145                 | ENUM endl_opt ID . endl_opt '{' endl_opt id_list_init endl_opt '}'
  146                 | ENUM endl_opt ID . endl_opt '{' endl_opt id_list_endl ',' endl_opt id_list_init endl_opt '}'
  147                 | ENUM endl_opt ID . endl_opt '{' endl_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 156


State 106

   52 expr: ID '(' endl_opt . expr_list_endl_opt ')'

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    $default  reduce using rule 14 (expr_list_endl_opt)

    expr_list           go to state 107
    expr_list_endl_opt  go to state 157
    expr_list_endl      go to state 109
    expr                go to state 110


State 107

   13 expr_list: expr_list . endl_opt ',' endl_opt expr
   16 expr_list_endl: expr_list . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 158


State 108

   53 expr: '[' endl_opt expr_list_endl_opt . ']'

    ']'  shift, and go to state 159


State 109

   15 expr_list_endl_opt: expr_list_endl .

    $default  reduce using rule 15 (expr_list_endl_opt)


State 110

   12 expr_list: expr .
   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 12 (expr_list)


State 111

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   23     | '+' endl_opt expr .
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    $default  reduce using rule 23 (expr)


State 112

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   22     | '-' endl_opt expr .
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    $default  reduce using rule 22 (expr)


State 113

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   20     | PREF_INCREMENT endl_opt expr .
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 87
    POST_DECREMENT  shift, and go to state 88

    $default  reduce using rule 20 (expr)


State 114

   17 expr: expr . POST_DECREMENT
   18     | PREF_DECREMENT endl_opt expr .
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 87
    POST_DECREMENT  shift, and go to state 88

    $default  reduce using rule 18 (expr)


State 115

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   47     | NOT endl_opt expr .
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    $default  reduce using rule 47 (expr)


State 116

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   29     | '(' endl_opt expr . endl_opt ')'
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    ENDL              shift, and go to state 41
    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 160


State 117

   54 block_statement: '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 161


State 118

   85 stmt_list_opt: stmt_list .
   87 stmt_list: stmt_list . stmt

    RETURN          shift, and go to state 94
    DO              shift, and go to state 1
    IF              shift, and go to state 2
    FOR             shift, and go to state 3
    WHILE           shift, and go to state 4
    SWITCH          shift, and go to state 5
    TRY             shift, and go to state 6
    THROW           shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24
    '{'             shift, and go to state 25

    $default  reduce using rule 85 (stmt_list_opt)

    expr              go to state 29
    block_statement   go to state 30
    if_stmt           go to state 31
    while_stmt        go to state 32
    do_while_stmt     go to state 33
    for_stmt          go to state 34
    switch_stmt       go to state 35
    return_statement  go to state 95
    try_catch_block   go to state 37
    stmt_top          go to state 96
    stmt              go to state 162
    modifier          go to state 39
    enum_declaration  go to state 40


State 119

   86 stmt_list: stmt .

    $default  reduce using rule 86 (stmt_list)


State 120

   10 stmt_sep: ';' endl_opt .

    $default  reduce using rule 10 (stmt_sep)


State 121

   41 expr: expr '=' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 163


State 122

   42 expr: expr PLUS_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 164


State 123

   43 expr: expr MINUS_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 165


State 124

   44 expr: expr MUL_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 166


State 125

   45 expr: expr DIV_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 167


State 126

   46 expr: expr MOD_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 168


State 127

   51 expr: expr '[' endl_opt . expr endl_opt ']'

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 169


State 128

   50 expr: expr '?' endl_opt . expr endl_opt ':' endl_opt expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 170


State 129

   49 expr: expr OR endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 171


State 130

   48 expr: expr AND endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 172


State 131

   39 expr: expr EQUALS endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 173


State 132

   40 expr: expr NOT_EQUALS endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 174


State 133

   35 expr: expr '<' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 175


State 134

   36 expr: expr '>' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 176


State 135

   37 expr: expr LESS_OR_EQUAL endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 177


State 136

   38 expr: expr GREATER_OR_EQUAL endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 178


State 137

   21 expr: expr AS endl_opt . type

    UNKNOWN  shift, and go to state 179
    ANY      shift, and go to state 180
    NUMBER   shift, and go to state 181
    STRING   shift, and go to state 182
    VOID     shift, and go to state 183
    BOOLEAN  shift, and go to state 184
    ID       shift, and go to state 185

    type  go to state 186


State 138

   30 expr: expr '+' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 187


State 139

   31 expr: expr '-' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 188


State 140

   32 expr: expr '*' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 189


State 141

   33 expr: expr '/' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 190


State 142

   34 expr: expr '%' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 191


State 143

   96 stmt_top: modifier endl_opt ID . stmt_sep
  113 variable_endl: ID . endl_opt type_mark endl_opt var_init endl_opt
  114              | ID . endl_opt type_mark endl_opt
  115              | ID . endl_opt var_init endl_opt
  116              | ID . endl_opt type_mark dimensions_list endl_opt
  117              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' endl_opt
  118 variable_stmt: ID . endl_opt type_mark endl_opt var_init stmt_sep
  119              | ID . endl_opt type_mark stmt_sep
  120              | ID . endl_opt var_init stmt_sep
  121              | ID . endl_opt type_mark dimensions_list stmt_sep
  122              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' stmt_sep
  125 var_list: ID . endl_opt ',' endl_opt variable_endl
  127         | ID . endl_opt ',' endl_opt ID endl_opt
  131 var_list_stmt: ID . endl_opt ',' endl_opt variable_stmt
  133              | ID . endl_opt ',' endl_opt ID stmt_sep

    ';'   shift, and go to state 64
    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 192
    endl_opt  go to state 193
    stmt_sep  go to state 194


State 144

  124 var_list: variable_endl . ',' endl_opt variable_endl
  126         | variable_endl . ',' endl_opt ID endl_opt
  130 var_list_stmt: variable_endl . ',' endl_opt variable_stmt
  132              | variable_endl . ',' endl_opt ID stmt_sep

    ','  shift, and go to state 195


State 145

  129 var_list_stmt: variable_stmt .

    $default  reduce using rule 129 (var_list_stmt)


State 146

  128 var_list: var_list . ',' endl_opt variable_endl
  134 var_list_stmt: var_list . ',' endl_opt variable_stmt

    ','  shift, and go to state 196


State 147

   97 stmt_top: modifier endl_opt var_list_stmt .

    $default  reduce using rule 97 (stmt_top)


State 148

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'
   76 return_statement: RETURN expr . stmt_sep

    ';'               shift, and go to state 64
    ENDL              shift, and go to state 41
    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    endl      go to state 89
    stmt_sep  go to state 197


State 149

   58 do_while_stmt: DO endl_opt stmt WHILE . endl_opt '(' endl_opt expr endl_opt ')' stmt_sep

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 198


State 150

   55 if_stmt: IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt
   56        | IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 199


State 151

   59 for_stmt: FOR endl_opt '(' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 200


State 152

   57 while_stmt: WHILE endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 201


State 153

   60 switch_stmt: SWITCH endl_opt '(' endl_opt . expr endl_opt ')' endl_opt '{' endl_opt case_list_break '}' endl_opt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 202


State 154

   79 try_catch_block: TRY endl_opt block_statement endl_opt . catch_clause

    CATCH  shift, and go to state 203

    catch_clause  go to state 204


State 155

   77 function_declaration: FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   78                     | FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    '('  shift, and go to state 205

    param_list_0_or_more  go to state 206


State 156

  144 enum_declaration: ENUM endl_opt ID endl_opt . '{' endl_opt id_list_endl '}'
  145                 | ENUM endl_opt ID endl_opt . '{' endl_opt id_list_init endl_opt '}'
  146                 | ENUM endl_opt ID endl_opt . '{' endl_opt id_list_endl ',' endl_opt id_list_init endl_opt '}'
  147                 | ENUM endl_opt ID endl_opt . '{' endl_opt '}'

    '{'  shift, and go to state 207


State 157

   52 expr: ID '(' endl_opt expr_list_endl_opt . ')'

    ')'  shift, and go to state 208


State 158

   13 expr_list: expr_list endl_opt . ',' endl_opt expr
   16 expr_list_endl: expr_list endl_opt .

    ','  shift, and go to state 209

    $default  reduce using rule 16 (expr_list_endl)


State 159

   53 expr: '[' endl_opt expr_list_endl_opt ']' .

    $default  reduce using rule 53 (expr)


State 160

   29 expr: '(' endl_opt expr endl_opt . ')'

    ')'  shift, and go to state 210


State 161

   54 block_statement: '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 54 (block_statement)


State 162

   87 stmt_list: stmt_list stmt .

    $default  reduce using rule 87 (stmt_list)


State 163

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   41     | expr '=' endl_opt expr .
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 41 (expr)


State 164

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr PLUS_ASSIGN endl_opt expr .
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 42 (expr)


State 165

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr MINUS_ASSIGN endl_opt expr .
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 43 (expr)


State 166

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   44     | expr MUL_ASSIGN endl_opt expr .
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 44 (expr)


State 167

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   45     | expr DIV_ASSIGN endl_opt expr .
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 45 (expr)


State 168

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   46     | expr MOD_ASSIGN endl_opt expr .
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 46 (expr)


State 169

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr '[' endl_opt expr . endl_opt ']'

    ENDL              shift, and go to state 41
    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 211


State 170

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr '?' endl_opt expr . endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    ENDL              shift, and go to state 41
    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 212


State 171

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   49     | expr OR endl_opt expr .
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 49 (expr)


State 172

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   48     | expr AND endl_opt expr .
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 48 (expr)


State 173

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   39     | expr EQUALS endl_opt expr .
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85
    '%'             shift, and go to state 86
    POST_INCREMENT  shift, and go to state 87
    POST_DECREMENT  shift, and go to state 88

    $default  reduce using rule 39 (expr)


State 174

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   40     | expr NOT_EQUALS endl_opt expr .
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85
    '%'             shift, and go to state 86
    POST_INCREMENT  shift, and go to state 87
    POST_DECREMENT  shift, and go to state 88

    $default  reduce using rule 40 (expr)


State 175

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   35     | expr '<' endl_opt expr .
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85
    '%'             shift, and go to state 86
    POST_INCREMENT  shift, and go to state 87
    POST_DECREMENT  shift, and go to state 88

    $default  reduce using rule 35 (expr)


State 176

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   36     | expr '>' endl_opt expr .
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85
    '%'             shift, and go to state 86
    POST_INCREMENT  shift, and go to state 87
    POST_DECREMENT  shift, and go to state 88

    $default  reduce using rule 36 (expr)


State 177

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr LESS_OR_EQUAL endl_opt expr .
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85
    '%'             shift, and go to state 86
    POST_INCREMENT  shift, and go to state 87
    POST_DECREMENT  shift, and go to state 88

    $default  reduce using rule 37 (expr)


State 178

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr GREATER_OR_EQUAL endl_opt expr .
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '*'             shift, and go to state 84
    '/'             shift, and go to state 85
    '%'             shift, and go to state 86
    POST_INCREMENT  shift, and go to state 87
    POST_DECREMENT  shift, and go to state 88

    $default  reduce using rule 38 (expr)


State 179

  109 type: UNKNOWN .

    $default  reduce using rule 109 (type)


State 180

  108 type: ANY .

    $default  reduce using rule 108 (type)


State 181

  105 type: NUMBER .

    $default  reduce using rule 105 (type)


State 182

  106 type: STRING .

    $default  reduce using rule 106 (type)


State 183

  110 type: VOID .

    $default  reduce using rule 110 (type)


State 184

  107 type: BOOLEAN .

    $default  reduce using rule 107 (type)


State 185

  111 type: ID .

    $default  reduce using rule 111 (type)


State 186

   21 expr: expr AS endl_opt type .

    $default  reduce using rule 21 (expr)


State 187

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   30     | expr '+' endl_opt expr .
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    '*'             shift, and go to state 84
    '/'             shift, and go to state 85
    '%'             shift, and go to state 86
    POST_INCREMENT  shift, and go to state 87
    POST_DECREMENT  shift, and go to state 88

    $default  reduce using rule 30 (expr)


State 188

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   31     | expr '-' endl_opt expr .
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    '*'             shift, and go to state 84
    '/'             shift, and go to state 85
    '%'             shift, and go to state 86
    POST_INCREMENT  shift, and go to state 87
    POST_DECREMENT  shift, and go to state 88

    $default  reduce using rule 31 (expr)


State 189

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   32     | expr '*' endl_opt expr .
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 87
    POST_DECREMENT  shift, and go to state 88

    $default  reduce using rule 32 (expr)


State 190

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   33     | expr '/' endl_opt expr .
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 87
    POST_DECREMENT  shift, and go to state 88

    $default  reduce using rule 33 (expr)


State 191

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   34     | expr '%' endl_opt expr .
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 87
    POST_DECREMENT  shift, and go to state 88

    $default  reduce using rule 34 (expr)


State 192

    7 endl: endl . ENDL
    9 endl_opt: endl .
   11 stmt_sep: endl .

    ENDL  shift, and go to state 93

    '='       reduce using rule 9 (endl_opt)
    ':'       reduce using rule 9 (endl_opt)
    ','       reduce using rule 9 (endl_opt)
    $default  reduce using rule 11 (stmt_sep)


State 193

  113 variable_endl: ID endl_opt . type_mark endl_opt var_init endl_opt
  114              | ID endl_opt . type_mark endl_opt
  115              | ID endl_opt . var_init endl_opt
  116              | ID endl_opt . type_mark dimensions_list endl_opt
  117              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' endl_opt
  118 variable_stmt: ID endl_opt . type_mark endl_opt var_init stmt_sep
  119              | ID endl_opt . type_mark stmt_sep
  120              | ID endl_opt . var_init stmt_sep
  121              | ID endl_opt . type_mark dimensions_list stmt_sep
  122              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' stmt_sep
  125 var_list: ID endl_opt . ',' endl_opt variable_endl
  127         | ID endl_opt . ',' endl_opt ID endl_opt
  131 var_list_stmt: ID endl_opt . ',' endl_opt variable_stmt
  133              | ID endl_opt . ',' endl_opt ID stmt_sep

    '='  shift, and go to state 213
    ':'  shift, and go to state 214
    ','  shift, and go to state 215

    type_mark  go to state 216
    var_init   go to state 217


State 194

   96 stmt_top: modifier endl_opt ID stmt_sep .

    $default  reduce using rule 96 (stmt_top)


State 195

  124 var_list: variable_endl ',' . endl_opt variable_endl
  126         | variable_endl ',' . endl_opt ID endl_opt
  130 var_list_stmt: variable_endl ',' . endl_opt variable_stmt
  132              | variable_endl ',' . endl_opt ID stmt_sep

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 218


State 196

  128 var_list: var_list ',' . endl_opt variable_endl
  134 var_list_stmt: var_list ',' . endl_opt variable_stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 219


State 197

   76 return_statement: RETURN expr stmt_sep .

    $default  reduce using rule 76 (return_statement)


State 198

   58 do_while_stmt: DO endl_opt stmt WHILE endl_opt . '(' endl_opt expr endl_opt ')' stmt_sep

    '('  shift, and go to state 220


State 199

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'
   55 if_stmt: IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt
   56        | IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 221


State 200

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'
   59 for_stmt: FOR endl_opt '(' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 222


State 201

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'
   57 while_stmt: WHILE endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 223


State 202

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'
   60 switch_stmt: SWITCH endl_opt '(' endl_opt expr . endl_opt ')' endl_opt '{' endl_opt case_list_break '}' endl_opt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 224


State 203

   80 catch_clause: CATCH . endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   81             | CATCH . endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 225


State 204

   79 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause .

    $default  reduce using rule 79 (try_catch_block)


State 205

  142 param_list_0_or_more: '(' . endl_opt param_list endl_opt ')'
  143                     | '(' . endl_opt ')'

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 226


State 206

   77 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   78                     | FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 227


State 207

  144 enum_declaration: ENUM endl_opt ID endl_opt '{' . endl_opt id_list_endl '}'
  145                 | ENUM endl_opt ID endl_opt '{' . endl_opt id_list_init endl_opt '}'
  146                 | ENUM endl_opt ID endl_opt '{' . endl_opt id_list_endl ',' endl_opt id_list_init endl_opt '}'
  147                 | ENUM endl_opt ID endl_opt '{' . endl_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 228


State 208

   52 expr: ID '(' endl_opt expr_list_endl_opt ')' .

    $default  reduce using rule 52 (expr)


State 209

   13 expr_list: expr_list endl_opt ',' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 229


State 210

   29 expr: '(' endl_opt expr endl_opt ')' .

    $default  reduce using rule 29 (expr)


State 211

   51 expr: expr '[' endl_opt expr endl_opt . ']'

    ']'  shift, and go to state 230


State 212

   50 expr: expr '?' endl_opt expr endl_opt . ':' endl_opt expr

    ':'  shift, and go to state 231


State 213

  123 var_init: '=' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 232


State 214

  112 type_mark: ':' . endl_opt type

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 233


State 215

  125 var_list: ID endl_opt ',' . endl_opt variable_endl
  127         | ID endl_opt ',' . endl_opt ID endl_opt
  131 var_list_stmt: ID endl_opt ',' . endl_opt variable_stmt
  133              | ID endl_opt ',' . endl_opt ID stmt_sep

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 234


State 216

  113 variable_endl: ID endl_opt type_mark . endl_opt var_init endl_opt
  114              | ID endl_opt type_mark . endl_opt
  116              | ID endl_opt type_mark . dimensions_list endl_opt
  117              | ID endl_opt type_mark . dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' endl_opt
  118 variable_stmt: ID endl_opt type_mark . endl_opt var_init stmt_sep
  119              | ID endl_opt type_mark . stmt_sep
  121              | ID endl_opt type_mark . dimensions_list stmt_sep
  122              | ID endl_opt type_mark . dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' stmt_sep

    ';'   shift, and go to state 64
    ENDL  shift, and go to state 41
    '['   shift, and go to state 235

    $default  reduce using rule 8 (endl_opt)

    endl             go to state 192
    endl_opt         go to state 236
    stmt_sep         go to state 237
    dimensions       go to state 238
    dimensions_list  go to state 239


State 217

  115 variable_endl: ID endl_opt var_init . endl_opt
  120 variable_stmt: ID endl_opt var_init . stmt_sep

    ';'   shift, and go to state 64
    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 192
    endl_opt  go to state 240
    stmt_sep  go to state 241


State 218

  124 var_list: variable_endl ',' endl_opt . variable_endl
  126         | variable_endl ',' endl_opt . ID endl_opt
  130 var_list_stmt: variable_endl ',' endl_opt . variable_stmt
  132              | variable_endl ',' endl_opt . ID stmt_sep

    ID  shift, and go to state 242

    variable_endl  go to state 243
    variable_stmt  go to state 244


State 219

  128 var_list: var_list ',' endl_opt . variable_endl
  134 var_list_stmt: var_list ',' endl_opt . variable_stmt

    ID  shift, and go to state 245

    variable_endl  go to state 246
    variable_stmt  go to state 247


State 220

   58 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' . endl_opt expr endl_opt ')' stmt_sep

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 248


State 221

   55 if_stmt: IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt
   56        | IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt ELSE endl_opt stmt

    ')'  shift, and go to state 249


State 222

   59 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 250


State 223

   57 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt

    ')'  shift, and go to state 251


State 224

   60 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt . ')' endl_opt '{' endl_opt case_list_break '}' endl_opt

    ')'  shift, and go to state 252


State 225

   80 catch_clause: CATCH endl_opt . '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   81             | CATCH endl_opt . '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    '('  shift, and go to state 253


State 226

  142 param_list_0_or_more: '(' endl_opt . param_list endl_opt ')'
  143                     | '(' endl_opt . ')'

    ID   shift, and go to state 254
    ')'  shift, and go to state 255

    param       go to state 256
    param_list  go to state 257


State 227

   77 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   78                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . '{' endl_opt stmt_list_opt '}'

    ':'  shift, and go to state 214
    '{'  shift, and go to state 258

    type_mark  go to state 259


State 228

  144 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt . id_list_endl '}'
  145                 | ENUM endl_opt ID endl_opt '{' endl_opt . id_list_init endl_opt '}'
  146                 | ENUM endl_opt ID endl_opt '{' endl_opt . id_list_endl ',' endl_opt id_list_init endl_opt '}'
  147                 | ENUM endl_opt ID endl_opt '{' endl_opt . '}'

    ID   shift, and go to state 260
    '}'  shift, and go to state 261

    id_list_init  go to state 262
    id_list_endl  go to state 263


State 229

   13 expr_list: expr_list endl_opt ',' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 264


State 230

   51 expr: expr '[' endl_opt expr endl_opt ']' .

    $default  reduce using rule 51 (expr)


State 231

   50 expr: expr '?' endl_opt expr endl_opt ':' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 265


State 232

  123 var_init: '=' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 266


State 233

  112 type_mark: ':' endl_opt . type

    UNKNOWN  shift, and go to state 179
    ANY      shift, and go to state 180
    NUMBER   shift, and go to state 181
    STRING   shift, and go to state 182
    VOID     shift, and go to state 183
    BOOLEAN  shift, and go to state 184
    ID       shift, and go to state 185

    type  go to state 267


State 234

  125 var_list: ID endl_opt ',' endl_opt . variable_endl
  127         | ID endl_opt ',' endl_opt . ID endl_opt
  131 var_list_stmt: ID endl_opt ',' endl_opt . variable_stmt
  133              | ID endl_opt ',' endl_opt . ID stmt_sep

    ID  shift, and go to state 268

    variable_endl  go to state 269
    variable_stmt  go to state 270


State 235

  135 dimensions: '[' . endl_opt ']'

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 271


State 236

  113 variable_endl: ID endl_opt type_mark endl_opt . var_init endl_opt
  114              | ID endl_opt type_mark endl_opt .
  118 variable_stmt: ID endl_opt type_mark endl_opt . var_init stmt_sep

    '='  shift, and go to state 213

    $default  reduce using rule 114 (variable_endl)

    var_init  go to state 272


State 237

  119 variable_stmt: ID endl_opt type_mark stmt_sep .

    $default  reduce using rule 119 (variable_stmt)


State 238

  136 dimensions_list: dimensions .

    $default  reduce using rule 136 (dimensions_list)


State 239

  116 variable_endl: ID endl_opt type_mark dimensions_list . endl_opt
  117              | ID endl_opt type_mark dimensions_list . endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' endl_opt
  121 variable_stmt: ID endl_opt type_mark dimensions_list . stmt_sep
  122              | ID endl_opt type_mark dimensions_list . endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' stmt_sep
  137 dimensions_list: dimensions_list . dimensions

    ';'   shift, and go to state 64
    ENDL  shift, and go to state 41
    '['   shift, and go to state 235

    $default  reduce using rule 8 (endl_opt)

    endl        go to state 192
    endl_opt    go to state 273
    stmt_sep    go to state 274
    dimensions  go to state 275


State 240

  115 variable_endl: ID endl_opt var_init endl_opt .

    $default  reduce using rule 115 (variable_endl)


State 241

  120 variable_stmt: ID endl_opt var_init stmt_sep .

    $default  reduce using rule 120 (variable_stmt)


State 242

  113 variable_endl: ID . endl_opt type_mark endl_opt var_init endl_opt
  114              | ID . endl_opt type_mark endl_opt
  115              | ID . endl_opt var_init endl_opt
  116              | ID . endl_opt type_mark dimensions_list endl_opt
  117              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' endl_opt
  118 variable_stmt: ID . endl_opt type_mark endl_opt var_init stmt_sep
  119              | ID . endl_opt type_mark stmt_sep
  120              | ID . endl_opt var_init stmt_sep
  121              | ID . endl_opt type_mark dimensions_list stmt_sep
  122              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' stmt_sep
  126 var_list: variable_endl ',' endl_opt ID . endl_opt
  132 var_list_stmt: variable_endl ',' endl_opt ID . stmt_sep

    ';'   shift, and go to state 64
    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 192
    endl_opt  go to state 276
    stmt_sep  go to state 277


State 243

  124 var_list: variable_endl ',' endl_opt variable_endl .

    $default  reduce using rule 124 (var_list)


State 244

  130 var_list_stmt: variable_endl ',' endl_opt variable_stmt .

    $default  reduce using rule 130 (var_list_stmt)


State 245

  113 variable_endl: ID . endl_opt type_mark endl_opt var_init endl_opt
  114              | ID . endl_opt type_mark endl_opt
  115              | ID . endl_opt var_init endl_opt
  116              | ID . endl_opt type_mark dimensions_list endl_opt
  117              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' endl_opt
  118 variable_stmt: ID . endl_opt type_mark endl_opt var_init stmt_sep
  119              | ID . endl_opt type_mark stmt_sep
  120              | ID . endl_opt var_init stmt_sep
  121              | ID . endl_opt type_mark dimensions_list stmt_sep
  122              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' stmt_sep

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 278


State 246

  128 var_list: var_list ',' endl_opt variable_endl .

    $default  reduce using rule 128 (var_list)


State 247

  134 var_list_stmt: var_list ',' endl_opt variable_stmt .

    $default  reduce using rule 134 (var_list_stmt)


State 248

   58 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt . expr endl_opt ')' stmt_sep

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 279


State 249

   55 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt
   56        | IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 280


State 250

   59 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 281


State 251

   57 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 282


State 252

   60 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' . endl_opt '{' endl_opt case_list_break '}' endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 283


State 253

   80 catch_clause: CATCH endl_opt '(' . endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   81             | CATCH endl_opt '(' . endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 284


State 254

  138 param: ID . endl_opt type_mark
  139      | ID . endl_opt '?' endl_opt type_mark

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 285


State 255

  143 param_list_0_or_more: '(' endl_opt ')' .

    $default  reduce using rule 143 (param_list_0_or_more)


State 256

  140 param_list: param .

    $default  reduce using rule 140 (param_list)


State 257

  141 param_list: param_list . endl_opt ',' endl_opt param
  142 param_list_0_or_more: '(' endl_opt param_list . endl_opt ')'

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 286


State 258

   78 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 287


State 259

   77 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 288


State 260

  148 id_list_init: ID . endl_opt var_init
  150 id_list_endl: ID . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 289


State 261

  147 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt '}' .

    $default  reduce using rule 147 (enum_declaration)


State 262

  145 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_init . endl_opt '}'
  149 id_list_init: id_list_init . endl_opt ',' endl_opt ID endl_opt var_init

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 290


State 263

  144 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_endl . '}'
  146                 | ENUM endl_opt ID endl_opt '{' endl_opt id_list_endl . ',' endl_opt id_list_init endl_opt '}'
  151 id_list_endl: id_list_endl . ',' endl_opt ID endl_opt

    ','  shift, and go to state 291
    '}'  shift, and go to state 292


State 264

   13 expr_list: expr_list endl_opt ',' endl_opt expr .
   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 13 (expr_list)


State 265

   50 expr: expr '?' endl_opt expr endl_opt ':' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 293


State 266

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'
  123 var_init: '=' endl_opt expr .

    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 123 (var_init)


State 267

  112 type_mark: ':' endl_opt type .

    $default  reduce using rule 112 (type_mark)


State 268

  113 variable_endl: ID . endl_opt type_mark endl_opt var_init endl_opt
  114              | ID . endl_opt type_mark endl_opt
  115              | ID . endl_opt var_init endl_opt
  116              | ID . endl_opt type_mark dimensions_list endl_opt
  117              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' endl_opt
  118 variable_stmt: ID . endl_opt type_mark endl_opt var_init stmt_sep
  119              | ID . endl_opt type_mark stmt_sep
  120              | ID . endl_opt var_init stmt_sep
  121              | ID . endl_opt type_mark dimensions_list stmt_sep
  122              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' stmt_sep
  127 var_list: ID endl_opt ',' endl_opt ID . endl_opt
  133 var_list_stmt: ID endl_opt ',' endl_opt ID . stmt_sep

    ';'   shift, and go to state 64
    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 192
    endl_opt  go to state 294
    stmt_sep  go to state 295


State 269

  125 var_list: ID endl_opt ',' endl_opt variable_endl .

    $default  reduce using rule 125 (var_list)


State 270

  131 var_list_stmt: ID endl_opt ',' endl_opt variable_stmt .

    $default  reduce using rule 131 (var_list_stmt)


State 271

  135 dimensions: '[' endl_opt . ']'

    ']'  shift, and go to state 296


State 272

  113 variable_endl: ID endl_opt type_mark endl_opt var_init . endl_opt
  118 variable_stmt: ID endl_opt type_mark endl_opt var_init . stmt_sep

    ';'   shift, and go to state 64
    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 192
    endl_opt  go to state 297
    stmt_sep  go to state 298


State 273

  116 variable_endl: ID endl_opt type_mark dimensions_list endl_opt .
  117              | ID endl_opt type_mark dimensions_list endl_opt . '=' endl_opt '[' endl_opt expr_list_endl_opt ']' endl_opt
  122 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt . '=' endl_opt '[' endl_opt expr_list_endl_opt ']' stmt_sep

    '='  shift, and go to state 299

    $default  reduce using rule 116 (variable_endl)


State 274

  121 variable_stmt: ID endl_opt type_mark dimensions_list stmt_sep .

    $default  reduce using rule 121 (variable_stmt)


State 275

  137 dimensions_list: dimensions_list dimensions .

    $default  reduce using rule 137 (dimensions_list)


State 276

  113 variable_endl: ID endl_opt . type_mark endl_opt var_init endl_opt
  114              | ID endl_opt . type_mark endl_opt
  115              | ID endl_opt . var_init endl_opt
  116              | ID endl_opt . type_mark dimensions_list endl_opt
  117              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' endl_opt
  118 variable_stmt: ID endl_opt . type_mark endl_opt var_init stmt_sep
  119              | ID endl_opt . type_mark stmt_sep
  120              | ID endl_opt . var_init stmt_sep
  121              | ID endl_opt . type_mark dimensions_list stmt_sep
  122              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' stmt_sep
  126 var_list: variable_endl ',' endl_opt ID endl_opt .

    '='  shift, and go to state 213
    ':'  shift, and go to state 214

    $default  reduce using rule 126 (var_list)

    type_mark  go to state 216
    var_init   go to state 217


State 277

  132 var_list_stmt: variable_endl ',' endl_opt ID stmt_sep .

    $default  reduce using rule 132 (var_list_stmt)


State 278

  113 variable_endl: ID endl_opt . type_mark endl_opt var_init endl_opt
  114              | ID endl_opt . type_mark endl_opt
  115              | ID endl_opt . var_init endl_opt
  116              | ID endl_opt . type_mark dimensions_list endl_opt
  117              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' endl_opt
  118 variable_stmt: ID endl_opt . type_mark endl_opt var_init stmt_sep
  119              | ID endl_opt . type_mark stmt_sep
  120              | ID endl_opt . var_init stmt_sep
  121              | ID endl_opt . type_mark dimensions_list stmt_sep
  122              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' stmt_sep

    '='  shift, and go to state 213
    ':'  shift, and go to state 214

    type_mark  go to state 216
    var_init   go to state 217


State 279

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'
   58 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr . endl_opt ')' stmt_sep

    ENDL              shift, and go to state 41
    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 300


State 280

   55 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt
   56        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt ELSE endl_opt stmt

    RETURN          shift, and go to state 94
    DO              shift, and go to state 1
    IF              shift, and go to state 2
    FOR             shift, and go to state 3
    WHILE           shift, and go to state 4
    SWITCH          shift, and go to state 5
    TRY             shift, and go to state 6
    THROW           shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24
    '{'             shift, and go to state 25

    expr              go to state 29
    block_statement   go to state 30
    if_stmt           go to state 31
    while_stmt        go to state 32
    do_while_stmt     go to state 33
    for_stmt          go to state 34
    switch_stmt       go to state 35
    return_statement  go to state 95
    try_catch_block   go to state 37
    stmt_top          go to state 96
    stmt              go to state 301
    modifier          go to state 39
    enum_declaration  go to state 40


State 281

   59 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 302


State 282

   57 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt

    RETURN          shift, and go to state 94
    DO              shift, and go to state 1
    IF              shift, and go to state 2
    FOR             shift, and go to state 3
    WHILE           shift, and go to state 4
    SWITCH          shift, and go to state 5
    TRY             shift, and go to state 6
    THROW           shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24
    '{'             shift, and go to state 25

    expr              go to state 29
    block_statement   go to state 30
    if_stmt           go to state 31
    while_stmt        go to state 32
    do_while_stmt     go to state 33
    for_stmt          go to state 34
    switch_stmt       go to state 35
    return_statement  go to state 95
    try_catch_block   go to state 37
    stmt_top          go to state 96
    stmt              go to state 303
    modifier          go to state 39
    enum_declaration  go to state 40


State 283

   60 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt . '{' endl_opt case_list_break '}' endl_opt

    '{'  shift, and go to state 304


State 284

   80 catch_clause: CATCH endl_opt '(' endl_opt . ID endl_opt ')' endl_opt block_statement endl_opt
   81             | CATCH endl_opt '(' endl_opt . ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ID  shift, and go to state 305


State 285

  138 param: ID endl_opt . type_mark
  139      | ID endl_opt . '?' endl_opt type_mark

    '?'  shift, and go to state 306
    ':'  shift, and go to state 214

    type_mark  go to state 307


State 286

  141 param_list: param_list endl_opt . ',' endl_opt param
  142 param_list_0_or_more: '(' endl_opt param_list endl_opt . ')'

    ')'  shift, and go to state 308
    ','  shift, and go to state 309


State 287

   78 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 94
    DO              shift, and go to state 1
    IF              shift, and go to state 2
    FOR             shift, and go to state 3
    WHILE           shift, and go to state 4
    SWITCH          shift, and go to state 5
    TRY             shift, and go to state 6
    THROW           shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24
    '{'             shift, and go to state 25

    $default  reduce using rule 84 (stmt_list_opt)

    expr              go to state 29
    block_statement   go to state 30
    if_stmt           go to state 31
    while_stmt        go to state 32
    do_while_stmt     go to state 33
    for_stmt          go to state 34
    switch_stmt       go to state 35
    return_statement  go to state 95
    try_catch_block   go to state 37
    stmt_list_opt     go to state 310
    stmt_list         go to state 118
    stmt_top          go to state 96
    stmt              go to state 119
    modifier          go to state 39
    enum_declaration  go to state 40


State 288

   77 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt . '{' endl_opt stmt_list_opt '}'

    '{'  shift, and go to state 311


State 289

  148 id_list_init: ID endl_opt . var_init
  150 id_list_endl: ID endl_opt .

    '='  shift, and go to state 213

    $default  reduce using rule 150 (id_list_endl)

    var_init  go to state 312


State 290

  145 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_init endl_opt . '}'
  149 id_list_init: id_list_init endl_opt . ',' endl_opt ID endl_opt var_init

    ','  shift, and go to state 313
    '}'  shift, and go to state 314


State 291

  146 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_endl ',' . endl_opt id_list_init endl_opt '}'
  151 id_list_endl: id_list_endl ',' . endl_opt ID endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 315


State 292

  144 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_endl '}' .

    $default  reduce using rule 144 (enum_declaration)


State 293

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr '?' endl_opt expr endl_opt ':' endl_opt expr .
   51     | expr . '[' endl_opt expr endl_opt ']'

    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 50 (expr)


State 294

  113 variable_endl: ID endl_opt . type_mark endl_opt var_init endl_opt
  114              | ID endl_opt . type_mark endl_opt
  115              | ID endl_opt . var_init endl_opt
  116              | ID endl_opt . type_mark dimensions_list endl_opt
  117              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' endl_opt
  118 variable_stmt: ID endl_opt . type_mark endl_opt var_init stmt_sep
  119              | ID endl_opt . type_mark stmt_sep
  120              | ID endl_opt . var_init stmt_sep
  121              | ID endl_opt . type_mark dimensions_list stmt_sep
  122              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' stmt_sep
  127 var_list: ID endl_opt ',' endl_opt ID endl_opt .

    '='  shift, and go to state 213
    ':'  shift, and go to state 214

    $default  reduce using rule 127 (var_list)

    type_mark  go to state 216
    var_init   go to state 217


State 295

  133 var_list_stmt: ID endl_opt ',' endl_opt ID stmt_sep .

    $default  reduce using rule 133 (var_list_stmt)


State 296

  135 dimensions: '[' endl_opt ']' .

    $default  reduce using rule 135 (dimensions)


State 297

  113 variable_endl: ID endl_opt type_mark endl_opt var_init endl_opt .

    $default  reduce using rule 113 (variable_endl)


State 298

  118 variable_stmt: ID endl_opt type_mark endl_opt var_init stmt_sep .

    $default  reduce using rule 118 (variable_stmt)


State 299

  117 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' . endl_opt '[' endl_opt expr_list_endl_opt ']' endl_opt
  122 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' . endl_opt '[' endl_opt expr_list_endl_opt ']' stmt_sep

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 316


State 300

   58 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt . ')' stmt_sep

    ')'  shift, and go to state 317


State 301

   55 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .
   56        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt stmt

    ELSE  shift, and go to state 318

    ELSE      [reduce using rule 55 (if_stmt)]
    $default  reduce using rule 55 (if_stmt)

    shift/reduce conflict on token ELSE:
       55 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .
       56 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt stmt
      Example: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE stmt
      Shift derivation
        if_stmt
        `-> 55: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
                                                                    `-> 101: stmt_top
                                                                             `-> 89: if_stmt
                                                                                     `-> 56: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt       stmt
                                                                                                                                                             `-> 56: %empty
      Reduce derivation
        if_stmt
        `-> 56: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt                                                                                ELSE endl_opt       stmt
                                                                    `-> 101: stmt_top                                                                        `-> 56: %empty
                                                                             `-> 89: if_stmt
                                                                                     `-> 55: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .



State 302

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'
   59 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 319


State 303

   57 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 57 (while_stmt)


State 304

   60 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' . endl_opt case_list_break '}' endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 320


State 305

   80 catch_clause: CATCH endl_opt '(' endl_opt ID . endl_opt ')' endl_opt block_statement endl_opt
   81             | CATCH endl_opt '(' endl_opt ID . endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 321


State 306

  139 param: ID endl_opt '?' . endl_opt type_mark

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 322


State 307

  138 param: ID endl_opt type_mark .

    $default  reduce using rule 138 (param)


State 308

  142 param_list_0_or_more: '(' endl_opt param_list endl_opt ')' .

    $default  reduce using rule 142 (param_list_0_or_more)


State 309

  141 param_list: param_list endl_opt ',' . endl_opt param

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 323


State 310

   78 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 324


State 311

   77 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 325


State 312

  148 id_list_init: ID endl_opt var_init .

    $default  reduce using rule 148 (id_list_init)


State 313

  149 id_list_init: id_list_init endl_opt ',' . endl_opt ID endl_opt var_init

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 326


State 314

  145 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_init endl_opt '}' .

    $default  reduce using rule 145 (enum_declaration)


State 315

  146 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_endl ',' endl_opt . id_list_init endl_opt '}'
  151 id_list_endl: id_list_endl ',' endl_opt . ID endl_opt

    ID  shift, and go to state 327

    id_list_init  go to state 328


State 316

  117 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt . '[' endl_opt expr_list_endl_opt ']' endl_opt
  122 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt . '[' endl_opt expr_list_endl_opt ']' stmt_sep

    '['  shift, and go to state 329


State 317

   58 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')' . stmt_sep

    ';'   shift, and go to state 64
    ENDL  shift, and go to state 41

    endl      go to state 89
    stmt_sep  go to state 330


State 318

   56 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE . endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 331


State 319

   59 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 332


State 320

   60 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt . case_list_break '}' endl_opt

    DEFAULT  shift, and go to state 333
    CASE     shift, and go to state 334

    case_list        go to state 335
    case_list_break  go to state 336
    case_stmt_break  go to state 337
    case_stmt        go to state 338


State 321

   80 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt . ')' endl_opt block_statement endl_opt
   81             | CATCH endl_opt '(' endl_opt ID endl_opt . ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ':'  shift, and go to state 339
    ')'  shift, and go to state 340


State 322

  139 param: ID endl_opt '?' endl_opt . type_mark

    ':'  shift, and go to state 214

    type_mark  go to state 341


State 323

  141 param_list: param_list endl_opt ',' endl_opt . param

    ID  shift, and go to state 254

    param  go to state 342


State 324

   78 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 78 (function_declaration)


State 325

   77 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 94
    DO              shift, and go to state 1
    IF              shift, and go to state 2
    FOR             shift, and go to state 3
    WHILE           shift, and go to state 4
    SWITCH          shift, and go to state 5
    TRY             shift, and go to state 6
    THROW           shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24
    '{'             shift, and go to state 25

    $default  reduce using rule 84 (stmt_list_opt)

    expr              go to state 29
    block_statement   go to state 30
    if_stmt           go to state 31
    while_stmt        go to state 32
    do_while_stmt     go to state 33
    for_stmt          go to state 34
    switch_stmt       go to state 35
    return_statement  go to state 95
    try_catch_block   go to state 37
    stmt_list_opt     go to state 343
    stmt_list         go to state 118
    stmt_top          go to state 96
    stmt              go to state 119
    modifier          go to state 39
    enum_declaration  go to state 40


State 326

  149 id_list_init: id_list_init endl_opt ',' endl_opt . ID endl_opt var_init

    ID  shift, and go to state 344


State 327

  148 id_list_init: ID . endl_opt var_init
  151 id_list_endl: id_list_endl ',' endl_opt ID . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 345


State 328

  146 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_endl ',' endl_opt id_list_init . endl_opt '}'
  149 id_list_init: id_list_init . endl_opt ',' endl_opt ID endl_opt var_init

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 346


State 329

  117 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' . endl_opt expr_list_endl_opt ']' endl_opt
  122 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' . endl_opt expr_list_endl_opt ']' stmt_sep

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 347


State 330

   58 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')' stmt_sep .

    $default  reduce using rule 58 (do_while_stmt)


State 331

   56 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt . stmt

    RETURN          shift, and go to state 94
    DO              shift, and go to state 1
    IF              shift, and go to state 2
    FOR             shift, and go to state 3
    WHILE           shift, and go to state 4
    SWITCH          shift, and go to state 5
    TRY             shift, and go to state 6
    THROW           shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24
    '{'             shift, and go to state 25

    expr              go to state 29
    block_statement   go to state 30
    if_stmt           go to state 31
    while_stmt        go to state 32
    do_while_stmt     go to state 33
    for_stmt          go to state 34
    switch_stmt       go to state 35
    return_statement  go to state 95
    try_catch_block   go to state 37
    stmt_top          go to state 96
    stmt              go to state 348
    modifier          go to state 39
    enum_declaration  go to state 40


State 332

   59 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 349


State 333

   66 case_stmt_break: DEFAULT . endl_opt ':' endl_opt stmt_list_opt break_opt_special
   72 case_stmt: DEFAULT . endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 350


State 334

   65 case_stmt_break: CASE . endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt_special
   71 case_stmt: CASE . endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 351


State 335

   62 case_list: case_list . case_stmt
   64 case_list_break: case_list . case_stmt_break

    DEFAULT  shift, and go to state 333
    CASE     shift, and go to state 334

    case_stmt_break  go to state 352
    case_stmt        go to state 353


State 336

   60 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list_break . '}' endl_opt

    '}'  shift, and go to state 354


State 337

   63 case_list_break: case_stmt_break .

    $default  reduce using rule 63 (case_list_break)


State 338

   61 case_list: case_stmt .

    $default  reduce using rule 61 (case_list)


State 339

   81 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' . endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 355


State 340

   80 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' . endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 356


State 341

  139 param: ID endl_opt '?' endl_opt type_mark .

    $default  reduce using rule 139 (param)


State 342

  141 param_list: param_list endl_opt ',' endl_opt param .

    $default  reduce using rule 141 (param_list)


State 343

   77 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 357


State 344

  149 id_list_init: id_list_init endl_opt ',' endl_opt ID . endl_opt var_init

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 358


State 345

  148 id_list_init: ID endl_opt . var_init
  151 id_list_endl: id_list_endl ',' endl_opt ID endl_opt .

    '='  shift, and go to state 213

    $default  reduce using rule 151 (id_list_endl)

    var_init  go to state 312


State 346

  146 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_endl ',' endl_opt id_list_init endl_opt . '}'
  149 id_list_init: id_list_init endl_opt . ',' endl_opt ID endl_opt var_init

    ','  shift, and go to state 313
    '}'  shift, and go to state 359


State 347

  117 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt . expr_list_endl_opt ']' endl_opt
  122 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt . expr_list_endl_opt ']' stmt_sep

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    $default  reduce using rule 14 (expr_list_endl_opt)

    expr_list           go to state 107
    expr_list_endl_opt  go to state 360
    expr_list_endl      go to state 109
    expr                go to state 110


State 348

   56 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt .

    $default  reduce using rule 56 (if_stmt)


State 349

   59 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 361


State 350

   66 case_stmt_break: DEFAULT endl_opt . ':' endl_opt stmt_list_opt break_opt_special
   72 case_stmt: DEFAULT endl_opt . ':' endl_opt stmt_list_opt break_opt

    ':'  shift, and go to state 362


State 351

   65 case_stmt_break: CASE endl_opt . expr endl_opt ':' endl_opt stmt_list_opt break_opt_special
   71 case_stmt: CASE endl_opt . expr endl_opt ':' endl_opt stmt_list_opt break_opt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 363


State 352

   64 case_list_break: case_list case_stmt_break .

    $default  reduce using rule 64 (case_list_break)


State 353

   62 case_list: case_list case_stmt .

    $default  reduce using rule 62 (case_list)


State 354

   60 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list_break '}' . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 364


State 355

   81 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt . error_type endl_opt ')' endl_opt block_statement endl_opt

    UNKNOWN  shift, and go to state 365
    ANY      shift, and go to state 366

    error_type  go to state 367


State 356

   80 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt . block_statement endl_opt

    '{'  shift, and go to state 25

    block_statement  go to state 368


State 357

   77 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 77 (function_declaration)


State 358

  149 id_list_init: id_list_init endl_opt ',' endl_opt ID endl_opt . var_init

    '='  shift, and go to state 213

    var_init  go to state 369


State 359

  146 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_endl ',' endl_opt id_list_init endl_opt '}' .

    $default  reduce using rule 146 (enum_declaration)


State 360

  117 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt . ']' endl_opt
  122 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt . ']' stmt_sep

    ']'  shift, and go to state 370


State 361

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'
   59 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 371


State 362

   66 case_stmt_break: DEFAULT endl_opt ':' . endl_opt stmt_list_opt break_opt_special
   72 case_stmt: DEFAULT endl_opt ':' . endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 372


State 363

   17 expr: expr . POST_DECREMENT
   19     | expr . POST_INCREMENT
   21     | expr . AS endl_opt type
   30     | expr . '+' endl_opt expr
   31     | expr . '-' endl_opt expr
   32     | expr . '*' endl_opt expr
   33     | expr . '/' endl_opt expr
   34     | expr . '%' endl_opt expr
   35     | expr . '<' endl_opt expr
   36     | expr . '>' endl_opt expr
   37     | expr . LESS_OR_EQUAL endl_opt expr
   38     | expr . GREATER_OR_EQUAL endl_opt expr
   39     | expr . EQUALS endl_opt expr
   40     | expr . NOT_EQUALS endl_opt expr
   41     | expr . '=' endl_opt expr
   42     | expr . PLUS_ASSIGN endl_opt expr
   43     | expr . MINUS_ASSIGN endl_opt expr
   44     | expr . MUL_ASSIGN endl_opt expr
   45     | expr . DIV_ASSIGN endl_opt expr
   46     | expr . MOD_ASSIGN endl_opt expr
   48     | expr . AND endl_opt expr
   49     | expr . OR endl_opt expr
   50     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   51     | expr . '[' endl_opt expr endl_opt ']'
   65 case_stmt_break: CASE endl_opt expr . endl_opt ':' endl_opt stmt_list_opt break_opt_special
   71 case_stmt: CASE endl_opt expr . endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 65
    PLUS_ASSIGN       shift, and go to state 66
    MINUS_ASSIGN      shift, and go to state 67
    MUL_ASSIGN        shift, and go to state 68
    DIV_ASSIGN        shift, and go to state 69
    MOD_ASSIGN        shift, and go to state 70
    '['               shift, and go to state 71
    '?'               shift, and go to state 72
    OR                shift, and go to state 73
    AND               shift, and go to state 74
    EQUALS            shift, and go to state 75
    NOT_EQUALS        shift, and go to state 76
    '<'               shift, and go to state 77
    '>'               shift, and go to state 78
    LESS_OR_EQUAL     shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    AS                shift, and go to state 81
    '+'               shift, and go to state 82
    '-'               shift, and go to state 83
    '*'               shift, and go to state 84
    '/'               shift, and go to state 85
    '%'               shift, and go to state 86
    POST_INCREMENT    shift, and go to state 87
    POST_DECREMENT    shift, and go to state 88

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 373


State 364

   60 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list_break '}' endl_opt .

    $default  reduce using rule 60 (switch_stmt)


State 365

   82 error_type: UNKNOWN .

    $default  reduce using rule 82 (error_type)


State 366

   83 error_type: ANY .

    $default  reduce using rule 83 (error_type)


State 367

   81 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type . endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 374


State 368

   80 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 375


State 369

  149 id_list_init: id_list_init endl_opt ',' endl_opt ID endl_opt var_init .

    $default  reduce using rule 149 (id_list_init)


State 370

  117 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' . endl_opt
  122 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' . stmt_sep

    ';'   shift, and go to state 64
    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 192
    endl_opt  go to state 376
    stmt_sep  go to state 377


State 371

   59 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ')' endl_opt stmt

    ')'  shift, and go to state 378


State 372

   66 case_stmt_break: DEFAULT endl_opt ':' endl_opt . stmt_list_opt break_opt_special
   72 case_stmt: DEFAULT endl_opt ':' endl_opt . stmt_list_opt break_opt

    RETURN          shift, and go to state 94
    DO              shift, and go to state 1
    IF              shift, and go to state 2
    FOR             shift, and go to state 3
    WHILE           shift, and go to state 4
    SWITCH          shift, and go to state 5
    TRY             shift, and go to state 6
    THROW           shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24
    '{'             shift, and go to state 25

    $default  reduce using rule 84 (stmt_list_opt)

    expr              go to state 29
    block_statement   go to state 30
    if_stmt           go to state 31
    while_stmt        go to state 32
    do_while_stmt     go to state 33
    for_stmt          go to state 34
    switch_stmt       go to state 35
    return_statement  go to state 95
    try_catch_block   go to state 37
    stmt_list_opt     go to state 379
    stmt_list         go to state 118
    stmt_top          go to state 96
    stmt              go to state 119
    modifier          go to state 39
    enum_declaration  go to state 40


State 373

   65 case_stmt_break: CASE endl_opt expr endl_opt . ':' endl_opt stmt_list_opt break_opt_special
   71 case_stmt: CASE endl_opt expr endl_opt . ':' endl_opt stmt_list_opt break_opt

    ':'  shift, and go to state 380


State 374

   81 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt . ')' endl_opt block_statement endl_opt

    ')'  shift, and go to state 381


State 375

   80 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt .

    $default  reduce using rule 80 (catch_clause)


State 376

  117 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' endl_opt .

    $default  reduce using rule 117 (variable_endl)


State 377

  122 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_endl_opt ']' stmt_sep .

    $default  reduce using rule 122 (variable_stmt)


State 378

   59 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' . endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 382


State 379

   66 case_stmt_break: DEFAULT endl_opt ':' endl_opt stmt_list_opt . break_opt_special
   72 case_stmt: DEFAULT endl_opt ':' endl_opt stmt_list_opt . break_opt

    BREAK  shift, and go to state 383

    '}'       reduce using rule 67 (break_opt_special)
    $default  reduce using rule 73 (break_opt)

    break_opt_special  go to state 384
    break_opt          go to state 385


State 380

   65 case_stmt_break: CASE endl_opt expr endl_opt ':' . endl_opt stmt_list_opt break_opt_special
   71 case_stmt: CASE endl_opt expr endl_opt ':' . endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 386


State 381

   81 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' . endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 387


State 382

   59 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt . stmt

    RETURN          shift, and go to state 94
    DO              shift, and go to state 1
    IF              shift, and go to state 2
    FOR             shift, and go to state 3
    WHILE           shift, and go to state 4
    SWITCH          shift, and go to state 5
    TRY             shift, and go to state 6
    THROW           shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24
    '{'             shift, and go to state 25

    expr              go to state 29
    block_statement   go to state 30
    if_stmt           go to state 31
    while_stmt        go to state 32
    do_while_stmt     go to state 33
    for_stmt          go to state 34
    switch_stmt       go to state 35
    return_statement  go to state 95
    try_catch_block   go to state 37
    stmt_top          go to state 96
    stmt              go to state 388
    modifier          go to state 39
    enum_declaration  go to state 40


State 383

   68 break_opt_special: BREAK . endl
   69                  | BREAK . ';' endl_opt
   70                  | BREAK .
   74 break_opt: BREAK . endl
   75          | BREAK . ';' endl_opt

    ';'   shift, and go to state 389
    ENDL  shift, and go to state 41

    $default  reduce using rule 70 (break_opt_special)

    endl  go to state 390


State 384

   66 case_stmt_break: DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt_special .

    $default  reduce using rule 66 (case_stmt_break)


State 385

   72 case_stmt: DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt .

    $default  reduce using rule 72 (case_stmt)


State 386

   65 case_stmt_break: CASE endl_opt expr endl_opt ':' endl_opt . stmt_list_opt break_opt_special
   71 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt . stmt_list_opt break_opt

    RETURN          shift, and go to state 94
    DO              shift, and go to state 1
    IF              shift, and go to state 2
    FOR             shift, and go to state 3
    WHILE           shift, and go to state 4
    SWITCH          shift, and go to state 5
    TRY             shift, and go to state 6
    THROW           shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '['             shift, and go to state 18
    '+'             shift, and go to state 19
    '-'             shift, and go to state 20
    PREF_INCREMENT  shift, and go to state 21
    PREF_DECREMENT  shift, and go to state 22
    NOT             shift, and go to state 23
    '('             shift, and go to state 24
    '{'             shift, and go to state 25

    $default  reduce using rule 84 (stmt_list_opt)

    expr              go to state 29
    block_statement   go to state 30
    if_stmt           go to state 31
    while_stmt        go to state 32
    do_while_stmt     go to state 33
    for_stmt          go to state 34
    switch_stmt       go to state 35
    return_statement  go to state 95
    try_catch_block   go to state 37
    stmt_list_opt     go to state 391
    stmt_list         go to state 118
    stmt_top          go to state 96
    stmt              go to state 119
    modifier          go to state 39
    enum_declaration  go to state 40


State 387

   81 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt . block_statement endl_opt

    '{'  shift, and go to state 25

    block_statement  go to state 392


State 388

   59 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 59 (for_stmt)


State 389

   69 break_opt_special: BREAK ';' . endl_opt
   75 break_opt: BREAK ';' . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 393


State 390

    7 endl: endl . ENDL
   68 break_opt_special: BREAK endl .
   74 break_opt: BREAK endl .

    ENDL  shift, and go to state 93

    '}'       reduce using rule 68 (break_opt_special)
    $default  reduce using rule 74 (break_opt)


State 391

   65 case_stmt_break: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt . break_opt_special
   71 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt . break_opt

    BREAK  shift, and go to state 383

    '}'       reduce using rule 67 (break_opt_special)
    $default  reduce using rule 73 (break_opt)

    break_opt_special  go to state 394
    break_opt          go to state 395


State 392

   81 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 8 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 396


State 393

   69 break_opt_special: BREAK ';' endl_opt .
   75 break_opt: BREAK ';' endl_opt .

    '}'       reduce using rule 69 (break_opt_special)
    $default  reduce using rule 75 (break_opt)


State 394

   65 case_stmt_break: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt_special .

    $default  reduce using rule 65 (case_stmt_break)


State 395

   71 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt .

    $default  reduce using rule 71 (case_stmt)


State 396

   81 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt .

    $default  reduce using rule 81 (catch_clause)
