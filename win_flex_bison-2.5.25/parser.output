Terminals unused in grammar

    INTERFACE
    CONSTRUCTOR
    NEW
    THIS
    DELETE
    EXPORT
    OF
    IN
    CONTINUE
    INCREMENT
    DECREMENT
    DECLARE
    IS


State 182 conflicts: 1 reduce/reduce
State 228 conflicts: 1 shift/reduce
State 271 conflicts: 1 shift/reduce
State 299 conflicts: 1 shift/reduce
State 300 conflicts: 1 shift/reduce
State 334 conflicts: 1 shift/reduce
State 339 conflicts: 1 shift/reduce
State 340 conflicts: 1 shift/reduce
State 359 conflicts: 1 shift/reduce
State 368 conflicts: 1 shift/reduce
State 389 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_elem
    2        | program program_elem

    3 program_elem: class_declaration
    4             | function_declaration

    5 endl: ENDL
    6     | endl ENDL

    7 endl_opt: %empty
    8         | endl

    9 stmt_sep: ';' endl_opt
   10         | endl

   11 expr_list: expr
   12          | expr_list endl_opt ',' endl_opt expr

   13 expr_list_opt: %empty
   14              | expr_list endl_opt

   15 expr: expr POST_DECREMENT
   16     | PREF_DECREMENT endl_opt expr
   17     | expr POST_INCREMENT
   18     | PREF_INCREMENT endl_opt expr
   19     | expr AS endl_opt type
   20     | '-' endl_opt expr
   21     | '+' endl_opt expr
   22     | NUMBER_LITERAL
   23     | STRING_LITERAL
   24     | TRUE_LITERAL
   25     | FALSE_LITERAL
   26     | ID
   27     | '(' endl_opt expr_list_opt ')'
   28     | expr '+' endl_opt expr
   29     | expr '-' endl_opt expr
   30     | expr '*' endl_opt expr
   31     | expr '/' endl_opt expr
   32     | expr '%' endl_opt expr
   33     | expr '<' endl_opt expr
   34     | expr '>' endl_opt expr
   35     | expr LESS_OR_EQUAL endl_opt expr
   36     | expr GREATER_OR_EQUAL endl_opt expr
   37     | expr EQUALS endl_opt expr
   38     | expr NOT_EQUALS endl_opt expr
   39     | expr '=' endl_opt expr
   40     | expr PLUS_ASSIGN endl_opt expr
   41     | expr MINUS_ASSIGN endl_opt expr
   42     | expr MUL_ASSIGN endl_opt expr
   43     | expr DIV_ASSIGN endl_opt expr
   44     | expr MOD_ASSIGN endl_opt expr
   45     | NOT endl_opt expr
   46     | expr AND endl_opt expr
   47     | expr OR endl_opt expr
   48     | expr '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr '[' endl_opt expr endl_opt ']'
   50     | expr '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr '.' endl_opt ID

   52 block_statement: '{' endl_opt stmt_list_opt '}'

   53 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
   54        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

   55 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt

   56 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')'

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

   59 case_list: case_stmt
   60          | case_list case_stmt

   61 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt
   62          | DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt

   63 break_opt: %empty
   64          | BREAK stmt_sep

   65 return_statement: RETURN expr stmt_sep

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   67                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

   68 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause

   69 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   70             | CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

   71 error_type: UNKNOWN
   72           | ANY

   73 stmt_list_opt: %empty
   74              | stmt_list

   75 stmt_list: stmt
   76          | stmt_list stmt

   77 stmt: expr stmt_sep
   78     | if_stmt
   79     | while_stmt
   80     | for_stmt
   81     | do_while_stmt stmt_sep
   82     | switch_stmt
   83     | try_catch_block
   84     | block_statement endl_opt
   85     | modifier endl_opt var_stmt
   86     | modifier endl_opt var_list stmt_sep
   87     | enum_declaration
   88     | return_statement
   89     | ';' endl_opt

   90 modifier: LET
   91         | CONST

   92 type: NUMBER
   93     | STRING
   94     | BOOLEAN
   95     | ANY
   96     | UNKNOWN
   97     | VOID
   98     | ID

   99 type_mark: ':' endl_opt type

  100 type_mark_opt: %empty
  101              | type_mark

  102 variable: ID endl_opt type_mark endl_opt var_init
  103         | ID
  104         | ID endl_opt type_mark
  105         | ID endl_opt var_init

  106 var_init: '=' endl_opt expr

  107 var_list: variable endl_opt ',' endl_opt variable
  108         | var_list endl_opt ',' endl_opt variable

  109 var_stmt: ID endl_opt type_mark endl_opt var_init stmt_sep
  110         | ID stmt_sep
  111         | ID endl_opt type_mark stmt_sep
  112         | ID endl_opt var_init stmt_sep
  113         | ID endl_opt type_mark dimensions_list stmt_sep
  114         | ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

  115 dimensions: '[' endl_opt ']'

  116 dimensions_list: dimensions
  117                | dimensions_list dimensions

  118 param: ID endl_opt type_mark
  119      | ID endl_opt '?' endl_opt type_mark

  120 param_list: param
  121           | param_list endl_opt ',' endl_opt param

  122 param_list_0_or_more: '(' endl_opt param_list endl_opt ')'
  123                     | '(' ')'

  124 implements_decl: IMPLEMENTS endl_opt ID
  125                | implements_decl endl_opt ',' endl_opt ID

  126 readonly_opt: %empty
  127             | READONLY endl_opt

  128 static_opt: %empty
  129           | STATIC endl_opt

  130 visibility: PRIVATE
  131           | PROTECTED
  132           | PUBLIC

  133 visibility_opt: %empty
  134               | visibility endl_opt

  135 class_member: visibility_opt static_opt readonly_opt var_stmt
  136             | visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' endl_opt
  137             | visibility_opt static_opt class_declaration endl_opt

  138 class_member_list: class_member
  139                  | class_member_list class_member

  140 class_body: %empty
  141           | class_member_list

  142 class_declaration: CLASS endl_opt ID endl_opt '{' endl_opt class_body '}'
  143                  | CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  144                  | CLASS endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt class_body '}'
  145                  | CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

  146 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}'

  147 id_list: ID endl_opt var_init
  148        | ID
  149        | id_list endl_opt ',' endl_opt ID
  150        | id_list endl_opt ',' endl_opt ID endl_opt var_init


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 32
    '(' (40) 27 50 53 54 55 56 57 58 69 70 122 123
    ')' (41) 27 50 53 54 55 56 57 58 69 70 122 123
    '*' (42) 30
    '+' (43) 21 28
    ',' (44) 12 107 108 121 125 149 150
    '-' (45) 20 29
    '.' (46) 50 51
    '/' (47) 31
    ':' (58) 48 61 62 70 99
    ';' (59) 9 57 89
    '<' (60) 33
    '=' (61) 39 106 114
    '>' (62) 34
    '?' (63) 48 119
    '[' (91) 49 114 115
    ']' (93) 49 114 115
    '{' (123) 52 58 66 67 136 142 143 144 145 146
    '}' (125) 52 58 66 67 136 142 143 144 145 146
    error (256)
    INTERFACE (258)
    IMPLEMENTS (259) 124
    CONSTRUCTOR (260)
    NEW (261)
    EXTENDS (262) 143 145
    THIS (263)
    CLASS (264) 142 143 144 145
    STATIC (265) 129
    RETURN (266) 65
    DELETE (267)
    EXPORT (268)
    PUBLIC (269) 132
    PROTECTED (270) 131
    PRIVATE (271) 130
    READONLY (272) 127
    DO (273) 56
    IF (274) 53 54
    ELSE (275) 54
    FOR (276) 57
    OF (277)
    IN (278)
    WHILE (279) 55 56
    BREAK (280) 64
    CONTINUE (281)
    DEFAULT (282) 62
    SWITCH (283) 58
    CASE (284) 61
    TRY (285) 68
    CATCH (286) 69 70
    INCREMENT (287)
    DECREMENT (288)
    LET (289) 90
    CONST (290) 91
    FUNC (291) 66 67
    DECLARE (292)
    UNKNOWN (293) 71 96
    ANY (294) 72 95
    NUMBER (295) 92
    STRING (296) 93
    VOID (297) 97
    BOOLEAN (298) 94
    ENUM (299) 146
    NUMBER_LITERAL (300) 22
    STRING_LITERAL (301) 23
    TRUE_LITERAL (302) 24
    FALSE_LITERAL (303) 25
    ID (304) 26 50 51 66 67 69 70 98 102 103 104 105 109 110 111 112 113 114 118 119 124 125 136 142 143 144 145 146 147 148 149 150
    ENDL (305) 5 6
    PLUS_ASSIGN (306) 40
    MINUS_ASSIGN (307) 41
    MUL_ASSIGN (308) 42
    DIV_ASSIGN (309) 43
    MOD_ASSIGN (310) 44
    OR (311) 47
    AND (312) 46
    EQUALS (313) 37
    NOT_EQUALS (314) 38
    LESS_OR_EQUAL (315) 35
    GREATER_OR_EQUAL (316) 36
    IS (317)
    AS (318) 19
    PREF_INCREMENT (319) 18
    PREF_DECREMENT (320) 16
    POST_INCREMENT (321) 17
    POST_DECREMENT (322) 15
    NOT (323) 45
    UPLUS (324)
    UMINUS (325)


Nonterminals, with rules where they appear

    $accept (90)
        on left: 0
    program (91)
        on left: 1 2
        on right: 0 2
    program_elem (92)
        on left: 3 4
        on right: 1 2
    endl (93)
        on left: 5 6
        on right: 6 8 10
    endl_opt (94)
        on left: 7 8
        on right: 9 12 14 16 18 19 20 21 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 61 62 66 67 68 69 70 84 85 86 89 99 102 104 105 106 107 108 109 111 112 113 114 115 118 119 121 122 124 125 127 129 134 136 137 142 143 144 145 146 147 149 150
    stmt_sep (95)
        on left: 9 10
        on right: 64 65 77 81 86 109 110 111 112 113 114
    expr_list (96)
        on left: 11 12
        on right: 12 14
    expr_list_opt (97)
        on left: 13 14
        on right: 27 50 114
    expr (98)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
        on right: 11 12 15 16 17 18 19 20 21 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 53 54 55 56 57 58 61 65 77 106
    block_statement (99)
        on left: 52
        on right: 68 69 70 84
    if_stmt (100)
        on left: 53 54
        on right: 78
    while_stmt (101)
        on left: 55
        on right: 79
    do_while_stmt (102)
        on left: 56
        on right: 81
    for_stmt (103)
        on left: 57
        on right: 80
    switch_stmt (104)
        on left: 58
        on right: 82
    case_list (105)
        on left: 59 60
        on right: 58 60
    case_stmt (106)
        on left: 61 62
        on right: 59 60
    break_opt (107)
        on left: 63 64
        on right: 61 62
    return_statement (108)
        on left: 65
        on right: 88
    function_declaration (109)
        on left: 66 67
        on right: 4
    try_catch_block (110)
        on left: 68
        on right: 83
    catch_clause (111)
        on left: 69 70
        on right: 68
    error_type (112)
        on left: 71 72
        on right: 70
    stmt_list_opt (113)
        on left: 73 74
        on right: 52 61 62 66 67 136
    stmt_list (114)
        on left: 75 76
        on right: 74 76
    stmt (115)
        on left: 77 78 79 80 81 82 83 84 85 86 87 88 89
        on right: 53 54 55 56 57 75 76
    modifier (116)
        on left: 90 91
        on right: 85 86
    type (117)
        on left: 92 93 94 95 96 97 98
        on right: 19 99
    type_mark (118)
        on left: 99
        on right: 66 101 102 104 109 111 113 114 118 119
    type_mark_opt (119)
        on left: 100 101
        on right: 136
    variable (120)
        on left: 102 103 104 105
        on right: 107 108
    var_init (121)
        on left: 106
        on right: 102 105 109 112 147 150
    var_list (122)
        on left: 107 108
        on right: 86 108
    var_stmt (123)
        on left: 109 110 111 112 113 114
        on right: 85 135
    dimensions (124)
        on left: 115
        on right: 116 117
    dimensions_list (125)
        on left: 116 117
        on right: 113 114 117
    param (126)
        on left: 118 119
        on right: 120 121
    param_list (127)
        on left: 120 121
        on right: 121 122
    param_list_0_or_more (128)
        on left: 122 123
        on right: 66 67 136
    implements_decl (129)
        on left: 124 125
        on right: 125 144 145
    readonly_opt (130)
        on left: 126 127
        on right: 135 136
    static_opt (131)
        on left: 128 129
        on right: 135 136 137
    visibility (132)
        on left: 130 131 132
        on right: 134
    visibility_opt (133)
        on left: 133 134
        on right: 135 136 137
    class_member (134)
        on left: 135 136 137
        on right: 138 139
    class_member_list (135)
        on left: 138 139
        on right: 139 141
    class_body (136)
        on left: 140 141
        on right: 142 143 144 145
    class_declaration (137)
        on left: 142 143 144 145
        on right: 3 137
    enum_declaration (138)
        on left: 146
        on right: 87
    id_list (139)
        on left: 147 148 149 150
        on right: 146 149 150


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1
    FUNC   shift, and go to state 2

    program               go to state 3
    program_elem          go to state 4
    function_declaration  go to state 5
    class_declaration     go to state 6


State 1

  142 class_declaration: CLASS . endl_opt ID endl_opt '{' endl_opt class_body '}'
  143                  | CLASS . endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  144                  | CLASS . endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt class_body '}'
  145                  | CLASS . endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 9


State 2

   66 function_declaration: FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   67                     | FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 10


State 3

    0 $accept: program . $end
    2 program: program . program_elem

    $end   shift, and go to state 11
    CLASS  shift, and go to state 1
    FUNC   shift, and go to state 2

    program_elem          go to state 12
    function_declaration  go to state 5
    class_declaration     go to state 6


State 4

    1 program: program_elem .

    $default  reduce using rule 1 (program)


State 5

    4 program_elem: function_declaration .

    $default  reduce using rule 4 (program_elem)


State 6

    3 program_elem: class_declaration .

    $default  reduce using rule 3 (program_elem)


State 7

    5 endl: ENDL .

    $default  reduce using rule 5 (endl)


State 8

    6 endl: endl . ENDL
    8 endl_opt: endl .

    ENDL  shift, and go to state 13

    $default  reduce using rule 8 (endl_opt)


State 9

  142 class_declaration: CLASS endl_opt . ID endl_opt '{' endl_opt class_body '}'
  143                  | CLASS endl_opt . ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  144                  | CLASS endl_opt . ID endl_opt implements_decl endl_opt '{' endl_opt class_body '}'
  145                  | CLASS endl_opt . ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    ID  shift, and go to state 14


State 10

   66 function_declaration: FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   67                     | FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ID  shift, and go to state 15


State 11

    0 $accept: program $end .

    $default  accept


State 12

    2 program: program program_elem .

    $default  reduce using rule 2 (program)


State 13

    6 endl: endl ENDL .

    $default  reduce using rule 6 (endl)


State 14

  142 class_declaration: CLASS endl_opt ID . endl_opt '{' endl_opt class_body '}'
  143                  | CLASS endl_opt ID . endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  144                  | CLASS endl_opt ID . endl_opt implements_decl endl_opt '{' endl_opt class_body '}'
  145                  | CLASS endl_opt ID . endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 16


State 15

   66 function_declaration: FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   67                     | FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 17


State 16

  142 class_declaration: CLASS endl_opt ID endl_opt . '{' endl_opt class_body '}'
  143                  | CLASS endl_opt ID endl_opt . EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  144                  | CLASS endl_opt ID endl_opt . implements_decl endl_opt '{' endl_opt class_body '}'
  145                  | CLASS endl_opt ID endl_opt . EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    IMPLEMENTS  shift, and go to state 18
    EXTENDS     shift, and go to state 19
    '{'         shift, and go to state 20

    implements_decl  go to state 21


State 17

   66 function_declaration: FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   67                     | FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    '('  shift, and go to state 22

    param_list_0_or_more  go to state 23


State 18

  124 implements_decl: IMPLEMENTS . endl_opt ID

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 24


State 19

  143 class_declaration: CLASS endl_opt ID endl_opt EXTENDS . endl_opt ID endl_opt '{' endl_opt class_body '}'
  145                  | CLASS endl_opt ID endl_opt EXTENDS . endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 25


State 20

  142 class_declaration: CLASS endl_opt ID endl_opt '{' . endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 26


State 21

  125 implements_decl: implements_decl . endl_opt ',' endl_opt ID
  144 class_declaration: CLASS endl_opt ID endl_opt implements_decl . endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 27


State 22

  122 param_list_0_or_more: '(' . endl_opt param_list endl_opt ')'
  123                     | '(' . ')'

    ENDL  shift, and go to state 7
    ')'   shift, and go to state 28

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 29


State 23

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   67                     | FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 30


State 24

  124 implements_decl: IMPLEMENTS endl_opt . ID

    ID  shift, and go to state 31


State 25

  143 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt . ID endl_opt '{' endl_opt class_body '}'
  145                  | CLASS endl_opt ID endl_opt EXTENDS endl_opt . ID implements_decl endl_opt '{' endl_opt class_body '}'

    ID  shift, and go to state 32


State 26

  142 class_declaration: CLASS endl_opt ID endl_opt '{' endl_opt . class_body '}'

    PUBLIC     shift, and go to state 33
    PROTECTED  shift, and go to state 34
    PRIVATE    shift, and go to state 35

    '}'       reduce using rule 140 (class_body)
    $default  reduce using rule 133 (visibility_opt)

    visibility         go to state 36
    visibility_opt     go to state 37
    class_member       go to state 38
    class_member_list  go to state 39
    class_body         go to state 40


State 27

  125 implements_decl: implements_decl endl_opt . ',' endl_opt ID
  144 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt . '{' endl_opt class_body '}'

    ','  shift, and go to state 41
    '{'  shift, and go to state 42


State 28

  123 param_list_0_or_more: '(' ')' .

    $default  reduce using rule 123 (param_list_0_or_more)


State 29

  122 param_list_0_or_more: '(' endl_opt . param_list endl_opt ')'

    ID  shift, and go to state 43

    param       go to state 44
    param_list  go to state 45


State 30

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   67                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . '{' endl_opt stmt_list_opt '}'

    ':'  shift, and go to state 46
    '{'  shift, and go to state 47

    type_mark  go to state 48


State 31

  124 implements_decl: IMPLEMENTS endl_opt ID .

    $default  reduce using rule 124 (implements_decl)


State 32

  143 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID . endl_opt '{' endl_opt class_body '}'
  145                  | CLASS endl_opt ID endl_opt EXTENDS endl_opt ID . implements_decl endl_opt '{' endl_opt class_body '}'

    IMPLEMENTS  shift, and go to state 18
    ENDL        shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl             go to state 8
    endl_opt         go to state 49
    implements_decl  go to state 50


State 33

  132 visibility: PUBLIC .

    $default  reduce using rule 132 (visibility)


State 34

  131 visibility: PROTECTED .

    $default  reduce using rule 131 (visibility)


State 35

  130 visibility: PRIVATE .

    $default  reduce using rule 130 (visibility)


State 36

  134 visibility_opt: visibility . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 51


State 37

  135 class_member: visibility_opt . static_opt readonly_opt var_stmt
  136             | visibility_opt . static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' endl_opt
  137             | visibility_opt . static_opt class_declaration endl_opt

    STATIC  shift, and go to state 52

    $default  reduce using rule 128 (static_opt)

    static_opt  go to state 53


State 38

  138 class_member_list: class_member .

    $default  reduce using rule 138 (class_member_list)


State 39

  139 class_member_list: class_member_list . class_member
  141 class_body: class_member_list .

    PUBLIC     shift, and go to state 33
    PROTECTED  shift, and go to state 34
    PRIVATE    shift, and go to state 35

    '}'       reduce using rule 141 (class_body)
    $default  reduce using rule 133 (visibility_opt)

    visibility      go to state 36
    visibility_opt  go to state 37
    class_member    go to state 54


State 40

  142 class_declaration: CLASS endl_opt ID endl_opt '{' endl_opt class_body . '}'

    '}'  shift, and go to state 55


State 41

  125 implements_decl: implements_decl endl_opt ',' . endl_opt ID

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 56


State 42

  144 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt '{' . endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 57


State 43

  118 param: ID . endl_opt type_mark
  119      | ID . endl_opt '?' endl_opt type_mark

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 58


State 44

  120 param_list: param .

    $default  reduce using rule 120 (param_list)


State 45

  121 param_list: param_list . endl_opt ',' endl_opt param
  122 param_list_0_or_more: '(' endl_opt param_list . endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 59


State 46

   99 type_mark: ':' . endl_opt type

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 60


State 47

   67 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 61


State 48

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 62


State 49

  143 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt . '{' endl_opt class_body '}'

    '{'  shift, and go to state 63


State 50

  125 implements_decl: implements_decl . endl_opt ',' endl_opt ID
  145 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl . endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 64


State 51

  134 visibility_opt: visibility endl_opt .

    $default  reduce using rule 134 (visibility_opt)


State 52

  129 static_opt: STATIC . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 65


State 53

  135 class_member: visibility_opt static_opt . readonly_opt var_stmt
  136             | visibility_opt static_opt . readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' endl_opt
  137             | visibility_opt static_opt . class_declaration endl_opt

    CLASS     shift, and go to state 1
    READONLY  shift, and go to state 66

    $default  reduce using rule 126 (readonly_opt)

    readonly_opt       go to state 67
    class_declaration  go to state 68


State 54

  139 class_member_list: class_member_list class_member .

    $default  reduce using rule 139 (class_member_list)


State 55

  142 class_declaration: CLASS endl_opt ID endl_opt '{' endl_opt class_body '}' .

    $default  reduce using rule 142 (class_declaration)


State 56

  125 implements_decl: implements_decl endl_opt ',' endl_opt . ID

    ID  shift, and go to state 69


State 57

  144 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt . class_body '}'

    PUBLIC     shift, and go to state 33
    PROTECTED  shift, and go to state 34
    PRIVATE    shift, and go to state 35

    '}'       reduce using rule 140 (class_body)
    $default  reduce using rule 133 (visibility_opt)

    visibility         go to state 36
    visibility_opt     go to state 37
    class_member       go to state 38
    class_member_list  go to state 39
    class_body         go to state 70


State 58

  118 param: ID endl_opt . type_mark
  119      | ID endl_opt . '?' endl_opt type_mark

    '?'  shift, and go to state 71
    ':'  shift, and go to state 46

    type_mark  go to state 72


State 59

  121 param_list: param_list endl_opt . ',' endl_opt param
  122 param_list_0_or_more: '(' endl_opt param_list endl_opt . ')'

    ')'  shift, and go to state 73
    ','  shift, and go to state 74


State 60

   99 type_mark: ':' endl_opt . type

    UNKNOWN  shift, and go to state 75
    ANY      shift, and go to state 76
    NUMBER   shift, and go to state 77
    STRING   shift, and go to state 78
    VOID     shift, and go to state 79
    BOOLEAN  shift, and go to state 80
    ID       shift, and go to state 81

    type  go to state 82


State 61

   67 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    $default  reduce using rule 73 (stmt_list_opt)

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt_list_opt     go to state 115
    stmt_list         go to state 116
    stmt              go to state 117
    modifier          go to state 118
    enum_declaration  go to state 119


State 62

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt . '{' endl_opt stmt_list_opt '}'

    '{'  shift, and go to state 120


State 63

  143 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' . endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 121


State 64

  125 implements_decl: implements_decl endl_opt . ',' endl_opt ID
  145 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt . '{' endl_opt class_body '}'

    ','  shift, and go to state 41
    '{'  shift, and go to state 122


State 65

  129 static_opt: STATIC endl_opt .

    $default  reduce using rule 129 (static_opt)


State 66

  127 readonly_opt: READONLY . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 123


State 67

  135 class_member: visibility_opt static_opt readonly_opt . var_stmt
  136             | visibility_opt static_opt readonly_opt . ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' endl_opt

    ID  shift, and go to state 124

    var_stmt  go to state 125


State 68

  137 class_member: visibility_opt static_opt class_declaration . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 126


State 69

  125 implements_decl: implements_decl endl_opt ',' endl_opt ID .

    $default  reduce using rule 125 (implements_decl)


State 70

  144 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt class_body . '}'

    '}'  shift, and go to state 127


State 71

  119 param: ID endl_opt '?' . endl_opt type_mark

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 128


State 72

  118 param: ID endl_opt type_mark .

    $default  reduce using rule 118 (param)


State 73

  122 param_list_0_or_more: '(' endl_opt param_list endl_opt ')' .

    $default  reduce using rule 122 (param_list_0_or_more)


State 74

  121 param_list: param_list endl_opt ',' . endl_opt param

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 129


State 75

   96 type: UNKNOWN .

    $default  reduce using rule 96 (type)


State 76

   95 type: ANY .

    $default  reduce using rule 95 (type)


State 77

   92 type: NUMBER .

    $default  reduce using rule 92 (type)


State 78

   93 type: STRING .

    $default  reduce using rule 93 (type)


State 79

   97 type: VOID .

    $default  reduce using rule 97 (type)


State 80

   94 type: BOOLEAN .

    $default  reduce using rule 94 (type)


State 81

   98 type: ID .

    $default  reduce using rule 98 (type)


State 82

   99 type_mark: ':' endl_opt type .

    $default  reduce using rule 99 (type_mark)


State 83

   65 return_statement: RETURN . expr stmt_sep

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 130


State 84

   56 do_while_stmt: DO . endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 131


State 85

   53 if_stmt: IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
   54        | IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 132


State 86

   57 for_stmt: FOR . endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 133


State 87

   55 while_stmt: WHILE . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 134


State 88

   58 switch_stmt: SWITCH . endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 135


State 89

   68 try_catch_block: TRY . endl_opt block_statement endl_opt catch_clause

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 136


State 90

   90 modifier: LET .

    $default  reduce using rule 90 (modifier)


State 91

   91 modifier: CONST .

    $default  reduce using rule 91 (modifier)


State 92

  146 enum_declaration: ENUM . endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 137


State 93

   22 expr: NUMBER_LITERAL .

    $default  reduce using rule 22 (expr)


State 94

   23 expr: STRING_LITERAL .

    $default  reduce using rule 23 (expr)


State 95

   24 expr: TRUE_LITERAL .

    $default  reduce using rule 24 (expr)


State 96

   25 expr: FALSE_LITERAL .

    $default  reduce using rule 25 (expr)


State 97

   26 expr: ID .

    $default  reduce using rule 26 (expr)


State 98

   89 stmt: ';' . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 138


State 99

   21 expr: '+' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 139


State 100

   20 expr: '-' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 140


State 101

   18 expr: PREF_INCREMENT . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 141


State 102

   16 expr: PREF_DECREMENT . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 142


State 103

   45 expr: NOT . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 143


State 104

   27 expr: '(' . endl_opt expr_list_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 144


State 105

   52 block_statement: '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 145


State 106

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   77 stmt: expr . stmt_sep

    ';'               shift, and go to state 146
    ENDL              shift, and go to state 7
    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    endl      go to state 172
    stmt_sep  go to state 173


State 107

   84 stmt: block_statement . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 174


State 108

   78 stmt: if_stmt .

    $default  reduce using rule 78 (stmt)


State 109

   79 stmt: while_stmt .

    $default  reduce using rule 79 (stmt)


State 110

   81 stmt: do_while_stmt . stmt_sep

    ';'   shift, and go to state 146
    ENDL  shift, and go to state 7

    endl      go to state 172
    stmt_sep  go to state 175


State 111

   80 stmt: for_stmt .

    $default  reduce using rule 80 (stmt)


State 112

   82 stmt: switch_stmt .

    $default  reduce using rule 82 (stmt)


State 113

   88 stmt: return_statement .

    $default  reduce using rule 88 (stmt)


State 114

   83 stmt: try_catch_block .

    $default  reduce using rule 83 (stmt)


State 115

   67 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 176


State 116

   74 stmt_list_opt: stmt_list .
   76 stmt_list: stmt_list . stmt

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    $default  reduce using rule 74 (stmt_list_opt)

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt              go to state 177
    modifier          go to state 118
    enum_declaration  go to state 119


State 117

   75 stmt_list: stmt .

    $default  reduce using rule 75 (stmt_list)


State 118

   85 stmt: modifier . endl_opt var_stmt
   86     | modifier . endl_opt var_list stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 178


State 119

   87 stmt: enum_declaration .

    $default  reduce using rule 87 (stmt)


State 120

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 179


State 121

  143 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt . class_body '}'

    PUBLIC     shift, and go to state 33
    PROTECTED  shift, and go to state 34
    PRIVATE    shift, and go to state 35

    '}'       reduce using rule 140 (class_body)
    $default  reduce using rule 133 (visibility_opt)

    visibility         go to state 36
    visibility_opt     go to state 37
    class_member       go to state 38
    class_member_list  go to state 39
    class_body         go to state 180


State 122

  145 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' . endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 181


State 123

  127 readonly_opt: READONLY endl_opt .

    $default  reduce using rule 127 (readonly_opt)


State 124

  109 var_stmt: ID . endl_opt type_mark endl_opt var_init stmt_sep
  110         | ID . stmt_sep
  111         | ID . endl_opt type_mark stmt_sep
  112         | ID . endl_opt var_init stmt_sep
  113         | ID . endl_opt type_mark dimensions_list stmt_sep
  114         | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  136 class_member: visibility_opt static_opt readonly_opt ID . endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' endl_opt

    ';'   shift, and go to state 146
    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 182
    endl_opt  go to state 183
    stmt_sep  go to state 184


State 125

  135 class_member: visibility_opt static_opt readonly_opt var_stmt .

    $default  reduce using rule 135 (class_member)


State 126

  137 class_member: visibility_opt static_opt class_declaration endl_opt .

    $default  reduce using rule 137 (class_member)


State 127

  144 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt class_body '}' .

    $default  reduce using rule 144 (class_declaration)


State 128

  119 param: ID endl_opt '?' endl_opt . type_mark

    ':'  shift, and go to state 46

    type_mark  go to state 185


State 129

  121 param_list: param_list endl_opt ',' endl_opt . param

    ID  shift, and go to state 43

    param  go to state 186


State 130

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   65 return_statement: RETURN expr . stmt_sep

    ';'               shift, and go to state 146
    ENDL              shift, and go to state 7
    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    endl      go to state 172
    stmt_sep  go to state 187


State 131

   56 do_while_stmt: DO endl_opt . stmt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt              go to state 188
    modifier          go to state 118
    enum_declaration  go to state 119


State 132

   53 if_stmt: IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt
   54        | IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    '('  shift, and go to state 189


State 133

   57 for_stmt: FOR endl_opt . '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    '('  shift, and go to state 190


State 134

   55 while_stmt: WHILE endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt

    '('  shift, and go to state 191


State 135

   58 switch_stmt: SWITCH endl_opt . '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    '('  shift, and go to state 192


State 136

   68 try_catch_block: TRY endl_opt . block_statement endl_opt catch_clause

    '{'  shift, and go to state 105

    block_statement  go to state 193


State 137

  146 enum_declaration: ENUM endl_opt . ID endl_opt '{' endl_opt id_list endl_opt '}'

    ID  shift, and go to state 194


State 138

   89 stmt: ';' endl_opt .

    $default  reduce using rule 89 (stmt)


State 139

   21 expr: '+' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 195


State 140

   20 expr: '-' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 196


State 141

   18 expr: PREF_INCREMENT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 197


State 142

   16 expr: PREF_DECREMENT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 198


State 143

   45 expr: NOT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 199


State 144

   27 expr: '(' endl_opt . expr_list_opt ')'

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 200
    expr_list_opt  go to state 201
    expr           go to state 202


State 145

   52 block_statement: '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    $default  reduce using rule 73 (stmt_list_opt)

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt_list_opt     go to state 203
    stmt_list         go to state 116
    stmt              go to state 117
    modifier          go to state 118
    enum_declaration  go to state 119


State 146

    9 stmt_sep: ';' . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 204


State 147

   39 expr: expr '=' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 205


State 148

   40 expr: expr PLUS_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 206


State 149

   41 expr: expr MINUS_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 207


State 150

   42 expr: expr MUL_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 208


State 151

   43 expr: expr DIV_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 209


State 152

   44 expr: expr MOD_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 210


State 153

   49 expr: expr '[' . endl_opt expr endl_opt ']'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 211


State 154

   48 expr: expr '?' . endl_opt expr endl_opt ':' endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 212


State 155

   47 expr: expr OR . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 213


State 156

   46 expr: expr AND . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 214


State 157

   37 expr: expr EQUALS . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 215


State 158

   38 expr: expr NOT_EQUALS . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 216


State 159

   33 expr: expr '<' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 217


State 160

   34 expr: expr '>' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 218


State 161

   35 expr: expr LESS_OR_EQUAL . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 219


State 162

   36 expr: expr GREATER_OR_EQUAL . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 220


State 163

   19 expr: expr AS . endl_opt type

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 221


State 164

   28 expr: expr '+' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 222


State 165

   29 expr: expr '-' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 223


State 166

   30 expr: expr '*' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 224


State 167

   31 expr: expr '/' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 225


State 168

   32 expr: expr '%' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 226


State 169

   17 expr: expr POST_INCREMENT .

    $default  reduce using rule 17 (expr)


State 170

   15 expr: expr POST_DECREMENT .

    $default  reduce using rule 15 (expr)


State 171

   50 expr: expr '.' . endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr '.' . endl_opt ID

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 227


State 172

    6 endl: endl . ENDL
   10 stmt_sep: endl .

    ENDL  shift, and go to state 13

    $default  reduce using rule 10 (stmt_sep)


State 173

   77 stmt: expr stmt_sep .

    $default  reduce using rule 77 (stmt)


State 174

   84 stmt: block_statement endl_opt .

    $default  reduce using rule 84 (stmt)


State 175

   81 stmt: do_while_stmt stmt_sep .

    $default  reduce using rule 81 (stmt)


State 176

   67 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 67 (function_declaration)


State 177

   76 stmt_list: stmt_list stmt .

    $default  reduce using rule 76 (stmt_list)


State 178

   85 stmt: modifier endl_opt . var_stmt
   86     | modifier endl_opt . var_list stmt_sep

    ID  shift, and go to state 228

    variable  go to state 229
    var_list  go to state 230
    var_stmt  go to state 231


State 179

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    $default  reduce using rule 73 (stmt_list_opt)

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt_list_opt     go to state 232
    stmt_list         go to state 116
    stmt              go to state 117
    modifier          go to state 118
    enum_declaration  go to state 119


State 180

  143 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body . '}'

    '}'  shift, and go to state 233


State 181

  145 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt . class_body '}'

    PUBLIC     shift, and go to state 33
    PROTECTED  shift, and go to state 34
    PRIVATE    shift, and go to state 35

    '}'       reduce using rule 140 (class_body)
    $default  reduce using rule 133 (visibility_opt)

    visibility         go to state 36
    visibility_opt     go to state 37
    class_member       go to state 38
    class_member_list  go to state 39
    class_body         go to state 234


State 182

    6 endl: endl . ENDL
    8 endl_opt: endl .
   10 stmt_sep: endl .

    ENDL  shift, and go to state 13

    '='       reduce using rule 8 (endl_opt)
    ':'       reduce using rule 8 (endl_opt)
    ','       reduce using rule 8 (endl_opt)
    '('       reduce using rule 8 (endl_opt)
    '('       [reduce using rule 10 (stmt_sep)]
    $default  reduce using rule 10 (stmt_sep)

    reduce/reduce conflict on token '(':
        8 endl_opt: endl .
       10 stmt_sep: endl .
      First example: visibility_opt ID endl . endl_opt type_mark endl_opt var_init stmt_sep
      First reduce derivation
        class_member
        `-> 135: visibility_opt ID endl_opt      var_stmt
                                   `-> 8: endl . `-> 109: endl_opt type_mark endl_opt var_init stmt_sep
      Second example: visibility_opt static_opt ID endl .
      Second reduce derivation
        class_member
        `-> 135: visibility_opt static_opt var_stmt
                                           `-> 110: ID stmt_sep
                                                       `-> 10: endl .



State 183

  109 var_stmt: ID endl_opt . type_mark endl_opt var_init stmt_sep
  111         | ID endl_opt . type_mark stmt_sep
  112         | ID endl_opt . var_init stmt_sep
  113         | ID endl_opt . type_mark dimensions_list stmt_sep
  114         | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  136 class_member: visibility_opt static_opt readonly_opt ID endl_opt . param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' endl_opt

    '='  shift, and go to state 235
    ':'  shift, and go to state 46
    '('  shift, and go to state 22

    type_mark             go to state 236
    var_init              go to state 237
    param_list_0_or_more  go to state 238


State 184

  110 var_stmt: ID stmt_sep .

    $default  reduce using rule 110 (var_stmt)


State 185

  119 param: ID endl_opt '?' endl_opt type_mark .

    $default  reduce using rule 119 (param)


State 186

  121 param_list: param_list endl_opt ',' endl_opt param .

    $default  reduce using rule 121 (param_list)


State 187

   65 return_statement: RETURN expr stmt_sep .

    $default  reduce using rule 65 (return_statement)


State 188

   56 do_while_stmt: DO endl_opt stmt . WHILE endl_opt '(' endl_opt expr endl_opt ')'

    WHILE  shift, and go to state 239


State 189

   53 if_stmt: IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt
   54        | IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 240


State 190

   57 for_stmt: FOR endl_opt '(' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 241


State 191

   55 while_stmt: WHILE endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 242


State 192

   58 switch_stmt: SWITCH endl_opt '(' . endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 243


State 193

   68 try_catch_block: TRY endl_opt block_statement . endl_opt catch_clause

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 244


State 194

  146 enum_declaration: ENUM endl_opt ID . endl_opt '{' endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 245


State 195

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   21     | '+' endl_opt expr .
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '.'  shift, and go to state 171

    $default  reduce using rule 21 (expr)


State 196

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   20     | '-' endl_opt expr .
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '.'  shift, and go to state 171

    $default  reduce using rule 20 (expr)


State 197

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   18     | PREF_INCREMENT endl_opt expr .
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 169
    POST_DECREMENT  shift, and go to state 170
    '.'             shift, and go to state 171

    $default  reduce using rule 18 (expr)


State 198

   15 expr: expr . POST_DECREMENT
   16     | PREF_DECREMENT endl_opt expr .
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 169
    POST_DECREMENT  shift, and go to state 170
    '.'             shift, and go to state 171

    $default  reduce using rule 16 (expr)


State 199

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   45     | NOT endl_opt expr .
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '.'  shift, and go to state 171

    $default  reduce using rule 45 (expr)


State 200

   12 expr_list: expr_list . endl_opt ',' endl_opt expr
   14 expr_list_opt: expr_list . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 246


State 201

   27 expr: '(' endl_opt expr_list_opt . ')'

    ')'  shift, and go to state 247


State 202

   11 expr_list: expr .
   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 11 (expr_list)


State 203

   52 block_statement: '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 248


State 204

    9 stmt_sep: ';' endl_opt .

    $default  reduce using rule 9 (stmt_sep)


State 205

   39 expr: expr '=' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 249


State 206

   40 expr: expr PLUS_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 250


State 207

   41 expr: expr MINUS_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 251


State 208

   42 expr: expr MUL_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 252


State 209

   43 expr: expr DIV_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 253


State 210

   44 expr: expr MOD_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 254


State 211

   49 expr: expr '[' endl_opt . expr endl_opt ']'

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 255


State 212

   48 expr: expr '?' endl_opt . expr endl_opt ':' endl_opt expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 256


State 213

   47 expr: expr OR endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 257


State 214

   46 expr: expr AND endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 258


State 215

   37 expr: expr EQUALS endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 259


State 216

   38 expr: expr NOT_EQUALS endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 260


State 217

   33 expr: expr '<' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 261


State 218

   34 expr: expr '>' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 262


State 219

   35 expr: expr LESS_OR_EQUAL endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 263


State 220

   36 expr: expr GREATER_OR_EQUAL endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 264


State 221

   19 expr: expr AS endl_opt . type

    UNKNOWN  shift, and go to state 75
    ANY      shift, and go to state 76
    NUMBER   shift, and go to state 77
    STRING   shift, and go to state 78
    VOID     shift, and go to state 79
    BOOLEAN  shift, and go to state 80
    ID       shift, and go to state 81

    type  go to state 265


State 222

   28 expr: expr '+' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 266


State 223

   29 expr: expr '-' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 267


State 224

   30 expr: expr '*' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 268


State 225

   31 expr: expr '/' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 269


State 226

   32 expr: expr '%' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 270


State 227

   50 expr: expr '.' endl_opt . ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr '.' endl_opt . ID

    ID  shift, and go to state 271


State 228

  102 variable: ID . endl_opt type_mark endl_opt var_init
  103         | ID .
  104         | ID . endl_opt type_mark
  105         | ID . endl_opt var_init
  109 var_stmt: ID . endl_opt type_mark endl_opt var_init stmt_sep
  110         | ID . stmt_sep
  111         | ID . endl_opt type_mark stmt_sep
  112         | ID . endl_opt var_init stmt_sep
  113         | ID . endl_opt type_mark dimensions_list stmt_sep
  114         | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    ';'   shift, and go to state 146
    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 103 (variable)]
    ','       reduce using rule 103 (variable)
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 182
    endl_opt  go to state 272
    stmt_sep  go to state 184

    shift/reduce conflict on token ENDL:
      103 variable: ID .
        5 endl: . ENDL
      First example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt modifier endl_opt ID . ENDL type_mark endl_opt var_init endl_opt ',' endl_opt variable stmt_sep '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                        $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 67: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                                                   '}'
                                                                                                          `-> 74: stmt
                                                                                                                  `-> 86: modifier endl_opt var_list                                                                                             stmt_sep
                                                                                                                                            `-> 107: variable                                                     endl_opt ',' endl_opt variable
                                                                                                                                                     `-> 102: ID endl_opt             type_mark endl_opt var_init
                                                                                                                                                                 `-> 8: endl
                                                                                                                                                                        `-> 5: . ENDL
      Second example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt modifier endl_opt ID . ENDL ',' endl_opt variable stmt_sep '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                           $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 67: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                      '}'
                                                                                                          `-> 74: stmt_list
                                                                                                                  `-> 75: stmt
                                                                                                                          `-> 86: modifier endl_opt var_list                                                        stmt_sep
                                                                                                                                                    `-> 107: variable      endl_opt           ',' endl_opt variable
                                                                                                                                                             `-> 103: ID . `-> 8: endl
                                                                                                                                                                                  `-> 5: ENDL



State 229

  107 var_list: variable . endl_opt ',' endl_opt variable

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 273


State 230

   86 stmt: modifier endl_opt var_list . stmt_sep
  108 var_list: var_list . endl_opt ',' endl_opt variable

    ';'   shift, and go to state 146
    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 182
    endl_opt  go to state 274
    stmt_sep  go to state 275


State 231

   85 stmt: modifier endl_opt var_stmt .

    $default  reduce using rule 85 (stmt)


State 232

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 276


State 233

  143 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}' .

    $default  reduce using rule 143 (class_declaration)


State 234

  145 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body . '}'

    '}'  shift, and go to state 277


State 235

  106 var_init: '=' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 278


State 236

  109 var_stmt: ID endl_opt type_mark . endl_opt var_init stmt_sep
  111         | ID endl_opt type_mark . stmt_sep
  113         | ID endl_opt type_mark . dimensions_list stmt_sep
  114         | ID endl_opt type_mark . dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    ';'   shift, and go to state 146
    ENDL  shift, and go to state 7
    '['   shift, and go to state 279

    $default  reduce using rule 7 (endl_opt)

    endl             go to state 182
    endl_opt         go to state 280
    stmt_sep         go to state 281
    dimensions       go to state 282
    dimensions_list  go to state 283


State 237

  112 var_stmt: ID endl_opt var_init . stmt_sep

    ';'   shift, and go to state 146
    ENDL  shift, and go to state 7

    endl      go to state 172
    stmt_sep  go to state 284


State 238

  136 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more . type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' endl_opt

    ':'  shift, and go to state 46

    $default  reduce using rule 100 (type_mark_opt)

    type_mark      go to state 285
    type_mark_opt  go to state 286


State 239

   56 do_while_stmt: DO endl_opt stmt WHILE . endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 287


State 240

   53 if_stmt: IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt
   54        | IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 288


State 241

   57 for_stmt: FOR endl_opt '(' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 289


State 242

   55 while_stmt: WHILE endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 290


State 243

   58 switch_stmt: SWITCH endl_opt '(' endl_opt . expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 291


State 244

   68 try_catch_block: TRY endl_opt block_statement endl_opt . catch_clause

    CATCH  shift, and go to state 292

    catch_clause  go to state 293


State 245

  146 enum_declaration: ENUM endl_opt ID endl_opt . '{' endl_opt id_list endl_opt '}'

    '{'  shift, and go to state 294


State 246

   12 expr_list: expr_list endl_opt . ',' endl_opt expr
   14 expr_list_opt: expr_list endl_opt .

    ','  shift, and go to state 295

    $default  reduce using rule 14 (expr_list_opt)


State 247

   27 expr: '(' endl_opt expr_list_opt ')' .

    $default  reduce using rule 27 (expr)


State 248

   52 block_statement: '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 52 (block_statement)


State 249

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   39     | expr '=' endl_opt expr .
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 39 (expr)


State 250

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   40     | expr PLUS_ASSIGN endl_opt expr .
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 40 (expr)


State 251

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   41     | expr MINUS_ASSIGN endl_opt expr .
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 41 (expr)


State 252

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   42     | expr MUL_ASSIGN endl_opt expr .
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 42 (expr)


State 253

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   43     | expr DIV_ASSIGN endl_opt expr .
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 43 (expr)


State 254

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   44     | expr MOD_ASSIGN endl_opt expr .
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 44 (expr)


State 255

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   49     | expr '[' endl_opt expr . endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    ENDL              shift, and go to state 7
    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 296


State 256

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   48     | expr '?' endl_opt expr . endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    ENDL              shift, and go to state 7
    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 297


State 257

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   47     | expr OR endl_opt expr .
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 47 (expr)


State 258

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   46     | expr AND endl_opt expr .
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 46 (expr)


State 259

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   37     | expr EQUALS endl_opt expr .
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 164
    '-'             shift, and go to state 165
    '*'             shift, and go to state 166
    '/'             shift, and go to state 167
    '%'             shift, and go to state 168
    POST_INCREMENT  shift, and go to state 169
    POST_DECREMENT  shift, and go to state 170
    '.'             shift, and go to state 171

    $default  reduce using rule 37 (expr)


State 260

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   38     | expr NOT_EQUALS endl_opt expr .
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 164
    '-'             shift, and go to state 165
    '*'             shift, and go to state 166
    '/'             shift, and go to state 167
    '%'             shift, and go to state 168
    POST_INCREMENT  shift, and go to state 169
    POST_DECREMENT  shift, and go to state 170
    '.'             shift, and go to state 171

    $default  reduce using rule 38 (expr)


State 261

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   33     | expr '<' endl_opt expr .
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 164
    '-'             shift, and go to state 165
    '*'             shift, and go to state 166
    '/'             shift, and go to state 167
    '%'             shift, and go to state 168
    POST_INCREMENT  shift, and go to state 169
    POST_DECREMENT  shift, and go to state 170
    '.'             shift, and go to state 171

    $default  reduce using rule 33 (expr)


State 262

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   34     | expr '>' endl_opt expr .
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 164
    '-'             shift, and go to state 165
    '*'             shift, and go to state 166
    '/'             shift, and go to state 167
    '%'             shift, and go to state 168
    POST_INCREMENT  shift, and go to state 169
    POST_DECREMENT  shift, and go to state 170
    '.'             shift, and go to state 171

    $default  reduce using rule 34 (expr)


State 263

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   35     | expr LESS_OR_EQUAL endl_opt expr .
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 164
    '-'             shift, and go to state 165
    '*'             shift, and go to state 166
    '/'             shift, and go to state 167
    '%'             shift, and go to state 168
    POST_INCREMENT  shift, and go to state 169
    POST_DECREMENT  shift, and go to state 170
    '.'             shift, and go to state 171

    $default  reduce using rule 35 (expr)


State 264

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   36     | expr GREATER_OR_EQUAL endl_opt expr .
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 164
    '-'             shift, and go to state 165
    '*'             shift, and go to state 166
    '/'             shift, and go to state 167
    '%'             shift, and go to state 168
    POST_INCREMENT  shift, and go to state 169
    POST_DECREMENT  shift, and go to state 170
    '.'             shift, and go to state 171

    $default  reduce using rule 36 (expr)


State 265

   19 expr: expr AS endl_opt type .

    $default  reduce using rule 19 (expr)


State 266

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   28     | expr '+' endl_opt expr .
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '*'             shift, and go to state 166
    '/'             shift, and go to state 167
    '%'             shift, and go to state 168
    POST_INCREMENT  shift, and go to state 169
    POST_DECREMENT  shift, and go to state 170
    '.'             shift, and go to state 171

    $default  reduce using rule 28 (expr)


State 267

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   29     | expr '-' endl_opt expr .
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '*'             shift, and go to state 166
    '/'             shift, and go to state 167
    '%'             shift, and go to state 168
    POST_INCREMENT  shift, and go to state 169
    POST_DECREMENT  shift, and go to state 170
    '.'             shift, and go to state 171

    $default  reduce using rule 29 (expr)


State 268

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   30     | expr '*' endl_opt expr .
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 169
    POST_DECREMENT  shift, and go to state 170
    '.'             shift, and go to state 171

    $default  reduce using rule 30 (expr)


State 269

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   31     | expr '/' endl_opt expr .
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 169
    POST_DECREMENT  shift, and go to state 170
    '.'             shift, and go to state 171

    $default  reduce using rule 31 (expr)


State 270

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   32     | expr '%' endl_opt expr .
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 169
    POST_DECREMENT  shift, and go to state 170
    '.'             shift, and go to state 171

    $default  reduce using rule 32 (expr)


State 271

   50 expr: expr '.' endl_opt ID . endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr '.' endl_opt ID .

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 51 (expr)]
    '('       reduce using rule 7 (endl_opt)
    $default  reduce using rule 51 (expr)

    endl      go to state 8
    endl_opt  go to state 298

    shift/reduce conflict on token ENDL:
       51 expr: expr '.' endl_opt ID .
        5 endl: . ENDL
      Example: expr '.' endl_opt ID . ENDL '(' ')' stmt_sep
      Shift derivation
        stmt_list
        `-> 75: stmt
                `-> 77: expr                                                                                    stmt_sep
                        `-> 50: expr '.' endl_opt ID endl_opt             '(' endl_opt       expr_list_opt  ')'
                                                     `-> 8: endl              `-> 50: %empty `-> 50: %empty
                                                            `-> 5: . ENDL
      Reduce derivation
        stmt_list
        `-> 76: stmt_list                                                          stmt
                `-> 75: stmt                                                       `-> 77: expr                                          stmt_sep
                        `-> 77: expr                           stmt_sep                    `-> 27: '(' endl_opt       expr_list_opt  ')'
                                `-> 51: expr '.' endl_opt ID . `-> 10: endl                            `-> 27: %empty `-> 27: %empty
                                                                       `-> 5: ENDL



State 272

  102 variable: ID endl_opt . type_mark endl_opt var_init
  104         | ID endl_opt . type_mark
  105         | ID endl_opt . var_init
  109 var_stmt: ID endl_opt . type_mark endl_opt var_init stmt_sep
  111         | ID endl_opt . type_mark stmt_sep
  112         | ID endl_opt . var_init stmt_sep
  113         | ID endl_opt . type_mark dimensions_list stmt_sep
  114         | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    '='  shift, and go to state 235
    ':'  shift, and go to state 46

    type_mark  go to state 299
    var_init   go to state 300


State 273

  107 var_list: variable endl_opt . ',' endl_opt variable

    ','  shift, and go to state 301


State 274

  108 var_list: var_list endl_opt . ',' endl_opt variable

    ','  shift, and go to state 302


State 275

   86 stmt: modifier endl_opt var_list stmt_sep .

    $default  reduce using rule 86 (stmt)


State 276

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 66 (function_declaration)


State 277

  145 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}' .

    $default  reduce using rule 145 (class_declaration)


State 278

  106 var_init: '=' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 303


State 279

  115 dimensions: '[' . endl_opt ']'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 304


State 280

  109 var_stmt: ID endl_opt type_mark endl_opt . var_init stmt_sep

    '='  shift, and go to state 235

    var_init  go to state 305


State 281

  111 var_stmt: ID endl_opt type_mark stmt_sep .

    $default  reduce using rule 111 (var_stmt)


State 282

  116 dimensions_list: dimensions .

    $default  reduce using rule 116 (dimensions_list)


State 283

  113 var_stmt: ID endl_opt type_mark dimensions_list . stmt_sep
  114         | ID endl_opt type_mark dimensions_list . endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  117 dimensions_list: dimensions_list . dimensions

    ';'   shift, and go to state 146
    ENDL  shift, and go to state 7
    '['   shift, and go to state 279

    $default  reduce using rule 7 (endl_opt)

    endl        go to state 182
    endl_opt    go to state 306
    stmt_sep    go to state 307
    dimensions  go to state 308


State 284

  112 var_stmt: ID endl_opt var_init stmt_sep .

    $default  reduce using rule 112 (var_stmt)


State 285

  101 type_mark_opt: type_mark .

    $default  reduce using rule 101 (type_mark_opt)


State 286

  136 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt . endl_opt '{' endl_opt stmt_list_opt '}' endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 309


State 287

   56 do_while_stmt: DO endl_opt stmt WHILE endl_opt . '(' endl_opt expr endl_opt ')'

    '('  shift, and go to state 310


State 288

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   53 if_stmt: IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt
   54        | IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 311


State 289

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   57 for_stmt: FOR endl_opt '(' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 312


State 290

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   55 while_stmt: WHILE endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 313


State 291

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr . endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 314


State 292

   69 catch_clause: CATCH . endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   70             | CATCH . endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 315


State 293

   68 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause .

    $default  reduce using rule 68 (try_catch_block)


State 294

  146 enum_declaration: ENUM endl_opt ID endl_opt '{' . endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 316


State 295

   12 expr_list: expr_list endl_opt ',' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 317


State 296

   49 expr: expr '[' endl_opt expr endl_opt . ']'

    ']'  shift, and go to state 318


State 297

   48 expr: expr '?' endl_opt expr endl_opt . ':' endl_opt expr

    ':'  shift, and go to state 319


State 298

   50 expr: expr '.' endl_opt ID endl_opt . '(' endl_opt expr_list_opt ')'

    '('  shift, and go to state 320


State 299

  102 variable: ID endl_opt type_mark . endl_opt var_init
  104         | ID endl_opt type_mark .
  109 var_stmt: ID endl_opt type_mark . endl_opt var_init stmt_sep
  111         | ID endl_opt type_mark . stmt_sep
  113         | ID endl_opt type_mark . dimensions_list stmt_sep
  114         | ID endl_opt type_mark . dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    ';'   shift, and go to state 146
    ENDL  shift, and go to state 7
    '['   shift, and go to state 279

    ENDL      [reduce using rule 104 (variable)]
    ','       reduce using rule 104 (variable)
    $default  reduce using rule 7 (endl_opt)

    endl             go to state 182
    endl_opt         go to state 321
    stmt_sep         go to state 281
    dimensions       go to state 282
    dimensions_list  go to state 283

    shift/reduce conflict on token ENDL:
      104 variable: ID endl_opt type_mark .
        5 endl: . ENDL
      First example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt modifier endl_opt ID endl_opt type_mark . ENDL var_init endl_opt ',' endl_opt variable stmt_sep '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                        $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 67: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                                                   '}'
                                                                                                          `-> 74: stmt
                                                                                                                  `-> 86: modifier endl_opt var_list                                                                                             stmt_sep
                                                                                                                                            `-> 107: variable                                                     endl_opt ',' endl_opt variable
                                                                                                                                                     `-> 102: ID endl_opt type_mark endl_opt             var_init
                                                                                                                                                                                    `-> 8: endl
                                                                                                                                                                                           `-> 5: . ENDL
      Second example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt modifier endl_opt ID endl_opt type_mark . ENDL ',' endl_opt variable stmt_sep '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                              $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 67: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                                         '}'
                                                                                                          `-> 74: stmt_list
                                                                                                                  `-> 75: stmt
                                                                                                                          `-> 86: modifier endl_opt var_list                                                                           stmt_sep
                                                                                                                                                    `-> 107: variable                         endl_opt           ',' endl_opt variable
                                                                                                                                                             `-> 104: ID endl_opt type_mark . `-> 8: endl
                                                                                                                                                                                                     `-> 5: ENDL



State 300

  105 variable: ID endl_opt var_init .
  112 var_stmt: ID endl_opt var_init . stmt_sep

    ';'   shift, and go to state 146
    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 105 (variable)]
    $default  reduce using rule 105 (variable)

    endl      go to state 172
    stmt_sep  go to state 284

    shift/reduce conflict on token ENDL:
      105 variable: ID endl_opt var_init .
        5 endl: . ENDL
      First example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt modifier endl_opt ID endl_opt var_init . ENDL '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                               $end
               `-> 1: function_declaration
                      `-> 67: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                 '}'
                                                                                                   `-> 74: stmt_list
                                                                                                           `-> 75: stmt
                                                                                                                   `-> 85: modifier endl_opt var_stmt
                                                                                                                                             `-> 112: ID endl_opt var_init stmt_sep
                                                                                                                                                                           `-> 10: endl
                                                                                                                                                                                   `-> 5: . ENDL
      Second example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt modifier endl_opt ID endl_opt var_init . ENDL ',' endl_opt variable stmt_sep '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                             $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 67: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                                        '}'
                                                                                                          `-> 74: stmt_list
                                                                                                                  `-> 75: stmt
                                                                                                                          `-> 86: modifier endl_opt var_list                                                                          stmt_sep
                                                                                                                                                    `-> 107: variable                        endl_opt           ',' endl_opt variable
                                                                                                                                                             `-> 105: ID endl_opt var_init . `-> 8: endl
                                                                                                                                                                                                    `-> 5: ENDL



State 301

  107 var_list: variable endl_opt ',' . endl_opt variable

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 322


State 302

  108 var_list: var_list endl_opt ',' . endl_opt variable

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 323


State 303

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
  106 var_init: '=' endl_opt expr .

    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 106 (var_init)


State 304

  115 dimensions: '[' endl_opt . ']'

    ']'  shift, and go to state 324


State 305

  109 var_stmt: ID endl_opt type_mark endl_opt var_init . stmt_sep

    ';'   shift, and go to state 146
    ENDL  shift, and go to state 7

    endl      go to state 172
    stmt_sep  go to state 325


State 306

  114 var_stmt: ID endl_opt type_mark dimensions_list endl_opt . '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    '='  shift, and go to state 326


State 307

  113 var_stmt: ID endl_opt type_mark dimensions_list stmt_sep .

    $default  reduce using rule 113 (var_stmt)


State 308

  117 dimensions_list: dimensions_list dimensions .

    $default  reduce using rule 117 (dimensions_list)


State 309

  136 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt . '{' endl_opt stmt_list_opt '}' endl_opt

    '{'  shift, and go to state 327


State 310

   56 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' . endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 328


State 311

   53 if_stmt: IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt
   54        | IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt ELSE endl_opt stmt

    ')'  shift, and go to state 329


State 312

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 330


State 313

   55 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt

    ')'  shift, and go to state 331


State 314

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt . ')' endl_opt '{' endl_opt case_list '}' endl_opt

    ')'  shift, and go to state 332


State 315

   69 catch_clause: CATCH endl_opt . '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   70             | CATCH endl_opt . '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    '('  shift, and go to state 333


State 316

  146 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt . id_list endl_opt '}'

    ID  shift, and go to state 334

    id_list  go to state 335


State 317

   12 expr_list: expr_list endl_opt ',' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 336


State 318

   49 expr: expr '[' endl_opt expr endl_opt ']' .

    $default  reduce using rule 49 (expr)


State 319

   48 expr: expr '?' endl_opt expr endl_opt ':' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 337


State 320

   50 expr: expr '.' endl_opt ID endl_opt '(' . endl_opt expr_list_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 338


State 321

  102 variable: ID endl_opt type_mark endl_opt . var_init
  109 var_stmt: ID endl_opt type_mark endl_opt . var_init stmt_sep

    '='  shift, and go to state 235

    var_init  go to state 339


State 322

  107 var_list: variable endl_opt ',' endl_opt . variable

    ID  shift, and go to state 340

    variable  go to state 341


State 323

  108 var_list: var_list endl_opt ',' endl_opt . variable

    ID  shift, and go to state 340

    variable  go to state 342


State 324

  115 dimensions: '[' endl_opt ']' .

    $default  reduce using rule 115 (dimensions)


State 325

  109 var_stmt: ID endl_opt type_mark endl_opt var_init stmt_sep .

    $default  reduce using rule 109 (var_stmt)


State 326

  114 var_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' . endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 343


State 327

  136 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' . endl_opt stmt_list_opt '}' endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 344


State 328

   56 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt . expr endl_opt ')'

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 345


State 329

   53 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt
   54        | IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 346


State 330

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 347


State 331

   55 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 348


State 332

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' . endl_opt '{' endl_opt case_list '}' endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 349


State 333

   69 catch_clause: CATCH endl_opt '(' . endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   70             | CATCH endl_opt '(' . endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 350


State 334

  147 id_list: ID . endl_opt var_init
  148        | ID .

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 148 (id_list)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 148 (id_list)

    endl      go to state 8
    endl_opt  go to state 351

    shift/reduce conflict on token ENDL:
      148 id_list: ID .
        5 endl: . ENDL
      First example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt ENUM endl_opt ID endl_opt '{' endl_opt ID . ENDL var_init endl_opt '}' '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                               $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 67: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                          '}'
                                                                                                          `-> 74: stmt_list
                                                                                                                  `-> 75: enum_declaration
                                                                                                                          `-> 146: ENUM endl_opt ID endl_opt '{' endl_opt id_list                                   endl_opt '}'
                                                                                                                                                                          `-> 147: ID endl_opt             var_init
                                                                                                                                                                                      `-> 8: endl
                                                                                                                                                                                             `-> 5: . ENDL
      Second example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt ENUM endl_opt ID endl_opt '{' endl_opt ID . ENDL '}' '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                     $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 67: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                '}'
                                                                                                          `-> 74: stmt_list
                                                                                                                  `-> 75: stmt
                                                                                                                          `-> 87: enum_declaration
                                                                                                                                  `-> 146: ENUM endl_opt ID endl_opt '{' endl_opt id_list       endl_opt           '}'
                                                                                                                                                                                  `-> 148: ID . `-> 8: endl
                                                                                                                                                                                                       `-> 5: ENDL



State 335

  146 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list . endl_opt '}'
  149 id_list: id_list . endl_opt ',' endl_opt ID
  150        | id_list . endl_opt ',' endl_opt ID endl_opt var_init

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 352


State 336

   12 expr_list: expr_list endl_opt ',' endl_opt expr .
   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 12 (expr_list)


State 337

   48 expr: expr '?' endl_opt expr endl_opt ':' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 353


State 338

   50 expr: expr '.' endl_opt ID endl_opt '(' endl_opt . expr_list_opt ')'

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 200
    expr_list_opt  go to state 354
    expr           go to state 202


State 339

  102 variable: ID endl_opt type_mark endl_opt var_init .
  109 var_stmt: ID endl_opt type_mark endl_opt var_init . stmt_sep

    ';'   shift, and go to state 146
    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 102 (variable)]
    $default  reduce using rule 102 (variable)

    endl      go to state 172
    stmt_sep  go to state 325

    shift/reduce conflict on token ENDL:
      102 variable: ID endl_opt type_mark endl_opt var_init .
        5 endl: . ENDL
      First example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt modifier endl_opt ID endl_opt type_mark endl_opt var_init . ENDL '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                  $end
               `-> 1: function_declaration
                      `-> 67: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                    '}'
                                                                                                   `-> 74: stmt_list
                                                                                                           `-> 75: stmt
                                                                                                                   `-> 85: modifier endl_opt var_stmt
                                                                                                                                             `-> 109: ID endl_opt type_mark endl_opt var_init stmt_sep
                                                                                                                                                                                              `-> 10: endl
                                                                                                                                                                                                      `-> 5: . ENDL
      Second example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt modifier endl_opt ID endl_opt type_mark endl_opt var_init . ENDL ',' endl_opt variable stmt_sep '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 67: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                                                           '}'
                                                                                                          `-> 74: stmt_list
                                                                                                                  `-> 75: stmt
                                                                                                                          `-> 86: modifier endl_opt var_list                                                                                             stmt_sep
                                                                                                                                                    `-> 107: variable                                           endl_opt           ',' endl_opt variable
                                                                                                                                                             `-> 102: ID endl_opt type_mark endl_opt var_init . `-> 8: endl
                                                                                                                                                                                                                       `-> 5: ENDL



State 340

  102 variable: ID . endl_opt type_mark endl_opt var_init
  103         | ID .
  104         | ID . endl_opt type_mark
  105         | ID . endl_opt var_init

    ENDL  shift, and go to state 7

    ';'       reduce using rule 103 (variable)
    ENDL      [reduce using rule 103 (variable)]
    ','       reduce using rule 103 (variable)
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 355

    shift/reduce conflict on token ENDL:
      103 variable: ID .
        5 endl: . ENDL
      First example: variable endl_opt ',' endl_opt ID . ENDL stmt_sep
      Shift derivation
        stmt
        `-> 86: variable endl_opt var_list                               stmt_sep
                                  `-> 107: ',' endl_opt ID endl
                                                           `-> 5: . ENDL
      Second example: modifier variable endl_opt ',' endl_opt ID . ENDL
      Reduce derivation
        stmt
        `-> 86: modifier var_list                                              stmt_sep
                         `-> 107: variable endl_opt ',' endl_opt variable      `-> 10: endl
                                                                 `-> 103: ID .         `-> 5: ENDL



State 341

  107 var_list: variable endl_opt ',' endl_opt variable .

    $default  reduce using rule 107 (var_list)


State 342

  108 var_list: var_list endl_opt ',' endl_opt variable .

    $default  reduce using rule 108 (var_list)


State 343

  114 var_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt . '[' endl_opt expr_list_opt ']' stmt_sep

    '['  shift, and go to state 356


State 344

  136 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt . stmt_list_opt '}' endl_opt

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    $default  reduce using rule 73 (stmt_list_opt)

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt_list_opt     go to state 357
    stmt_list         go to state 116
    stmt              go to state 117
    modifier          go to state 118
    enum_declaration  go to state 119


State 345

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   56 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr . endl_opt ')'

    ENDL              shift, and go to state 7
    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 358


State 346

   53 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt
   54        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt ELSE endl_opt stmt

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt              go to state 359
    modifier          go to state 118
    enum_declaration  go to state 119


State 347

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 360


State 348

   55 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt              go to state 361
    modifier          go to state 118
    enum_declaration  go to state 119


State 349

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt . '{' endl_opt case_list '}' endl_opt

    '{'  shift, and go to state 362


State 350

   69 catch_clause: CATCH endl_opt '(' endl_opt . ID endl_opt ')' endl_opt block_statement endl_opt
   70             | CATCH endl_opt '(' endl_opt . ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ID  shift, and go to state 363


State 351

  147 id_list: ID endl_opt . var_init

    '='  shift, and go to state 235

    var_init  go to state 364


State 352

  146 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt . '}'
  149 id_list: id_list endl_opt . ',' endl_opt ID
  150        | id_list endl_opt . ',' endl_opt ID endl_opt var_init

    ','  shift, and go to state 365
    '}'  shift, and go to state 366


State 353

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   48     | expr '?' endl_opt expr endl_opt ':' endl_opt expr .
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 48 (expr)


State 354

   50 expr: expr '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt . ')'

    ')'  shift, and go to state 367


State 355

  102 variable: ID endl_opt . type_mark endl_opt var_init
  104         | ID endl_opt . type_mark
  105         | ID endl_opt . var_init

    '='  shift, and go to state 235
    ':'  shift, and go to state 46

    type_mark  go to state 368
    var_init   go to state 369


State 356

  114 var_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' . endl_opt expr_list_opt ']' stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 370


State 357

  136 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt . '}' endl_opt

    '}'  shift, and go to state 371


State 358

   56 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt . ')'

    ')'  shift, and go to state 372


State 359

   53 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .
   54        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt stmt

    ELSE  shift, and go to state 373

    ELSE      [reduce using rule 53 (if_stmt)]
    $default  reduce using rule 53 (if_stmt)

    shift/reduce conflict on token ELSE:
       53 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .
       54 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt stmt
      Example: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE stmt
      Shift derivation
        if_stmt
        `-> 53: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
                                                                    `-> 78: if_stmt
                                                                            `-> 54: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt       stmt
                                                                                                                                                    `-> 54: %empty
      Reduce derivation
        if_stmt
        `-> 54: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt                                                                       ELSE endl_opt       stmt
                                                                    `-> 78: if_stmt                                                                 `-> 54: %empty
                                                                            `-> 53: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .



State 360

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 374


State 361

   55 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 55 (while_stmt)


State 362

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' . endl_opt case_list '}' endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 375


State 363

   69 catch_clause: CATCH endl_opt '(' endl_opt ID . endl_opt ')' endl_opt block_statement endl_opt
   70             | CATCH endl_opt '(' endl_opt ID . endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 376


State 364

  147 id_list: ID endl_opt var_init .

    $default  reduce using rule 147 (id_list)


State 365

  149 id_list: id_list endl_opt ',' . endl_opt ID
  150        | id_list endl_opt ',' . endl_opt ID endl_opt var_init

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 377


State 366

  146 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}' .

    $default  reduce using rule 146 (enum_declaration)


State 367

   50 expr: expr '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')' .

    $default  reduce using rule 50 (expr)


State 368

  102 variable: ID endl_opt type_mark . endl_opt var_init
  104         | ID endl_opt type_mark .

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 104 (variable)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 104 (variable)

    endl      go to state 8
    endl_opt  go to state 378

    shift/reduce conflict on token ENDL:
      104 variable: ID endl_opt type_mark .
        5 endl: . ENDL
      First example: endl_opt ',' endl_opt ID endl_opt type_mark . ENDL type_mark endl_opt var_init stmt_sep
      Shift derivation
        stmt
        `-> 86: endl_opt ',' var_list                                                                                   stmt_sep
                             `-> 107: endl_opt ID endl_opt type_mark variable
                                                                     `-> 102: endl          type_mark endl_opt var_init
                                                                              `-> 5: . ENDL
      Second example: modifier variable endl_opt ',' endl_opt ID endl_opt type_mark . ENDL
      Reduce derivation
        stmt
        `-> 86: modifier var_list                                                                 stmt_sep
                         `-> 107: variable endl_opt ',' endl_opt variable                         `-> 10: endl
                                                                 `-> 104: ID endl_opt type_mark .         `-> 5: ENDL



State 369

  105 variable: ID endl_opt var_init .

    $default  reduce using rule 105 (variable)


State 370

  114 var_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt . expr_list_opt ']' stmt_sep

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 200
    expr_list_opt  go to state 379
    expr           go to state 202


State 371

  136 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 380


State 372

   56 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')' .

    $default  reduce using rule 56 (do_while_stmt)


State 373

   54 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE . endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 381


State 374

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 382


State 375

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt . case_list '}' endl_opt

    DEFAULT  shift, and go to state 383
    CASE     shift, and go to state 384

    case_list  go to state 385
    case_stmt  go to state 386


State 376

   69 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt . ')' endl_opt block_statement endl_opt
   70             | CATCH endl_opt '(' endl_opt ID endl_opt . ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ':'  shift, and go to state 387
    ')'  shift, and go to state 388


State 377

  149 id_list: id_list endl_opt ',' endl_opt . ID
  150        | id_list endl_opt ',' endl_opt . ID endl_opt var_init

    ID  shift, and go to state 389


State 378

  102 variable: ID endl_opt type_mark endl_opt . var_init

    '='  shift, and go to state 235

    var_init  go to state 390


State 379

  114 var_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt . ']' stmt_sep

    ']'  shift, and go to state 391


State 380

  136 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' endl_opt .

    $default  reduce using rule 136 (class_member)


State 381

   54 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt . stmt

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt              go to state 392
    modifier          go to state 118
    enum_declaration  go to state 119


State 382

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 393


State 383

   62 case_stmt: DEFAULT . endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 394


State 384

   61 case_stmt: CASE . endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 395


State 385

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list . '}' endl_opt
   60 case_list: case_list . case_stmt

    DEFAULT  shift, and go to state 383
    CASE     shift, and go to state 384
    '}'      shift, and go to state 396

    case_stmt  go to state 397


State 386

   59 case_list: case_stmt .

    $default  reduce using rule 59 (case_list)


State 387

   70 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' . endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 398


State 388

   69 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' . endl_opt block_statement endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 399


State 389

  149 id_list: id_list endl_opt ',' endl_opt ID .
  150        | id_list endl_opt ',' endl_opt ID . endl_opt var_init

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 149 (id_list)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 149 (id_list)

    endl      go to state 8
    endl_opt  go to state 400

    shift/reduce conflict on token ENDL:
      149 id_list: id_list endl_opt ',' endl_opt ID .
        5 endl: . ENDL
      First example: endl_opt ',' endl_opt ID . ENDL var_init
      Shift derivation
        id_list
        `-> 150: endl_opt ',' endl_opt ID endl          var_init
                                          `-> 5: . ENDL
      Second example: ENDL ',' endl_opt ID endl_opt var_init
      Reduce derivation
        id_list
        `-> 150: ENDL ',' endl_opt ID endl_opt var_init



State 390

  102 variable: ID endl_opt type_mark endl_opt var_init .

    $default  reduce using rule 102 (variable)


State 391

  114 var_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' . stmt_sep

    ';'   shift, and go to state 146
    ENDL  shift, and go to state 7

    endl      go to state 172
    stmt_sep  go to state 401


State 392

   54 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt .

    $default  reduce using rule 54 (if_stmt)


State 393

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 402


State 394

   62 case_stmt: DEFAULT endl_opt . ':' endl_opt stmt_list_opt break_opt

    ':'  shift, and go to state 403


State 395

   61 case_stmt: CASE endl_opt . expr endl_opt ':' endl_opt stmt_list_opt break_opt

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 404


State 396

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 405


State 397

   60 case_list: case_list case_stmt .

    $default  reduce using rule 60 (case_list)


State 398

   70 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt . error_type endl_opt ')' endl_opt block_statement endl_opt

    UNKNOWN  shift, and go to state 406
    ANY      shift, and go to state 407

    error_type  go to state 408


State 399

   69 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt . block_statement endl_opt

    '{'  shift, and go to state 105

    block_statement  go to state 409


State 400

  150 id_list: id_list endl_opt ',' endl_opt ID endl_opt . var_init

    '='  shift, and go to state 235

    var_init  go to state 410


State 401

  114 var_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep .

    $default  reduce using rule 114 (var_stmt)


State 402

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 411


State 403

   62 case_stmt: DEFAULT endl_opt ':' . endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 412


State 404

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   61 case_stmt: CASE endl_opt expr . endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 147
    PLUS_ASSIGN       shift, and go to state 148
    MINUS_ASSIGN      shift, and go to state 149
    MUL_ASSIGN        shift, and go to state 150
    DIV_ASSIGN        shift, and go to state 151
    MOD_ASSIGN        shift, and go to state 152
    '['               shift, and go to state 153
    '?'               shift, and go to state 154
    OR                shift, and go to state 155
    AND               shift, and go to state 156
    EQUALS            shift, and go to state 157
    NOT_EQUALS        shift, and go to state 158
    '<'               shift, and go to state 159
    '>'               shift, and go to state 160
    LESS_OR_EQUAL     shift, and go to state 161
    GREATER_OR_EQUAL  shift, and go to state 162
    AS                shift, and go to state 163
    '+'               shift, and go to state 164
    '-'               shift, and go to state 165
    '*'               shift, and go to state 166
    '/'               shift, and go to state 167
    '%'               shift, and go to state 168
    POST_INCREMENT    shift, and go to state 169
    POST_DECREMENT    shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 413


State 405

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt .

    $default  reduce using rule 58 (switch_stmt)


State 406

   71 error_type: UNKNOWN .

    $default  reduce using rule 71 (error_type)


State 407

   72 error_type: ANY .

    $default  reduce using rule 72 (error_type)


State 408

   70 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type . endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 414


State 409

   69 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 415


State 410

  150 id_list: id_list endl_opt ',' endl_opt ID endl_opt var_init .

    $default  reduce using rule 150 (id_list)


State 411

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ')' endl_opt stmt

    ')'  shift, and go to state 416


State 412

   62 case_stmt: DEFAULT endl_opt ':' endl_opt . stmt_list_opt break_opt

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    $default  reduce using rule 73 (stmt_list_opt)

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt_list_opt     go to state 417
    stmt_list         go to state 116
    stmt              go to state 117
    modifier          go to state 118
    enum_declaration  go to state 119


State 413

   61 case_stmt: CASE endl_opt expr endl_opt . ':' endl_opt stmt_list_opt break_opt

    ':'  shift, and go to state 418


State 414

   70 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt . ')' endl_opt block_statement endl_opt

    ')'  shift, and go to state 419


State 415

   69 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt .

    $default  reduce using rule 69 (catch_clause)


State 416

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' . endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 420


State 417

   62 case_stmt: DEFAULT endl_opt ':' endl_opt stmt_list_opt . break_opt

    BREAK  shift, and go to state 421

    $default  reduce using rule 63 (break_opt)

    break_opt  go to state 422


State 418

   61 case_stmt: CASE endl_opt expr endl_opt ':' . endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 423


State 419

   70 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' . endl_opt block_statement endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 424


State 420

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt . stmt

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt              go to state 425
    modifier          go to state 118
    enum_declaration  go to state 119


State 421

   64 break_opt: BREAK . stmt_sep

    ';'   shift, and go to state 146
    ENDL  shift, and go to state 7

    endl      go to state 172
    stmt_sep  go to state 426


State 422

   62 case_stmt: DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt .

    $default  reduce using rule 62 (case_stmt)


State 423

   61 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt . stmt_list_opt break_opt

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    $default  reduce using rule 73 (stmt_list_opt)

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt_list_opt     go to state 427
    stmt_list         go to state 116
    stmt              go to state 117
    modifier          go to state 118
    enum_declaration  go to state 119


State 424

   70 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt . block_statement endl_opt

    '{'  shift, and go to state 105

    block_statement  go to state 428


State 425

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 57 (for_stmt)


State 426

   64 break_opt: BREAK stmt_sep .

    $default  reduce using rule 64 (break_opt)


State 427

   61 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt . break_opt

    BREAK  shift, and go to state 421

    $default  reduce using rule 63 (break_opt)

    break_opt  go to state 429


State 428

   70 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 430


State 429

   61 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt .

    $default  reduce using rule 61 (case_stmt)


State 430

   70 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt .

    $default  reduce using rule 70 (catch_clause)
