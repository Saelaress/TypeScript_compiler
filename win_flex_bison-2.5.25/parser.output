Terminals unused in grammar

    DELETE
    EXPORT
    PUBLIC
    PROTECTED
    PRIVATE
    READONLY
    OF
    IN
    CONTINUE
    INCREMENT
    DECREMENT
    DECLARE
    IS
    NEW
    '.'


State 198 conflicts: 1 shift/reduce
State 220 conflicts: 1 shift/reduce
State 234 conflicts: 1 shift/reduce
State 240 conflicts: 1 shift/reduce
State 246 conflicts: 1 shift/reduce
State 268 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_elem
    2        | program program_elem

    3 program_elem: stmt
    4             | function_declaration

    5 endl: ENDL
    6     | endl ENDL

    7 endl_opt: %empty
    8         | endl

    9 stmt_sep: ';' endl
   10         | endl

   11 expr_list: expr
   12          | expr_list endl_opt ',' endl_opt expr

   13 expr_list_opt: %empty
   14              | expr_list endl_opt

   15 expr: expr POST_DECREMENT
   16     | PREF_DECREMENT endl_opt expr
   17     | expr POST_INCREMENT
   18     | PREF_INCREMENT endl_opt expr
   19     | expr AS endl_opt type
   20     | '-' endl_opt expr
   21     | '+' endl_opt expr
   22     | NUMBER_LITERAL
   23     | STRING_LITERAL
   24     | TRUE_LITERAL
   25     | FALSE_LITERAL
   26     | ID
   27     | '(' endl_opt expr ')'
   28     | expr '+' endl_opt expr
   29     | expr '-' endl_opt expr
   30     | expr '*' endl_opt expr
   31     | expr '/' endl_opt expr
   32     | expr '%' endl_opt expr
   33     | expr '<' endl_opt expr
   34     | expr '>' endl_opt expr
   35     | expr LESS_OR_EQUAL endl_opt expr
   36     | expr GREATER_OR_EQUAL endl_opt expr
   37     | expr EQUALS endl_opt expr
   38     | expr NOT_EQUALS endl_opt expr
   39     | expr '=' endl_opt expr
   40     | expr PLUS_ASSIGN endl_opt expr
   41     | expr MINUS_ASSIGN endl_opt expr
   42     | expr MUL_ASSIGN endl_opt expr
   43     | expr DIV_ASSIGN endl_opt expr
   44     | expr MOD_ASSIGN endl_opt expr
   45     | NOT endl_opt expr
   46     | expr AND endl_opt expr
   47     | expr OR endl_opt expr
   48     | expr '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr '[' endl_opt expr endl_opt ']'

   50 block_statement: '{' endl_opt stmt_list_opt '}'

   51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
   52        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

   53 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')'

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

   57 case_list: case_stmt
   58          | case_list case_stmt

   59 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt
   60          | DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt

   61 break_opt: %empty
   62          | BREAK stmt_sep

   63 return_statement: RETURN expr stmt_sep

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   65                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

   66 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause

   67 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   68             | CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

   69 error_type: UNKNOWN
   70           | ANY

   71 stmt_list_opt: %empty
   72              | stmt_list

   73 stmt_list: stmt
   74          | stmt_list stmt

   75 stmt: expr stmt_sep
   76     | if_stmt
   77     | while_stmt
   78     | for_stmt
   79     | do_while_stmt stmt_sep
   80     | switch_stmt
   81     | try_catch_block
   82     | block_statement endl_opt
   83     | modifier endl_opt variable stmt_sep
   84     | modifier endl_opt ID stmt_sep
   85     | modifier endl_opt var_list stmt_sep
   86     | enum_declaration
   87     | return_statement
   88     | ';' endl_opt

   89 modifier: LET
   90         | CONST

   91 type: NUMBER
   92     | STRING
   93     | BOOLEAN
   94     | ANY
   95     | UNKNOWN
   96     | VOID
   97     | ID

   98 type_mark: ':' endl_opt type

   99 variable: ID endl_opt type_mark endl_opt var_init
  100         | ID endl_opt type_mark
  101         | ID endl_opt var_init
  102         | ID endl_opt type_mark dimensions_list
  103         | ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'

  104 var_init: '=' endl_opt expr

  105 var_list: variable endl_opt ',' endl_opt variable
  106         | ID endl_opt ',' endl_opt variable
  107         | variable endl_opt ',' endl_opt ID
  108         | ID endl_opt ',' endl_opt ID
  109         | var_list endl_opt ',' endl_opt variable

  110 dimensions: '[' endl_opt ']'

  111 dimensions_list: dimensions
  112                | dimensions_list dimensions

  113 param: ID endl_opt type_mark
  114      | ID endl_opt '?' endl_opt type_mark

  115 param_list: param
  116           | param_list endl_opt ',' endl_opt param

  117 param_list_0_or_more: '(' endl_opt param_list endl_opt ')'
  118                     | '(' ')'

  119 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}'
  120                 | ENUM endl_opt ID endl_opt '{' endl_opt id_list_init endl_opt '}'

  121 id_list_init: ID endl_opt var_init
  122             | id_list_init endl_opt ',' endl_opt ID endl_opt var_init

  123 id_list: ID
  124        | id_list endl_opt ',' endl_opt ID


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 32
    '(' (40) 27 51 52 53 54 55 56 67 68 117 118
    ')' (41) 27 51 52 53 54 55 56 67 68 117 118
    '*' (42) 30
    '+' (43) 21 28
    ',' (44) 12 105 106 107 108 109 116 122 124
    '-' (45) 20 29
    '.' (46)
    '/' (47) 31
    ':' (58) 48 59 60 68 98
    ';' (59) 9 55 88
    '<' (60) 33
    '=' (61) 39 103 104
    '>' (62) 34
    '?' (63) 48 114
    '[' (91) 49 103 110
    ']' (93) 49 103 110
    '{' (123) 50 56 64 65 119 120
    '}' (125) 50 56 64 65 119 120
    error (256)
    RETURN (258) 63
    DELETE (259)
    EXPORT (260)
    PUBLIC (261)
    PROTECTED (262)
    PRIVATE (263)
    READONLY (264)
    DO (265) 54
    IF (266) 51 52
    ELSE (267) 52
    FOR (268) 55
    OF (269)
    IN (270)
    WHILE (271) 53 54
    BREAK (272) 62
    CONTINUE (273)
    DEFAULT (274) 60
    SWITCH (275) 56
    CASE (276) 59
    TRY (277) 66
    CATCH (278) 67 68
    INCREMENT (279)
    DECREMENT (280)
    LET (281) 89
    CONST (282) 90
    FUNC (283) 64 65
    DECLARE (284)
    UNKNOWN (285) 69 95
    ANY (286) 70 94
    NUMBER (287) 91
    STRING (288) 92
    VOID (289) 96
    BOOLEAN (290) 93
    ENUM (291) 119 120
    NUMBER_LITERAL (292) 22
    STRING_LITERAL (293) 23
    TRUE_LITERAL (294) 24
    FALSE_LITERAL (295) 25
    ID (296) 26 64 65 67 68 84 97 99 100 101 102 103 106 107 108 113 114 119 120 121 122 123 124
    ENDL (297) 5 6
    PLUS_ASSIGN (298) 40
    MINUS_ASSIGN (299) 41
    MUL_ASSIGN (300) 42
    DIV_ASSIGN (301) 43
    MOD_ASSIGN (302) 44
    OR (303) 47
    AND (304) 46
    EQUALS (305) 37
    NOT_EQUALS (306) 38
    LESS_OR_EQUAL (307) 35
    GREATER_OR_EQUAL (308) 36
    IS (309)
    AS (310) 19
    NEW (311)
    PREF_INCREMENT (312) 18
    PREF_DECREMENT (313) 16
    POST_INCREMENT (314) 17
    POST_DECREMENT (315) 15
    NOT (316) 45
    UPLUS (317)
    UMINUS (318)


Nonterminals, with rules where they appear

    $accept (83)
        on left: 0
    program (84)
        on left: 1 2
        on right: 0 2
    program_elem (85)
        on left: 3 4
        on right: 1 2
    endl (86)
        on left: 5 6
        on right: 6 8 9 10
    endl_opt (87)
        on left: 7 8
        on right: 12 14 16 18 19 20 21 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 59 60 64 65 66 67 68 82 83 84 85 88 98 99 100 101 102 103 104 105 106 107 108 109 110 113 114 116 117 119 120 121 122 124
    stmt_sep (88)
        on left: 9 10
        on right: 62 63 75 79 83 84 85
    expr_list (89)
        on left: 11 12
        on right: 12 14
    expr_list_opt (90)
        on left: 13 14
        on right: 103
    expr (91)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
        on right: 11 12 15 16 17 18 19 20 21 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 51 52 53 54 55 56 59 63 75 104
    block_statement (92)
        on left: 50
        on right: 66 67 68 82
    if_stmt (93)
        on left: 51 52
        on right: 76
    while_stmt (94)
        on left: 53
        on right: 77
    do_while_stmt (95)
        on left: 54
        on right: 79
    for_stmt (96)
        on left: 55
        on right: 78
    switch_stmt (97)
        on left: 56
        on right: 80
    case_list (98)
        on left: 57 58
        on right: 56 58
    case_stmt (99)
        on left: 59 60
        on right: 57 58
    break_opt (100)
        on left: 61 62
        on right: 59 60
    return_statement (101)
        on left: 63
        on right: 87
    function_declaration (102)
        on left: 64 65
        on right: 4
    try_catch_block (103)
        on left: 66
        on right: 81
    catch_clause (104)
        on left: 67 68
        on right: 66
    error_type (105)
        on left: 69 70
        on right: 68
    stmt_list_opt (106)
        on left: 71 72
        on right: 50 59 60 64 65
    stmt_list (107)
        on left: 73 74
        on right: 72 74
    stmt (108)
        on left: 75 76 77 78 79 80 81 82 83 84 85 86 87 88
        on right: 3 51 52 53 54 55 73 74
    modifier (109)
        on left: 89 90
        on right: 83 84 85
    type (110)
        on left: 91 92 93 94 95 96 97
        on right: 19 98
    type_mark (111)
        on left: 98
        on right: 64 99 100 102 103 113 114
    variable (112)
        on left: 99 100 101 102 103
        on right: 83 105 106 107 109
    var_init (113)
        on left: 104
        on right: 99 101 121 122
    var_list (114)
        on left: 105 106 107 108 109
        on right: 85 109
    dimensions (115)
        on left: 110
        on right: 111 112
    dimensions_list (116)
        on left: 111 112
        on right: 102 103 112
    param (117)
        on left: 113 114
        on right: 115 116
    param_list (118)
        on left: 115 116
        on right: 116 117
    param_list_0_or_more (119)
        on left: 117 118
        on right: 64 65
    enum_declaration (120)
        on left: 119 120
        on right: 86
    id_list_init (121)
        on left: 121 122
        on right: 120 122
    id_list (122)
        on left: 123 124
        on right: 119 124


State 0

    0 $accept: . program $end

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    FUNC            shift, and go to state 10
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    program               go to state 25
    program_elem          go to state 26
    expr                  go to state 27
    block_statement       go to state 28
    if_stmt               go to state 29
    while_stmt            go to state 30
    do_while_stmt         go to state 31
    for_stmt              go to state 32
    switch_stmt           go to state 33
    return_statement      go to state 34
    function_declaration  go to state 35
    try_catch_block       go to state 36
    stmt                  go to state 37
    modifier              go to state 38
    enum_declaration      go to state 39


State 1

   63 return_statement: RETURN . expr stmt_sep

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 40


State 2

   54 do_while_stmt: DO . endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 43


State 3

   51 if_stmt: IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
   52        | IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 44


State 4

   55 for_stmt: FOR . endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 45


State 5

   53 while_stmt: WHILE . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 46


State 6

   56 switch_stmt: SWITCH . endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 47


State 7

   66 try_catch_block: TRY . endl_opt block_statement endl_opt catch_clause

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 48


State 8

   89 modifier: LET .

    $default  reduce using rule 89 (modifier)


State 9

   90 modifier: CONST .

    $default  reduce using rule 90 (modifier)


State 10

   64 function_declaration: FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   65                     | FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 49


State 11

  119 enum_declaration: ENUM . endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}'
  120                 | ENUM . endl_opt ID endl_opt '{' endl_opt id_list_init endl_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 50


State 12

   22 expr: NUMBER_LITERAL .

    $default  reduce using rule 22 (expr)


State 13

   23 expr: STRING_LITERAL .

    $default  reduce using rule 23 (expr)


State 14

   24 expr: TRUE_LITERAL .

    $default  reduce using rule 24 (expr)


State 15

   25 expr: FALSE_LITERAL .

    $default  reduce using rule 25 (expr)


State 16

   26 expr: ID .

    $default  reduce using rule 26 (expr)


State 17

   88 stmt: ';' . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 51


State 18

   21 expr: '+' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 52


State 19

   20 expr: '-' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 53


State 20

   18 expr: PREF_INCREMENT . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 54


State 21

   16 expr: PREF_DECREMENT . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 55


State 22

   45 expr: NOT . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 56


State 23

   27 expr: '(' . endl_opt expr ')'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 57


State 24

   50 block_statement: '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 58


State 25

    0 $accept: program . $end
    2 program: program . program_elem

    $end            shift, and go to state 59
    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    FUNC            shift, and go to state 10
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    program_elem          go to state 60
    expr                  go to state 27
    block_statement       go to state 28
    if_stmt               go to state 29
    while_stmt            go to state 30
    do_while_stmt         go to state 31
    for_stmt              go to state 32
    switch_stmt           go to state 33
    return_statement      go to state 34
    function_declaration  go to state 35
    try_catch_block       go to state 36
    stmt                  go to state 37
    modifier              go to state 38
    enum_declaration      go to state 39


State 26

    1 program: program_elem .

    $default  reduce using rule 1 (program)


State 27

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   75 stmt: expr . stmt_sep

    ';'               shift, and go to state 61
    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    endl      go to state 86
    stmt_sep  go to state 87


State 28

   82 stmt: block_statement . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 88


State 29

   76 stmt: if_stmt .

    $default  reduce using rule 76 (stmt)


State 30

   77 stmt: while_stmt .

    $default  reduce using rule 77 (stmt)


State 31

   79 stmt: do_while_stmt . stmt_sep

    ';'   shift, and go to state 61
    ENDL  shift, and go to state 41

    endl      go to state 86
    stmt_sep  go to state 89


State 32

   78 stmt: for_stmt .

    $default  reduce using rule 78 (stmt)


State 33

   80 stmt: switch_stmt .

    $default  reduce using rule 80 (stmt)


State 34

   87 stmt: return_statement .

    $default  reduce using rule 87 (stmt)


State 35

    4 program_elem: function_declaration .

    $default  reduce using rule 4 (program_elem)


State 36

   81 stmt: try_catch_block .

    $default  reduce using rule 81 (stmt)


State 37

    3 program_elem: stmt .

    $default  reduce using rule 3 (program_elem)


State 38

   83 stmt: modifier . endl_opt variable stmt_sep
   84     | modifier . endl_opt ID stmt_sep
   85     | modifier . endl_opt var_list stmt_sep

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 90


State 39

   86 stmt: enum_declaration .

    $default  reduce using rule 86 (stmt)


State 40

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   63 return_statement: RETURN expr . stmt_sep

    ';'               shift, and go to state 61
    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    endl      go to state 86
    stmt_sep  go to state 91


State 41

    5 endl: ENDL .

    $default  reduce using rule 5 (endl)


State 42

    6 endl: endl . ENDL
    8 endl_opt: endl .

    ENDL  shift, and go to state 92

    $default  reduce using rule 8 (endl_opt)


State 43

   54 do_while_stmt: DO endl_opt . stmt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt              go to state 93
    modifier          go to state 38
    enum_declaration  go to state 39


State 44

   51 if_stmt: IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt
   52        | IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    '('  shift, and go to state 94


State 45

   55 for_stmt: FOR endl_opt . '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    '('  shift, and go to state 95


State 46

   53 while_stmt: WHILE endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt

    '('  shift, and go to state 96


State 47

   56 switch_stmt: SWITCH endl_opt . '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    '('  shift, and go to state 97


State 48

   66 try_catch_block: TRY endl_opt . block_statement endl_opt catch_clause

    '{'  shift, and go to state 24

    block_statement  go to state 98


State 49

   64 function_declaration: FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   65                     | FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ID  shift, and go to state 99


State 50

  119 enum_declaration: ENUM endl_opt . ID endl_opt '{' endl_opt id_list endl_opt '}'
  120                 | ENUM endl_opt . ID endl_opt '{' endl_opt id_list_init endl_opt '}'

    ID  shift, and go to state 100


State 51

   88 stmt: ';' endl_opt .

    $default  reduce using rule 88 (stmt)


State 52

   21 expr: '+' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 101


State 53

   20 expr: '-' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 102


State 54

   18 expr: PREF_INCREMENT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 103


State 55

   16 expr: PREF_DECREMENT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 104


State 56

   45 expr: NOT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 105


State 57

   27 expr: '(' endl_opt . expr ')'

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 106


State 58

   50 block_statement: '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    $default  reduce using rule 71 (stmt_list_opt)

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt_list_opt     go to state 107
    stmt_list         go to state 108
    stmt              go to state 109
    modifier          go to state 38
    enum_declaration  go to state 39


State 59

    0 $accept: program $end .

    $default  accept


State 60

    2 program: program program_elem .

    $default  reduce using rule 2 (program)


State 61

    9 stmt_sep: ';' . endl

    ENDL  shift, and go to state 41

    endl  go to state 110


State 62

   39 expr: expr '=' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 111


State 63

   40 expr: expr PLUS_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 112


State 64

   41 expr: expr MINUS_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 113


State 65

   42 expr: expr MUL_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 114


State 66

   43 expr: expr DIV_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 115


State 67

   44 expr: expr MOD_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 116


State 68

   49 expr: expr '[' . endl_opt expr endl_opt ']'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 117


State 69

   48 expr: expr '?' . endl_opt expr endl_opt ':' endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 118


State 70

   47 expr: expr OR . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 119


State 71

   46 expr: expr AND . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 120


State 72

   37 expr: expr EQUALS . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 121


State 73

   38 expr: expr NOT_EQUALS . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 122


State 74

   33 expr: expr '<' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 123


State 75

   34 expr: expr '>' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 124


State 76

   35 expr: expr LESS_OR_EQUAL . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 125


State 77

   36 expr: expr GREATER_OR_EQUAL . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 126


State 78

   19 expr: expr AS . endl_opt type

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 127


State 79

   28 expr: expr '+' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 128


State 80

   29 expr: expr '-' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 129


State 81

   30 expr: expr '*' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 130


State 82

   31 expr: expr '/' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 131


State 83

   32 expr: expr '%' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 132


State 84

   17 expr: expr POST_INCREMENT .

    $default  reduce using rule 17 (expr)


State 85

   15 expr: expr POST_DECREMENT .

    $default  reduce using rule 15 (expr)


State 86

    6 endl: endl . ENDL
   10 stmt_sep: endl .

    ENDL  shift, and go to state 92

    $default  reduce using rule 10 (stmt_sep)


State 87

   75 stmt: expr stmt_sep .

    $default  reduce using rule 75 (stmt)


State 88

   82 stmt: block_statement endl_opt .

    $default  reduce using rule 82 (stmt)


State 89

   79 stmt: do_while_stmt stmt_sep .

    $default  reduce using rule 79 (stmt)


State 90

   83 stmt: modifier endl_opt . variable stmt_sep
   84     | modifier endl_opt . ID stmt_sep
   85     | modifier endl_opt . var_list stmt_sep

    ID  shift, and go to state 133

    variable  go to state 134
    var_list  go to state 135


State 91

   63 return_statement: RETURN expr stmt_sep .

    $default  reduce using rule 63 (return_statement)


State 92

    6 endl: endl ENDL .

    $default  reduce using rule 6 (endl)


State 93

   54 do_while_stmt: DO endl_opt stmt . WHILE endl_opt '(' endl_opt expr endl_opt ')'

    WHILE  shift, and go to state 136


State 94

   51 if_stmt: IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt
   52        | IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 137


State 95

   55 for_stmt: FOR endl_opt '(' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 138


State 96

   53 while_stmt: WHILE endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 139


State 97

   56 switch_stmt: SWITCH endl_opt '(' . endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 140


State 98

   66 try_catch_block: TRY endl_opt block_statement . endl_opt catch_clause

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 141


State 99

   64 function_declaration: FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   65                     | FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 142


State 100

  119 enum_declaration: ENUM endl_opt ID . endl_opt '{' endl_opt id_list endl_opt '}'
  120                 | ENUM endl_opt ID . endl_opt '{' endl_opt id_list_init endl_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 143


State 101

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   21     | '+' endl_opt expr .
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    $default  reduce using rule 21 (expr)


State 102

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   20     | '-' endl_opt expr .
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    $default  reduce using rule 20 (expr)


State 103

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   18     | PREF_INCREMENT endl_opt expr .
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 18 (expr)


State 104

   15 expr: expr . POST_DECREMENT
   16     | PREF_DECREMENT endl_opt expr .
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 16 (expr)


State 105

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   45     | NOT endl_opt expr .
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    $default  reduce using rule 45 (expr)


State 106

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   27     | '(' endl_opt expr . ')'
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85
    ')'               shift, and go to state 144


State 107

   50 block_statement: '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 145


State 108

   72 stmt_list_opt: stmt_list .
   74 stmt_list: stmt_list . stmt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    $default  reduce using rule 72 (stmt_list_opt)

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt              go to state 146
    modifier          go to state 38
    enum_declaration  go to state 39


State 109

   73 stmt_list: stmt .

    $default  reduce using rule 73 (stmt_list)


State 110

    6 endl: endl . ENDL
    9 stmt_sep: ';' endl .

    ENDL  shift, and go to state 92

    $default  reduce using rule 9 (stmt_sep)


State 111

   39 expr: expr '=' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 147


State 112

   40 expr: expr PLUS_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 148


State 113

   41 expr: expr MINUS_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 149


State 114

   42 expr: expr MUL_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 150


State 115

   43 expr: expr DIV_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 151


State 116

   44 expr: expr MOD_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 152


State 117

   49 expr: expr '[' endl_opt . expr endl_opt ']'

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 153


State 118

   48 expr: expr '?' endl_opt . expr endl_opt ':' endl_opt expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 154


State 119

   47 expr: expr OR endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 155


State 120

   46 expr: expr AND endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 156


State 121

   37 expr: expr EQUALS endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 157


State 122

   38 expr: expr NOT_EQUALS endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 158


State 123

   33 expr: expr '<' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 159


State 124

   34 expr: expr '>' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 160


State 125

   35 expr: expr LESS_OR_EQUAL endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 161


State 126

   36 expr: expr GREATER_OR_EQUAL endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 162


State 127

   19 expr: expr AS endl_opt . type

    UNKNOWN  shift, and go to state 163
    ANY      shift, and go to state 164
    NUMBER   shift, and go to state 165
    STRING   shift, and go to state 166
    VOID     shift, and go to state 167
    BOOLEAN  shift, and go to state 168
    ID       shift, and go to state 169

    type  go to state 170


State 128

   28 expr: expr '+' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 171


State 129

   29 expr: expr '-' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 172


State 130

   30 expr: expr '*' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 173


State 131

   31 expr: expr '/' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 174


State 132

   32 expr: expr '%' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 175


State 133

   84 stmt: modifier endl_opt ID . stmt_sep
   99 variable: ID . endl_opt type_mark endl_opt var_init
  100         | ID . endl_opt type_mark
  101         | ID . endl_opt var_init
  102         | ID . endl_opt type_mark dimensions_list
  103         | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'
  106 var_list: ID . endl_opt ',' endl_opt variable
  108         | ID . endl_opt ',' endl_opt ID

    ';'   shift, and go to state 61
    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 176
    endl_opt  go to state 177
    stmt_sep  go to state 178


State 134

   83 stmt: modifier endl_opt variable . stmt_sep
  105 var_list: variable . endl_opt ',' endl_opt variable
  107         | variable . endl_opt ',' endl_opt ID

    ';'   shift, and go to state 61
    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 176
    endl_opt  go to state 179
    stmt_sep  go to state 180


State 135

   85 stmt: modifier endl_opt var_list . stmt_sep
  109 var_list: var_list . endl_opt ',' endl_opt variable

    ';'   shift, and go to state 61
    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 176
    endl_opt  go to state 181
    stmt_sep  go to state 182


State 136

   54 do_while_stmt: DO endl_opt stmt WHILE . endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 183


State 137

   51 if_stmt: IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt
   52        | IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 184


State 138

   55 for_stmt: FOR endl_opt '(' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 185


State 139

   53 while_stmt: WHILE endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 186


State 140

   56 switch_stmt: SWITCH endl_opt '(' endl_opt . expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 187


State 141

   66 try_catch_block: TRY endl_opt block_statement endl_opt . catch_clause

    CATCH  shift, and go to state 188

    catch_clause  go to state 189


State 142

   64 function_declaration: FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   65                     | FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    '('  shift, and go to state 190

    param_list_0_or_more  go to state 191


State 143

  119 enum_declaration: ENUM endl_opt ID endl_opt . '{' endl_opt id_list endl_opt '}'
  120                 | ENUM endl_opt ID endl_opt . '{' endl_opt id_list_init endl_opt '}'

    '{'  shift, and go to state 192


State 144

   27 expr: '(' endl_opt expr ')' .

    $default  reduce using rule 27 (expr)


State 145

   50 block_statement: '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 50 (block_statement)


State 146

   74 stmt_list: stmt_list stmt .

    $default  reduce using rule 74 (stmt_list)


State 147

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   39     | expr '=' endl_opt expr .
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 39 (expr)


State 148

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   40     | expr PLUS_ASSIGN endl_opt expr .
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 40 (expr)


State 149

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   41     | expr MINUS_ASSIGN endl_opt expr .
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 41 (expr)


State 150

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   42     | expr MUL_ASSIGN endl_opt expr .
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 42 (expr)


State 151

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   43     | expr DIV_ASSIGN endl_opt expr .
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 43 (expr)


State 152

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   44     | expr MOD_ASSIGN endl_opt expr .
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 44 (expr)


State 153

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   49     | expr '[' endl_opt expr . endl_opt ']'

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 193


State 154

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   48     | expr '?' endl_opt expr . endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 194


State 155

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   47     | expr OR endl_opt expr .
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 47 (expr)


State 156

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   46     | expr AND endl_opt expr .
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 46 (expr)


State 157

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   37     | expr EQUALS endl_opt expr .
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '*'             shift, and go to state 81
    '/'             shift, and go to state 82
    '%'             shift, and go to state 83
    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 37 (expr)


State 158

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   38     | expr NOT_EQUALS endl_opt expr .
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '*'             shift, and go to state 81
    '/'             shift, and go to state 82
    '%'             shift, and go to state 83
    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 38 (expr)


State 159

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   33     | expr '<' endl_opt expr .
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '*'             shift, and go to state 81
    '/'             shift, and go to state 82
    '%'             shift, and go to state 83
    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 33 (expr)


State 160

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   34     | expr '>' endl_opt expr .
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '*'             shift, and go to state 81
    '/'             shift, and go to state 82
    '%'             shift, and go to state 83
    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 34 (expr)


State 161

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   35     | expr LESS_OR_EQUAL endl_opt expr .
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '*'             shift, and go to state 81
    '/'             shift, and go to state 82
    '%'             shift, and go to state 83
    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 35 (expr)


State 162

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   36     | expr GREATER_OR_EQUAL endl_opt expr .
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '*'             shift, and go to state 81
    '/'             shift, and go to state 82
    '%'             shift, and go to state 83
    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 36 (expr)


State 163

   95 type: UNKNOWN .

    $default  reduce using rule 95 (type)


State 164

   94 type: ANY .

    $default  reduce using rule 94 (type)


State 165

   91 type: NUMBER .

    $default  reduce using rule 91 (type)


State 166

   92 type: STRING .

    $default  reduce using rule 92 (type)


State 167

   96 type: VOID .

    $default  reduce using rule 96 (type)


State 168

   93 type: BOOLEAN .

    $default  reduce using rule 93 (type)


State 169

   97 type: ID .

    $default  reduce using rule 97 (type)


State 170

   19 expr: expr AS endl_opt type .

    $default  reduce using rule 19 (expr)


State 171

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   28     | expr '+' endl_opt expr .
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '*'             shift, and go to state 81
    '/'             shift, and go to state 82
    '%'             shift, and go to state 83
    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 28 (expr)


State 172

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   29     | expr '-' endl_opt expr .
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '*'             shift, and go to state 81
    '/'             shift, and go to state 82
    '%'             shift, and go to state 83
    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 29 (expr)


State 173

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   30     | expr '*' endl_opt expr .
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 30 (expr)


State 174

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   31     | expr '/' endl_opt expr .
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 31 (expr)


State 175

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   32     | expr '%' endl_opt expr .
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 32 (expr)


State 176

    6 endl: endl . ENDL
    8 endl_opt: endl .
   10 stmt_sep: endl .

    ENDL  shift, and go to state 92

    '='       reduce using rule 8 (endl_opt)
    ':'       reduce using rule 8 (endl_opt)
    ','       reduce using rule 8 (endl_opt)
    $default  reduce using rule 10 (stmt_sep)


State 177

   99 variable: ID endl_opt . type_mark endl_opt var_init
  100         | ID endl_opt . type_mark
  101         | ID endl_opt . var_init
  102         | ID endl_opt . type_mark dimensions_list
  103         | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'
  106 var_list: ID endl_opt . ',' endl_opt variable
  108         | ID endl_opt . ',' endl_opt ID

    '='  shift, and go to state 195
    ':'  shift, and go to state 196
    ','  shift, and go to state 197

    type_mark  go to state 198
    var_init   go to state 199


State 178

   84 stmt: modifier endl_opt ID stmt_sep .

    $default  reduce using rule 84 (stmt)


State 179

  105 var_list: variable endl_opt . ',' endl_opt variable
  107         | variable endl_opt . ',' endl_opt ID

    ','  shift, and go to state 200


State 180

   83 stmt: modifier endl_opt variable stmt_sep .

    $default  reduce using rule 83 (stmt)


State 181

  109 var_list: var_list endl_opt . ',' endl_opt variable

    ','  shift, and go to state 201


State 182

   85 stmt: modifier endl_opt var_list stmt_sep .

    $default  reduce using rule 85 (stmt)


State 183

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt . '(' endl_opt expr endl_opt ')'

    '('  shift, and go to state 202


State 184

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   51 if_stmt: IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt
   52        | IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 203


State 185

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   55 for_stmt: FOR endl_opt '(' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 204


State 186

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   53 while_stmt: WHILE endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 205


State 187

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr . endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 206


State 188

   67 catch_clause: CATCH . endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   68             | CATCH . endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 207


State 189

   66 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause .

    $default  reduce using rule 66 (try_catch_block)


State 190

  117 param_list_0_or_more: '(' . endl_opt param_list endl_opt ')'
  118                     | '(' . ')'

    ENDL  shift, and go to state 41
    ')'   shift, and go to state 208

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 209


State 191

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   65                     | FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 210


State 192

  119 enum_declaration: ENUM endl_opt ID endl_opt '{' . endl_opt id_list endl_opt '}'
  120                 | ENUM endl_opt ID endl_opt '{' . endl_opt id_list_init endl_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 211


State 193

   49 expr: expr '[' endl_opt expr endl_opt . ']'

    ']'  shift, and go to state 212


State 194

   48 expr: expr '?' endl_opt expr endl_opt . ':' endl_opt expr

    ':'  shift, and go to state 213


State 195

  104 var_init: '=' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 214


State 196

   98 type_mark: ':' . endl_opt type

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 215


State 197

  106 var_list: ID endl_opt ',' . endl_opt variable
  108         | ID endl_opt ',' . endl_opt ID

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 216


State 198

   99 variable: ID endl_opt type_mark . endl_opt var_init
  100         | ID endl_opt type_mark .
  102         | ID endl_opt type_mark . dimensions_list
  103         | ID endl_opt type_mark . dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'

    ENDL  shift, and go to state 41
    '['   shift, and go to state 217

    ENDL      [reduce using rule 100 (variable)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 100 (variable)

    endl             go to state 42
    endl_opt         go to state 218
    dimensions       go to state 219
    dimensions_list  go to state 220

    shift/reduce conflict on token ENDL:
      100 variable: ID endl_opt type_mark .
        5 endl: . ENDL
      First example: modifier endl_opt ID endl_opt type_mark . ENDL var_init stmt_sep $end
      Shift derivation
        $accept
        `-> 0: program                                                                                               $end
               `-> 1: stmt
                      `-> 83: modifier endl_opt variable                                                    stmt_sep
                                                `-> 99: ID endl_opt type_mark endl_opt             var_init
                                                                              `-> 8: endl
                                                                                     `-> 5: . ENDL
      Second example: modifier endl_opt ID endl_opt type_mark . ENDL $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                      $end
               `-> 1: program_elem
                      `-> 3: stmt
                             `-> 83: modifier endl_opt variable                         stmt_sep
                                                       `-> 100: ID endl_opt type_mark . `-> 10: endl
                                                                                                `-> 5: ENDL



State 199

  101 variable: ID endl_opt var_init .

    $default  reduce using rule 101 (variable)


State 200

  105 var_list: variable endl_opt ',' . endl_opt variable
  107         | variable endl_opt ',' . endl_opt ID

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 221


State 201

  109 var_list: var_list endl_opt ',' . endl_opt variable

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 222


State 202

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' . endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 223


State 203

   51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt
   52        | IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt ELSE endl_opt stmt

    ')'  shift, and go to state 224


State 204

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 225


State 205

   53 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt

    ')'  shift, and go to state 226


State 206

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt . ')' endl_opt '{' endl_opt case_list '}' endl_opt

    ')'  shift, and go to state 227


State 207

   67 catch_clause: CATCH endl_opt . '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   68             | CATCH endl_opt . '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    '('  shift, and go to state 228


State 208

  118 param_list_0_or_more: '(' ')' .

    $default  reduce using rule 118 (param_list_0_or_more)


State 209

  117 param_list_0_or_more: '(' endl_opt . param_list endl_opt ')'

    ID  shift, and go to state 229

    param       go to state 230
    param_list  go to state 231


State 210

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   65                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . '{' endl_opt stmt_list_opt '}'

    ':'  shift, and go to state 196
    '{'  shift, and go to state 232

    type_mark  go to state 233


State 211

  119 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt . id_list endl_opt '}'
  120                 | ENUM endl_opt ID endl_opt '{' endl_opt . id_list_init endl_opt '}'

    ID  shift, and go to state 234

    id_list_init  go to state 235
    id_list       go to state 236


State 212

   49 expr: expr '[' endl_opt expr endl_opt ']' .

    $default  reduce using rule 49 (expr)


State 213

   48 expr: expr '?' endl_opt expr endl_opt ':' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 237


State 214

  104 var_init: '=' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 238


State 215

   98 type_mark: ':' endl_opt . type

    UNKNOWN  shift, and go to state 163
    ANY      shift, and go to state 164
    NUMBER   shift, and go to state 165
    STRING   shift, and go to state 166
    VOID     shift, and go to state 167
    BOOLEAN  shift, and go to state 168
    ID       shift, and go to state 169

    type  go to state 239


State 216

  106 var_list: ID endl_opt ',' endl_opt . variable
  108         | ID endl_opt ',' endl_opt . ID

    ID  shift, and go to state 240

    variable  go to state 241


State 217

  110 dimensions: '[' . endl_opt ']'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 242


State 218

   99 variable: ID endl_opt type_mark endl_opt . var_init

    '='  shift, and go to state 195

    var_init  go to state 243


State 219

  111 dimensions_list: dimensions .

    $default  reduce using rule 111 (dimensions_list)


State 220

  102 variable: ID endl_opt type_mark dimensions_list .
  103         | ID endl_opt type_mark dimensions_list . endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'
  112 dimensions_list: dimensions_list . dimensions

    ENDL  shift, and go to state 41
    '['   shift, and go to state 217

    ENDL      [reduce using rule 102 (variable)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 102 (variable)

    endl        go to state 42
    endl_opt    go to state 244
    dimensions  go to state 245

    shift/reduce conflict on token ENDL:
      102 variable: ID endl_opt type_mark dimensions_list .
        5 endl: . ENDL
      First example: modifier endl_opt ID endl_opt type_mark dimensions_list . ENDL '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                   $end
               `-> 1: stmt
                      `-> 83: modifier endl_opt variable                                                                                                        stmt_sep
                                                `-> 103: ID endl_opt type_mark dimensions_list endl_opt             '=' endl_opt '[' endl_opt expr_list_opt ']'
                                                                                               `-> 8: endl
                                                                                                      `-> 5: . ENDL
      Second example: modifier endl_opt ID endl_opt type_mark dimensions_list . ENDL $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                      $end
               `-> 1: program_elem
                      `-> 3: stmt
                             `-> 83: modifier endl_opt variable                                         stmt_sep
                                                       `-> 102: ID endl_opt type_mark dimensions_list . `-> 10: endl
                                                                                                                `-> 5: ENDL



State 221

  105 var_list: variable endl_opt ',' endl_opt . variable
  107         | variable endl_opt ',' endl_opt . ID

    ID  shift, and go to state 246

    variable  go to state 247


State 222

  109 var_list: var_list endl_opt ',' endl_opt . variable

    ID  shift, and go to state 248

    variable  go to state 249


State 223

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt . expr endl_opt ')'

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 250


State 224

   51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt
   52        | IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 251


State 225

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 252


State 226

   53 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 253


State 227

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' . endl_opt '{' endl_opt case_list '}' endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 254


State 228

   67 catch_clause: CATCH endl_opt '(' . endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   68             | CATCH endl_opt '(' . endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 255


State 229

  113 param: ID . endl_opt type_mark
  114      | ID . endl_opt '?' endl_opt type_mark

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 256


State 230

  115 param_list: param .

    $default  reduce using rule 115 (param_list)


State 231

  116 param_list: param_list . endl_opt ',' endl_opt param
  117 param_list_0_or_more: '(' endl_opt param_list . endl_opt ')'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 257


State 232

   65 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 258


State 233

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 259


State 234

  121 id_list_init: ID . endl_opt var_init
  123 id_list: ID .

    ENDL  shift, and go to state 41

    ENDL      [reduce using rule 123 (id_list)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 123 (id_list)

    endl      go to state 42
    endl_opt  go to state 260

    shift/reduce conflict on token ENDL:
      123 id_list: ID .
        5 endl: . ENDL
      First example: ENUM endl_opt ID endl_opt '{' endl_opt ID . ENDL var_init endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                      $end
               `-> 1: program_elem
                      `-> 3: stmt
                             `-> 86: enum_declaration
                                     `-> 120: ENUM endl_opt ID endl_opt '{' endl_opt id_list_init                              endl_opt '}'
                                                                                     `-> 121: ID endl_opt             var_init
                                                                                                 `-> 8: endl
                                                                                                        `-> 5: . ENDL
      Second example: ENUM endl_opt ID endl_opt '{' endl_opt ID . ENDL '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                    $end
               `-> 1: program_elem
                      `-> 3: stmt
                             `-> 86: enum_declaration
                                     `-> 119: ENUM endl_opt ID endl_opt '{' endl_opt id_list       endl_opt           '}'
                                                                                     `-> 123: ID . `-> 8: endl
                                                                                                          `-> 5: ENDL



State 235

  120 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_init . endl_opt '}'
  122 id_list_init: id_list_init . endl_opt ',' endl_opt ID endl_opt var_init

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 261


State 236

  119 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list . endl_opt '}'
  124 id_list: id_list . endl_opt ',' endl_opt ID

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 262


State 237

   48 expr: expr '?' endl_opt expr endl_opt ':' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 263


State 238

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
  104 var_init: '=' endl_opt expr .

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 104 (var_init)


State 239

   98 type_mark: ':' endl_opt type .

    $default  reduce using rule 98 (type_mark)


State 240

   99 variable: ID . endl_opt type_mark endl_opt var_init
  100         | ID . endl_opt type_mark
  101         | ID . endl_opt var_init
  102         | ID . endl_opt type_mark dimensions_list
  103         | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'
  108 var_list: ID endl_opt ',' endl_opt ID .

    ENDL  shift, and go to state 41

    ';'       reduce using rule 108 (var_list)
    ENDL      [reduce using rule 108 (var_list)]
    ','       reduce using rule 108 (var_list)
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 264

    shift/reduce conflict on token ENDL:
      108 var_list: ID endl_opt ',' endl_opt ID .
        5 endl: . ENDL
      First example: modifier endl_opt ID endl_opt ',' endl_opt ID . ENDL type_mark endl_opt var_init stmt_sep $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                 $end
               `-> 1: stmt
                      `-> 85: modifier endl_opt var_list                                                                                      stmt_sep
                                                `-> 106: ID endl_opt ',' endl_opt variable
                                                                                  `-> 99: ID endl_opt             type_mark endl_opt var_init
                                                                                             `-> 8: endl
                                                                                                    `-> 5: . ENDL
      Second example: modifier endl_opt ID endl_opt ',' endl_opt ID . ENDL $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                            $end
               `-> 1: program_elem
                      `-> 3: stmt
                             `-> 85: modifier endl_opt var_list                               stmt_sep
                                                       `-> 108: ID endl_opt ',' endl_opt ID . `-> 10: endl
                                                                                                      `-> 5: ENDL



State 241

  106 var_list: ID endl_opt ',' endl_opt variable .

    $default  reduce using rule 106 (var_list)


State 242

  110 dimensions: '[' endl_opt . ']'

    ']'  shift, and go to state 265


State 243

   99 variable: ID endl_opt type_mark endl_opt var_init .

    $default  reduce using rule 99 (variable)


State 244

  103 variable: ID endl_opt type_mark dimensions_list endl_opt . '=' endl_opt '[' endl_opt expr_list_opt ']'

    '='  shift, and go to state 266


State 245

  112 dimensions_list: dimensions_list dimensions .

    $default  reduce using rule 112 (dimensions_list)


State 246

   99 variable: ID . endl_opt type_mark endl_opt var_init
  100         | ID . endl_opt type_mark
  101         | ID . endl_opt var_init
  102         | ID . endl_opt type_mark dimensions_list
  103         | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'
  107 var_list: variable endl_opt ',' endl_opt ID .

    ENDL  shift, and go to state 41

    ';'       reduce using rule 107 (var_list)
    ENDL      [reduce using rule 107 (var_list)]
    ','       reduce using rule 107 (var_list)
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 264

    shift/reduce conflict on token ENDL:
      107 var_list: variable endl_opt ',' endl_opt ID .
        5 endl: . ENDL
      First example: modifier endl_opt variable endl_opt ',' endl_opt ID . ENDL type_mark endl_opt var_init stmt_sep $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                       $end
               `-> 1: stmt
                      `-> 85: modifier endl_opt var_list                                                                                            stmt_sep
                                                `-> 105: variable endl_opt ',' endl_opt variable
                                                                                        `-> 99: ID endl_opt             type_mark endl_opt var_init
                                                                                                   `-> 8: endl
                                                                                                          `-> 5: . ENDL
      Second example: modifier endl_opt variable endl_opt ',' endl_opt ID . ENDL $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                  $end
               `-> 1: program_elem
                      `-> 3: stmt
                             `-> 85: modifier endl_opt var_list                                     stmt_sep
                                                       `-> 107: variable endl_opt ',' endl_opt ID . `-> 10: endl
                                                                                                            `-> 5: ENDL



State 247

  105 var_list: variable endl_opt ',' endl_opt variable .

    $default  reduce using rule 105 (var_list)


State 248

   99 variable: ID . endl_opt type_mark endl_opt var_init
  100         | ID . endl_opt type_mark
  101         | ID . endl_opt var_init
  102         | ID . endl_opt type_mark dimensions_list
  103         | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 264


State 249

  109 var_list: var_list endl_opt ',' endl_opt variable .

    $default  reduce using rule 109 (var_list)


State 250

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr . endl_opt ')'

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 267


State 251

   51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt
   52        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt ELSE endl_opt stmt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt              go to state 268
    modifier          go to state 38
    enum_declaration  go to state 39


State 252

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 269


State 253

   53 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt              go to state 270
    modifier          go to state 38
    enum_declaration  go to state 39


State 254

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt . '{' endl_opt case_list '}' endl_opt

    '{'  shift, and go to state 271


State 255

   67 catch_clause: CATCH endl_opt '(' endl_opt . ID endl_opt ')' endl_opt block_statement endl_opt
   68             | CATCH endl_opt '(' endl_opt . ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ID  shift, and go to state 272


State 256

  113 param: ID endl_opt . type_mark
  114      | ID endl_opt . '?' endl_opt type_mark

    '?'  shift, and go to state 273
    ':'  shift, and go to state 196

    type_mark  go to state 274


State 257

  116 param_list: param_list endl_opt . ',' endl_opt param
  117 param_list_0_or_more: '(' endl_opt param_list endl_opt . ')'

    ')'  shift, and go to state 275
    ','  shift, and go to state 276


State 258

   65 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    $default  reduce using rule 71 (stmt_list_opt)

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt_list_opt     go to state 277
    stmt_list         go to state 108
    stmt              go to state 109
    modifier          go to state 38
    enum_declaration  go to state 39


State 259

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt . '{' endl_opt stmt_list_opt '}'

    '{'  shift, and go to state 278


State 260

  121 id_list_init: ID endl_opt . var_init

    '='  shift, and go to state 195

    var_init  go to state 279


State 261

  120 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_init endl_opt . '}'
  122 id_list_init: id_list_init endl_opt . ',' endl_opt ID endl_opt var_init

    ','  shift, and go to state 280
    '}'  shift, and go to state 281


State 262

  119 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt . '}'
  124 id_list: id_list endl_opt . ',' endl_opt ID

    ','  shift, and go to state 282
    '}'  shift, and go to state 283


State 263

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   48     | expr '?' endl_opt expr endl_opt ':' endl_opt expr .
   49     | expr . '[' endl_opt expr endl_opt ']'

    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 48 (expr)


State 264

   99 variable: ID endl_opt . type_mark endl_opt var_init
  100         | ID endl_opt . type_mark
  101         | ID endl_opt . var_init
  102         | ID endl_opt . type_mark dimensions_list
  103         | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'

    '='  shift, and go to state 195
    ':'  shift, and go to state 196

    type_mark  go to state 198
    var_init   go to state 199


State 265

  110 dimensions: '[' endl_opt ']' .

    $default  reduce using rule 110 (dimensions)


State 266

  103 variable: ID endl_opt type_mark dimensions_list endl_opt '=' . endl_opt '[' endl_opt expr_list_opt ']'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 284


State 267

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt . ')'

    ')'  shift, and go to state 285


State 268

   51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .
   52        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt stmt

    ELSE  shift, and go to state 286

    ELSE      [reduce using rule 51 (if_stmt)]
    $default  reduce using rule 51 (if_stmt)

    shift/reduce conflict on token ELSE:
       51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .
       52 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt stmt
      First example: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt stmt $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                         $end
               `-> 1: program_elem
                      `-> 3: stmt
                             `-> 76: if_stmt
                                     `-> 51: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
                                                                                                 `-> 76: if_stmt
                                                                                                         `-> 52: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt stmt
      Second example: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt stmt $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                         $end
               `-> 1: program_elem
                      `-> 3: stmt
                             `-> 76: if_stmt
                                     `-> 52: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt                                                                       ELSE endl_opt stmt
                                                                                                 `-> 76: if_stmt
                                                                                                         `-> 51: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .



State 269

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 287


State 270

   53 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 53 (while_stmt)


State 271

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' . endl_opt case_list '}' endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 288


State 272

   67 catch_clause: CATCH endl_opt '(' endl_opt ID . endl_opt ')' endl_opt block_statement endl_opt
   68             | CATCH endl_opt '(' endl_opt ID . endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 289


State 273

  114 param: ID endl_opt '?' . endl_opt type_mark

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 290


State 274

  113 param: ID endl_opt type_mark .

    $default  reduce using rule 113 (param)


State 275

  117 param_list_0_or_more: '(' endl_opt param_list endl_opt ')' .

    $default  reduce using rule 117 (param_list_0_or_more)


State 276

  116 param_list: param_list endl_opt ',' . endl_opt param

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 291


State 277

   65 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 292


State 278

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 293


State 279

  121 id_list_init: ID endl_opt var_init .

    $default  reduce using rule 121 (id_list_init)


State 280

  122 id_list_init: id_list_init endl_opt ',' . endl_opt ID endl_opt var_init

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 294


State 281

  120 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_init endl_opt '}' .

    $default  reduce using rule 120 (enum_declaration)


State 282

  124 id_list: id_list endl_opt ',' . endl_opt ID

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 295


State 283

  119 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}' .

    $default  reduce using rule 119 (enum_declaration)


State 284

  103 variable: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt . '[' endl_opt expr_list_opt ']'

    '['  shift, and go to state 296


State 285

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')' .

    $default  reduce using rule 54 (do_while_stmt)


State 286

   52 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE . endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 297


State 287

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 298


State 288

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt . case_list '}' endl_opt

    DEFAULT  shift, and go to state 299
    CASE     shift, and go to state 300

    case_list  go to state 301
    case_stmt  go to state 302


State 289

   67 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt . ')' endl_opt block_statement endl_opt
   68             | CATCH endl_opt '(' endl_opt ID endl_opt . ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ':'  shift, and go to state 303
    ')'  shift, and go to state 304


State 290

  114 param: ID endl_opt '?' endl_opt . type_mark

    ':'  shift, and go to state 196

    type_mark  go to state 305


State 291

  116 param_list: param_list endl_opt ',' endl_opt . param

    ID  shift, and go to state 229

    param  go to state 306


State 292

   65 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 65 (function_declaration)


State 293

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    $default  reduce using rule 71 (stmt_list_opt)

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt_list_opt     go to state 307
    stmt_list         go to state 108
    stmt              go to state 109
    modifier          go to state 38
    enum_declaration  go to state 39


State 294

  122 id_list_init: id_list_init endl_opt ',' endl_opt . ID endl_opt var_init

    ID  shift, and go to state 308


State 295

  124 id_list: id_list endl_opt ',' endl_opt . ID

    ID  shift, and go to state 309


State 296

  103 variable: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' . endl_opt expr_list_opt ']'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 310


State 297

   52 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt . stmt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt              go to state 311
    modifier          go to state 38
    enum_declaration  go to state 39


State 298

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 312


State 299

   60 case_stmt: DEFAULT . endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 313


State 300

   59 case_stmt: CASE . endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 314


State 301

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list . '}' endl_opt
   58 case_list: case_list . case_stmt

    DEFAULT  shift, and go to state 299
    CASE     shift, and go to state 300
    '}'      shift, and go to state 315

    case_stmt  go to state 316


State 302

   57 case_list: case_stmt .

    $default  reduce using rule 57 (case_list)


State 303

   68 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' . endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 317


State 304

   67 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' . endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 318


State 305

  114 param: ID endl_opt '?' endl_opt type_mark .

    $default  reduce using rule 114 (param)


State 306

  116 param_list: param_list endl_opt ',' endl_opt param .

    $default  reduce using rule 116 (param_list)


State 307

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 319


State 308

  122 id_list_init: id_list_init endl_opt ',' endl_opt ID . endl_opt var_init

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 320


State 309

  124 id_list: id_list endl_opt ',' endl_opt ID .

    $default  reduce using rule 124 (id_list)


State 310

  103 variable: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt . expr_list_opt ']'

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 321
    expr_list_opt  go to state 322
    expr           go to state 323


State 311

   52 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt .

    $default  reduce using rule 52 (if_stmt)


State 312

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 324


State 313

   60 case_stmt: DEFAULT endl_opt . ':' endl_opt stmt_list_opt break_opt

    ':'  shift, and go to state 325


State 314

   59 case_stmt: CASE endl_opt . expr endl_opt ':' endl_opt stmt_list_opt break_opt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 326


State 315

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 327


State 316

   58 case_list: case_list case_stmt .

    $default  reduce using rule 58 (case_list)


State 317

   68 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt . error_type endl_opt ')' endl_opt block_statement endl_opt

    UNKNOWN  shift, and go to state 328
    ANY      shift, and go to state 329

    error_type  go to state 330


State 318

   67 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt . block_statement endl_opt

    '{'  shift, and go to state 24

    block_statement  go to state 331


State 319

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 64 (function_declaration)


State 320

  122 id_list_init: id_list_init endl_opt ',' endl_opt ID endl_opt . var_init

    '='  shift, and go to state 195

    var_init  go to state 332


State 321

   12 expr_list: expr_list . endl_opt ',' endl_opt expr
   14 expr_list_opt: expr_list . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 333


State 322

  103 variable: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt . ']'

    ']'  shift, and go to state 334


State 323

   11 expr_list: expr .
   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 11 (expr_list)


State 324

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 335


State 325

   60 case_stmt: DEFAULT endl_opt ':' . endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 336


State 326

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   59 case_stmt: CASE endl_opt expr . endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 337


State 327

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt .

    $default  reduce using rule 56 (switch_stmt)


State 328

   69 error_type: UNKNOWN .

    $default  reduce using rule 69 (error_type)


State 329

   70 error_type: ANY .

    $default  reduce using rule 70 (error_type)


State 330

   68 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type . endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 338


State 331

   67 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 339


State 332

  122 id_list_init: id_list_init endl_opt ',' endl_opt ID endl_opt var_init .

    $default  reduce using rule 122 (id_list_init)


State 333

   12 expr_list: expr_list endl_opt . ',' endl_opt expr
   14 expr_list_opt: expr_list endl_opt .

    ','  shift, and go to state 340

    $default  reduce using rule 14 (expr_list_opt)


State 334

  103 variable: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' .

    $default  reduce using rule 103 (variable)


State 335

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ')' endl_opt stmt

    ')'  shift, and go to state 341


State 336

   60 case_stmt: DEFAULT endl_opt ':' endl_opt . stmt_list_opt break_opt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    $default  reduce using rule 71 (stmt_list_opt)

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt_list_opt     go to state 342
    stmt_list         go to state 108
    stmt              go to state 109
    modifier          go to state 38
    enum_declaration  go to state 39


State 337

   59 case_stmt: CASE endl_opt expr endl_opt . ':' endl_opt stmt_list_opt break_opt

    ':'  shift, and go to state 343


State 338

   68 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt . ')' endl_opt block_statement endl_opt

    ')'  shift, and go to state 344


State 339

   67 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt .

    $default  reduce using rule 67 (catch_clause)


State 340

   12 expr_list: expr_list endl_opt ',' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 345


State 341

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' . endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 346


State 342

   60 case_stmt: DEFAULT endl_opt ':' endl_opt stmt_list_opt . break_opt

    BREAK  shift, and go to state 347

    $default  reduce using rule 61 (break_opt)

    break_opt  go to state 348


State 343

   59 case_stmt: CASE endl_opt expr endl_opt ':' . endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 349


State 344

   68 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' . endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 350


State 345

   12 expr_list: expr_list endl_opt ',' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 351


State 346

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt . stmt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt              go to state 352
    modifier          go to state 38
    enum_declaration  go to state 39


State 347

   62 break_opt: BREAK . stmt_sep

    ';'   shift, and go to state 61
    ENDL  shift, and go to state 41

    endl      go to state 86
    stmt_sep  go to state 353


State 348

   60 case_stmt: DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt .

    $default  reduce using rule 60 (case_stmt)


State 349

   59 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt . stmt_list_opt break_opt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    $default  reduce using rule 71 (stmt_list_opt)

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt_list_opt     go to state 354
    stmt_list         go to state 108
    stmt              go to state 109
    modifier          go to state 38
    enum_declaration  go to state 39


State 350

   68 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt . block_statement endl_opt

    '{'  shift, and go to state 24

    block_statement  go to state 355


State 351

   12 expr_list: expr_list endl_opt ',' endl_opt expr .
   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 12 (expr_list)


State 352

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 55 (for_stmt)


State 353

   62 break_opt: BREAK stmt_sep .

    $default  reduce using rule 62 (break_opt)


State 354

   59 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt . break_opt

    BREAK  shift, and go to state 347

    $default  reduce using rule 61 (break_opt)

    break_opt  go to state 356


State 355

   68 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 357


State 356

   59 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt .

    $default  reduce using rule 59 (case_stmt)


State 357

   68 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt .

    $default  reduce using rule 68 (catch_clause)
