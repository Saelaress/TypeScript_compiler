Terminals unused in grammar

    DELETE
    EXPORT
    PUBLIC
    PROTECTED
    PRIVATE
    READONLY
    OF
    IN
    CONTINUE
    INCREMENT
    DECREMENT
    DECLARE
    IS
    NEW
    '.'


State 278 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_elem
    2        | program program_elem

    3 program_elem: stmt
    4             | function_declaration

    5 endl: ENDL
    6     | endl ENDL

    7 endl_opt: %empty
    8         | endl

    9 stmt_sep: ';'
   10         | endl

   11 expr_list: expr
   12          | expr_list endl_opt ',' endl_opt expr

   13 expr_list_opt: %empty
   14              | expr_list endl_opt

   15 expr: expr POST_DECREMENT
   16     | PREF_DECREMENT endl_opt expr
   17     | expr POST_INCREMENT
   18     | PREF_INCREMENT endl_opt expr
   19     | expr AS endl_opt type
   20     | '-' endl_opt expr
   21     | '+' endl_opt expr
   22     | NUMBER_LITERAL
   23     | STRING_LITERAL
   24     | TRUE_LITERAL
   25     | FALSE_LITERAL
   26     | ID
   27     | '(' endl_opt expr ')'
   28     | expr '+' endl_opt expr
   29     | expr '-' endl_opt expr
   30     | expr '*' endl_opt expr
   31     | expr '/' endl_opt expr
   32     | expr '%' endl_opt expr
   33     | expr '<' endl_opt expr
   34     | expr '>' endl_opt expr
   35     | expr LESS_OR_EQUAL endl_opt expr
   36     | expr GREATER_OR_EQUAL endl_opt expr
   37     | expr EQUALS endl_opt expr
   38     | expr NOT_EQUALS endl_opt expr
   39     | expr '=' endl_opt expr
   40     | expr PLUS_ASSIGN endl_opt expr
   41     | expr MINUS_ASSIGN endl_opt expr
   42     | expr MUL_ASSIGN endl_opt expr
   43     | expr DIV_ASSIGN endl_opt expr
   44     | expr MOD_ASSIGN endl_opt expr
   45     | NOT endl_opt expr
   46     | expr AND endl_opt expr
   47     | expr OR endl_opt expr
   48     | expr '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr '[' endl_opt expr endl_opt ']'

   50 block_statement: '{' endl_opt stmt_list_opt '}'

   51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
   52        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

   53 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')'

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list_break '}' endl_opt

   57 case_list: case_stmt
   58          | case_list case_stmt

   59 case_list_break: case_stmt_break
   60                | case_list case_stmt_break

   61 case_stmt_break: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt_special
   62                | DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt_special

   63 break_opt_special: %empty
   64                  | BREAK endl
   65                  | BREAK ';' endl_opt
   66                  | BREAK

   67 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt
   68          | DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt

   69 break_opt: %empty
   70          | BREAK endl
   71          | BREAK ';' endl_opt

   72 return_statement: RETURN expr stmt_sep

   73 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   74                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

   75 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause

   76 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   77             | CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

   78 error_type: UNKNOWN
   79           | ANY

   80 stmt_list_opt: %empty
   81              | stmt_list

   82 stmt_list: stmt
   83          | stmt_list stmt

   84 stmt: expr stmt_sep
   85     | if_stmt
   86     | while_stmt
   87     | for_stmt
   88     | do_while_stmt stmt_sep
   89     | switch_stmt
   90     | try_catch_block
   91     | block_statement endl_opt
   92     | modifier endl_opt variable_stmt
   93     | modifier endl_opt ID stmt_sep
   94     | modifier endl_opt var_list_stmt
   95     | return_statement
   96     | enum_declaration
   97     | ';' endl_opt

   98 modifier: LET
   99         | CONST

  100 type: NUMBER
  101     | STRING
  102     | BOOLEAN
  103     | ANY
  104     | UNKNOWN
  105     | VOID
  106     | ID

  107 type_mark: ':' endl_opt type

  108 variable_endl: ID endl_opt type_mark endl_opt var_init endl_opt
  109              | ID endl_opt type_mark endl_opt
  110              | ID endl_opt var_init endl_opt
  111              | ID endl_opt type_mark dimensions_list endl_opt
  112              | ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt

  113 variable_stmt: ID endl_opt type_mark endl_opt var_init stmt_sep
  114              | ID endl_opt type_mark stmt_sep
  115              | ID endl_opt var_init stmt_sep
  116              | ID endl_opt type_mark dimensions_list stmt_sep
  117              | ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

  118 var_init: '=' endl_opt expr

  119 var_list: variable_endl ',' endl_opt variable_endl
  120         | ID endl_opt ',' endl_opt variable_endl
  121         | variable_endl ',' endl_opt ID endl_opt
  122         | ID endl_opt ',' endl_opt ID endl_opt
  123         | var_list ',' endl_opt variable_endl

  124 var_list_stmt: variable_endl ',' endl_opt variable_stmt
  125              | ID endl_opt ',' endl_opt variable_stmt
  126              | variable_endl ',' endl_opt ID stmt_sep
  127              | ID endl_opt ',' endl_opt ID stmt_sep
  128              | var_list ',' endl_opt variable_stmt

  129 dimensions: '[' endl_opt ']'

  130 dimensions_list: dimensions
  131                | dimensions_list dimensions

  132 param: ID endl_opt type_mark
  133      | ID endl_opt '?' endl_opt type_mark

  134 param_list: param
  135           | param_list endl_opt ',' endl_opt param

  136 param_list_0_or_more: '(' endl_opt param_list endl_opt ')'
  137                     | '(' ')'

  138 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_endl '}'
  139                 | ENUM endl_opt ID endl_opt '{' endl_opt id_list_init endl_opt '}'

  140 id_list_init: ID endl_opt var_init
  141             | id_list_init endl_opt ',' endl_opt ID endl_opt var_init

  142 id_list_endl: ID endl_opt
  143             | ID endl_opt ',' endl_opt ID endl_opt


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 32
    '(' (40) 27 51 52 53 54 55 56 76 77 136 137
    ')' (41) 27 51 52 53 54 55 56 76 77 136 137
    '*' (42) 30
    '+' (43) 21 28
    ',' (44) 12 119 120 121 122 123 124 125 126 127 128 135 141 143
    '-' (45) 20 29
    '.' (46)
    '/' (47) 31
    ':' (58) 48 61 62 67 68 77 107
    ';' (59) 9 55 65 71 97
    '<' (60) 33
    '=' (61) 39 112 117 118
    '>' (62) 34
    '?' (63) 48 133
    '[' (91) 49 112 117 129
    ']' (93) 49 112 117 129
    '{' (123) 50 56 73 74 138 139
    '}' (125) 50 56 73 74 138 139
    error (256)
    RETURN (258) 72
    DELETE (259)
    EXPORT (260)
    PUBLIC (261)
    PROTECTED (262)
    PRIVATE (263)
    READONLY (264)
    DO (265) 54
    IF (266) 51 52
    ELSE (267) 52
    FOR (268) 55
    OF (269)
    IN (270)
    WHILE (271) 53 54
    BREAK (272) 64 65 66 70 71
    CONTINUE (273)
    DEFAULT (274) 62 68
    SWITCH (275) 56
    CASE (276) 61 67
    TRY (277) 75
    CATCH (278) 76 77
    INCREMENT (279)
    DECREMENT (280)
    LET (281) 98
    CONST (282) 99
    FUNC (283) 73 74
    DECLARE (284)
    UNKNOWN (285) 78 104
    ANY (286) 79 103
    NUMBER (287) 100
    STRING (288) 101
    VOID (289) 105
    BOOLEAN (290) 102
    ENUM (291) 138 139
    NUMBER_LITERAL (292) 22
    STRING_LITERAL (293) 23
    TRUE_LITERAL (294) 24
    FALSE_LITERAL (295) 25
    ID (296) 26 73 74 76 77 93 106 108 109 110 111 112 113 114 115 116 117 120 121 122 125 126 127 132 133 138 139 140 141 142 143
    ENDL (297) 5 6
    PLUS_ASSIGN (298) 40
    MINUS_ASSIGN (299) 41
    MUL_ASSIGN (300) 42
    DIV_ASSIGN (301) 43
    MOD_ASSIGN (302) 44
    OR (303) 47
    AND (304) 46
    EQUALS (305) 37
    NOT_EQUALS (306) 38
    LESS_OR_EQUAL (307) 35
    GREATER_OR_EQUAL (308) 36
    IS (309)
    AS (310) 19
    NEW (311)
    PREF_INCREMENT (312) 18
    PREF_DECREMENT (313) 16
    POST_INCREMENT (314) 17
    POST_DECREMENT (315) 15
    NOT (316) 45
    UPLUS (317)
    UMINUS (318)


Nonterminals, with rules where they appear

    $accept (83)
        on left: 0
    program (84)
        on left: 1 2
        on right: 0 2
    program_elem (85)
        on left: 3 4
        on right: 1 2
    endl (86)
        on left: 5 6
        on right: 6 8 10 64 70
    endl_opt (87)
        on left: 7 8
        on right: 12 14 16 18 19 20 21 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 61 62 65 67 68 71 73 74 75 76 77 91 92 93 94 97 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 132 133 135 136 138 139 140 141 142 143
    stmt_sep (88)
        on left: 9 10
        on right: 72 84 88 93 113 114 115 116 117 126 127
    expr_list (89)
        on left: 11 12
        on right: 12 14
    expr_list_opt (90)
        on left: 13 14
        on right: 112 117
    expr (91)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
        on right: 11 12 15 16 17 18 19 20 21 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 51 52 53 54 55 56 61 67 72 84 118
    block_statement (92)
        on left: 50
        on right: 75 76 77 91
    if_stmt (93)
        on left: 51 52
        on right: 85
    while_stmt (94)
        on left: 53
        on right: 86
    do_while_stmt (95)
        on left: 54
        on right: 88
    for_stmt (96)
        on left: 55
        on right: 87
    switch_stmt (97)
        on left: 56
        on right: 89
    case_list (98)
        on left: 57 58
        on right: 58 60
    case_list_break (99)
        on left: 59 60
        on right: 56
    case_stmt_break (100)
        on left: 61 62
        on right: 59 60
    break_opt_special (101)
        on left: 63 64 65 66
        on right: 61 62
    case_stmt (102)
        on left: 67 68
        on right: 57 58
    break_opt (103)
        on left: 69 70 71
        on right: 67 68
    return_statement (104)
        on left: 72
        on right: 95
    function_declaration (105)
        on left: 73 74
        on right: 4
    try_catch_block (106)
        on left: 75
        on right: 90
    catch_clause (107)
        on left: 76 77
        on right: 75
    error_type (108)
        on left: 78 79
        on right: 77
    stmt_list_opt (109)
        on left: 80 81
        on right: 50 61 62 67 68 73 74
    stmt_list (110)
        on left: 82 83
        on right: 81 83
    stmt (111)
        on left: 84 85 86 87 88 89 90 91 92 93 94 95 96 97
        on right: 3 51 52 53 54 55 82 83
    modifier (112)
        on left: 98 99
        on right: 92 93 94
    type (113)
        on left: 100 101 102 103 104 105 106
        on right: 19 107
    type_mark (114)
        on left: 107
        on right: 73 108 109 111 112 113 114 116 117 132 133
    variable_endl (115)
        on left: 108 109 110 111 112
        on right: 119 120 121 123 124 126
    variable_stmt (116)
        on left: 113 114 115 116 117
        on right: 92 124 125 128
    var_init (117)
        on left: 118
        on right: 108 110 113 115 140 141
    var_list (118)
        on left: 119 120 121 122 123
        on right: 123 128
    var_list_stmt (119)
        on left: 124 125 126 127 128
        on right: 94
    dimensions (120)
        on left: 129
        on right: 130 131
    dimensions_list (121)
        on left: 130 131
        on right: 111 112 116 117 131
    param (122)
        on left: 132 133
        on right: 134 135
    param_list (123)
        on left: 134 135
        on right: 135 136
    param_list_0_or_more (124)
        on left: 136 137
        on right: 73 74
    enum_declaration (125)
        on left: 138 139
        on right: 96
    id_list_init (126)
        on left: 140 141
        on right: 139 141
    id_list_endl (127)
        on left: 142 143
        on right: 138


State 0

    0 $accept: . program $end

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    FUNC            shift, and go to state 10
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    program               go to state 25
    program_elem          go to state 26
    expr                  go to state 27
    block_statement       go to state 28
    if_stmt               go to state 29
    while_stmt            go to state 30
    do_while_stmt         go to state 31
    for_stmt              go to state 32
    switch_stmt           go to state 33
    return_statement      go to state 34
    function_declaration  go to state 35
    try_catch_block       go to state 36
    stmt                  go to state 37
    modifier              go to state 38
    enum_declaration      go to state 39


State 1

   72 return_statement: RETURN . expr stmt_sep

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 40


State 2

   54 do_while_stmt: DO . endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 43


State 3

   51 if_stmt: IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
   52        | IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 44


State 4

   55 for_stmt: FOR . endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 45


State 5

   53 while_stmt: WHILE . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 46


State 6

   56 switch_stmt: SWITCH . endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list_break '}' endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 47


State 7

   75 try_catch_block: TRY . endl_opt block_statement endl_opt catch_clause

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 48


State 8

   98 modifier: LET .

    $default  reduce using rule 98 (modifier)


State 9

   99 modifier: CONST .

    $default  reduce using rule 99 (modifier)


State 10

   73 function_declaration: FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   74                     | FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 49


State 11

  138 enum_declaration: ENUM . endl_opt ID endl_opt '{' endl_opt id_list_endl '}'
  139                 | ENUM . endl_opt ID endl_opt '{' endl_opt id_list_init endl_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 50


State 12

   22 expr: NUMBER_LITERAL .

    $default  reduce using rule 22 (expr)


State 13

   23 expr: STRING_LITERAL .

    $default  reduce using rule 23 (expr)


State 14

   24 expr: TRUE_LITERAL .

    $default  reduce using rule 24 (expr)


State 15

   25 expr: FALSE_LITERAL .

    $default  reduce using rule 25 (expr)


State 16

   26 expr: ID .

    $default  reduce using rule 26 (expr)


State 17

   97 stmt: ';' . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 51


State 18

   21 expr: '+' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 52


State 19

   20 expr: '-' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 53


State 20

   18 expr: PREF_INCREMENT . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 54


State 21

   16 expr: PREF_DECREMENT . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 55


State 22

   45 expr: NOT . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 56


State 23

   27 expr: '(' . endl_opt expr ')'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 57


State 24

   50 block_statement: '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 58


State 25

    0 $accept: program . $end
    2 program: program . program_elem

    $end            shift, and go to state 59
    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    FUNC            shift, and go to state 10
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    program_elem          go to state 60
    expr                  go to state 27
    block_statement       go to state 28
    if_stmt               go to state 29
    while_stmt            go to state 30
    do_while_stmt         go to state 31
    for_stmt              go to state 32
    switch_stmt           go to state 33
    return_statement      go to state 34
    function_declaration  go to state 35
    try_catch_block       go to state 36
    stmt                  go to state 37
    modifier              go to state 38
    enum_declaration      go to state 39


State 26

    1 program: program_elem .

    $default  reduce using rule 1 (program)


State 27

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   84 stmt: expr . stmt_sep

    ';'               shift, and go to state 61
    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    endl      go to state 86
    stmt_sep  go to state 87


State 28

   91 stmt: block_statement . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 88


State 29

   85 stmt: if_stmt .

    $default  reduce using rule 85 (stmt)


State 30

   86 stmt: while_stmt .

    $default  reduce using rule 86 (stmt)


State 31

   88 stmt: do_while_stmt . stmt_sep

    ';'   shift, and go to state 61
    ENDL  shift, and go to state 41

    endl      go to state 86
    stmt_sep  go to state 89


State 32

   87 stmt: for_stmt .

    $default  reduce using rule 87 (stmt)


State 33

   89 stmt: switch_stmt .

    $default  reduce using rule 89 (stmt)


State 34

   95 stmt: return_statement .

    $default  reduce using rule 95 (stmt)


State 35

    4 program_elem: function_declaration .

    $default  reduce using rule 4 (program_elem)


State 36

   90 stmt: try_catch_block .

    $default  reduce using rule 90 (stmt)


State 37

    3 program_elem: stmt .

    $default  reduce using rule 3 (program_elem)


State 38

   92 stmt: modifier . endl_opt variable_stmt
   93     | modifier . endl_opt ID stmt_sep
   94     | modifier . endl_opt var_list_stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 90


State 39

   96 stmt: enum_declaration .

    $default  reduce using rule 96 (stmt)


State 40

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   72 return_statement: RETURN expr . stmt_sep

    ';'               shift, and go to state 61
    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    endl      go to state 86
    stmt_sep  go to state 91


State 41

    5 endl: ENDL .

    $default  reduce using rule 5 (endl)


State 42

    6 endl: endl . ENDL
    8 endl_opt: endl .

    ENDL  shift, and go to state 92

    $default  reduce using rule 8 (endl_opt)


State 43

   54 do_while_stmt: DO endl_opt . stmt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt              go to state 93
    modifier          go to state 38
    enum_declaration  go to state 39


State 44

   51 if_stmt: IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt
   52        | IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    '('  shift, and go to state 94


State 45

   55 for_stmt: FOR endl_opt . '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    '('  shift, and go to state 95


State 46

   53 while_stmt: WHILE endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt

    '('  shift, and go to state 96


State 47

   56 switch_stmt: SWITCH endl_opt . '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list_break '}' endl_opt

    '('  shift, and go to state 97


State 48

   75 try_catch_block: TRY endl_opt . block_statement endl_opt catch_clause

    '{'  shift, and go to state 24

    block_statement  go to state 98


State 49

   73 function_declaration: FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   74                     | FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ID  shift, and go to state 99


State 50

  138 enum_declaration: ENUM endl_opt . ID endl_opt '{' endl_opt id_list_endl '}'
  139                 | ENUM endl_opt . ID endl_opt '{' endl_opt id_list_init endl_opt '}'

    ID  shift, and go to state 100


State 51

   97 stmt: ';' endl_opt .

    $default  reduce using rule 97 (stmt)


State 52

   21 expr: '+' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 101


State 53

   20 expr: '-' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 102


State 54

   18 expr: PREF_INCREMENT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 103


State 55

   16 expr: PREF_DECREMENT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 104


State 56

   45 expr: NOT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 105


State 57

   27 expr: '(' endl_opt . expr ')'

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 106


State 58

   50 block_statement: '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    $default  reduce using rule 80 (stmt_list_opt)

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt_list_opt     go to state 107
    stmt_list         go to state 108
    stmt              go to state 109
    modifier          go to state 38
    enum_declaration  go to state 39


State 59

    0 $accept: program $end .

    $default  accept


State 60

    2 program: program program_elem .

    $default  reduce using rule 2 (program)


State 61

    9 stmt_sep: ';' .

    $default  reduce using rule 9 (stmt_sep)


State 62

   39 expr: expr '=' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 110


State 63

   40 expr: expr PLUS_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 111


State 64

   41 expr: expr MINUS_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 112


State 65

   42 expr: expr MUL_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 113


State 66

   43 expr: expr DIV_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 114


State 67

   44 expr: expr MOD_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 115


State 68

   49 expr: expr '[' . endl_opt expr endl_opt ']'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 116


State 69

   48 expr: expr '?' . endl_opt expr endl_opt ':' endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 117


State 70

   47 expr: expr OR . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 118


State 71

   46 expr: expr AND . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 119


State 72

   37 expr: expr EQUALS . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 120


State 73

   38 expr: expr NOT_EQUALS . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 121


State 74

   33 expr: expr '<' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 122


State 75

   34 expr: expr '>' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 123


State 76

   35 expr: expr LESS_OR_EQUAL . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 124


State 77

   36 expr: expr GREATER_OR_EQUAL . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 125


State 78

   19 expr: expr AS . endl_opt type

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 126


State 79

   28 expr: expr '+' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 127


State 80

   29 expr: expr '-' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 128


State 81

   30 expr: expr '*' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 129


State 82

   31 expr: expr '/' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 130


State 83

   32 expr: expr '%' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 131


State 84

   17 expr: expr POST_INCREMENT .

    $default  reduce using rule 17 (expr)


State 85

   15 expr: expr POST_DECREMENT .

    $default  reduce using rule 15 (expr)


State 86

    6 endl: endl . ENDL
   10 stmt_sep: endl .

    ENDL  shift, and go to state 92

    $default  reduce using rule 10 (stmt_sep)


State 87

   84 stmt: expr stmt_sep .

    $default  reduce using rule 84 (stmt)


State 88

   91 stmt: block_statement endl_opt .

    $default  reduce using rule 91 (stmt)


State 89

   88 stmt: do_while_stmt stmt_sep .

    $default  reduce using rule 88 (stmt)


State 90

   92 stmt: modifier endl_opt . variable_stmt
   93     | modifier endl_opt . ID stmt_sep
   94     | modifier endl_opt . var_list_stmt

    ID  shift, and go to state 132

    variable_endl  go to state 133
    variable_stmt  go to state 134
    var_list       go to state 135
    var_list_stmt  go to state 136


State 91

   72 return_statement: RETURN expr stmt_sep .

    $default  reduce using rule 72 (return_statement)


State 92

    6 endl: endl ENDL .

    $default  reduce using rule 6 (endl)


State 93

   54 do_while_stmt: DO endl_opt stmt . WHILE endl_opt '(' endl_opt expr endl_opt ')'

    WHILE  shift, and go to state 137


State 94

   51 if_stmt: IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt
   52        | IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 138


State 95

   55 for_stmt: FOR endl_opt '(' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 139


State 96

   53 while_stmt: WHILE endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 140


State 97

   56 switch_stmt: SWITCH endl_opt '(' . endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list_break '}' endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 141


State 98

   75 try_catch_block: TRY endl_opt block_statement . endl_opt catch_clause

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 142


State 99

   73 function_declaration: FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   74                     | FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 143


State 100

  138 enum_declaration: ENUM endl_opt ID . endl_opt '{' endl_opt id_list_endl '}'
  139                 | ENUM endl_opt ID . endl_opt '{' endl_opt id_list_init endl_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 144


State 101

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   21     | '+' endl_opt expr .
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    $default  reduce using rule 21 (expr)


State 102

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   20     | '-' endl_opt expr .
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    $default  reduce using rule 20 (expr)


State 103

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   18     | PREF_INCREMENT endl_opt expr .
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 18 (expr)


State 104

   15 expr: expr . POST_DECREMENT
   16     | PREF_DECREMENT endl_opt expr .
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 16 (expr)


State 105

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   45     | NOT endl_opt expr .
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    $default  reduce using rule 45 (expr)


State 106

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   27     | '(' endl_opt expr . ')'
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85
    ')'               shift, and go to state 145


State 107

   50 block_statement: '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 146


State 108

   81 stmt_list_opt: stmt_list .
   83 stmt_list: stmt_list . stmt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    $default  reduce using rule 81 (stmt_list_opt)

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt              go to state 147
    modifier          go to state 38
    enum_declaration  go to state 39


State 109

   82 stmt_list: stmt .

    $default  reduce using rule 82 (stmt_list)


State 110

   39 expr: expr '=' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 148


State 111

   40 expr: expr PLUS_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 149


State 112

   41 expr: expr MINUS_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 150


State 113

   42 expr: expr MUL_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 151


State 114

   43 expr: expr DIV_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 152


State 115

   44 expr: expr MOD_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 153


State 116

   49 expr: expr '[' endl_opt . expr endl_opt ']'

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 154


State 117

   48 expr: expr '?' endl_opt . expr endl_opt ':' endl_opt expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 155


State 118

   47 expr: expr OR endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 156


State 119

   46 expr: expr AND endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 157


State 120

   37 expr: expr EQUALS endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 158


State 121

   38 expr: expr NOT_EQUALS endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 159


State 122

   33 expr: expr '<' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 160


State 123

   34 expr: expr '>' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 161


State 124

   35 expr: expr LESS_OR_EQUAL endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 162


State 125

   36 expr: expr GREATER_OR_EQUAL endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 163


State 126

   19 expr: expr AS endl_opt . type

    UNKNOWN  shift, and go to state 164
    ANY      shift, and go to state 165
    NUMBER   shift, and go to state 166
    STRING   shift, and go to state 167
    VOID     shift, and go to state 168
    BOOLEAN  shift, and go to state 169
    ID       shift, and go to state 170

    type  go to state 171


State 127

   28 expr: expr '+' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 172


State 128

   29 expr: expr '-' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 173


State 129

   30 expr: expr '*' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 174


State 130

   31 expr: expr '/' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 175


State 131

   32 expr: expr '%' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 176


State 132

   93 stmt: modifier endl_opt ID . stmt_sep
  108 variable_endl: ID . endl_opt type_mark endl_opt var_init endl_opt
  109              | ID . endl_opt type_mark endl_opt
  110              | ID . endl_opt var_init endl_opt
  111              | ID . endl_opt type_mark dimensions_list endl_opt
  112              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  113 variable_stmt: ID . endl_opt type_mark endl_opt var_init stmt_sep
  114              | ID . endl_opt type_mark stmt_sep
  115              | ID . endl_opt var_init stmt_sep
  116              | ID . endl_opt type_mark dimensions_list stmt_sep
  117              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  120 var_list: ID . endl_opt ',' endl_opt variable_endl
  122         | ID . endl_opt ',' endl_opt ID endl_opt
  125 var_list_stmt: ID . endl_opt ',' endl_opt variable_stmt
  127              | ID . endl_opt ',' endl_opt ID stmt_sep

    ';'   shift, and go to state 61
    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 177
    endl_opt  go to state 178
    stmt_sep  go to state 179


State 133

  119 var_list: variable_endl . ',' endl_opt variable_endl
  121         | variable_endl . ',' endl_opt ID endl_opt
  124 var_list_stmt: variable_endl . ',' endl_opt variable_stmt
  126              | variable_endl . ',' endl_opt ID stmt_sep

    ','  shift, and go to state 180


State 134

   92 stmt: modifier endl_opt variable_stmt .

    $default  reduce using rule 92 (stmt)


State 135

  123 var_list: var_list . ',' endl_opt variable_endl
  128 var_list_stmt: var_list . ',' endl_opt variable_stmt

    ','  shift, and go to state 181


State 136

   94 stmt: modifier endl_opt var_list_stmt .

    $default  reduce using rule 94 (stmt)


State 137

   54 do_while_stmt: DO endl_opt stmt WHILE . endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 182


State 138

   51 if_stmt: IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt
   52        | IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 183


State 139

   55 for_stmt: FOR endl_opt '(' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 184


State 140

   53 while_stmt: WHILE endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 185


State 141

   56 switch_stmt: SWITCH endl_opt '(' endl_opt . expr endl_opt ')' endl_opt '{' endl_opt case_list_break '}' endl_opt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 186


State 142

   75 try_catch_block: TRY endl_opt block_statement endl_opt . catch_clause

    CATCH  shift, and go to state 187

    catch_clause  go to state 188


State 143

   73 function_declaration: FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   74                     | FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    '('  shift, and go to state 189

    param_list_0_or_more  go to state 190


State 144

  138 enum_declaration: ENUM endl_opt ID endl_opt . '{' endl_opt id_list_endl '}'
  139                 | ENUM endl_opt ID endl_opt . '{' endl_opt id_list_init endl_opt '}'

    '{'  shift, and go to state 191


State 145

   27 expr: '(' endl_opt expr ')' .

    $default  reduce using rule 27 (expr)


State 146

   50 block_statement: '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 50 (block_statement)


State 147

   83 stmt_list: stmt_list stmt .

    $default  reduce using rule 83 (stmt_list)


State 148

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   39     | expr '=' endl_opt expr .
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 39 (expr)


State 149

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   40     | expr PLUS_ASSIGN endl_opt expr .
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 40 (expr)


State 150

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   41     | expr MINUS_ASSIGN endl_opt expr .
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 41 (expr)


State 151

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   42     | expr MUL_ASSIGN endl_opt expr .
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 42 (expr)


State 152

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   43     | expr DIV_ASSIGN endl_opt expr .
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 43 (expr)


State 153

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   44     | expr MOD_ASSIGN endl_opt expr .
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 44 (expr)


State 154

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   49     | expr '[' endl_opt expr . endl_opt ']'

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 192


State 155

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   48     | expr '?' endl_opt expr . endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 193


State 156

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   47     | expr OR endl_opt expr .
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 47 (expr)


State 157

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   46     | expr AND endl_opt expr .
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 46 (expr)


State 158

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   37     | expr EQUALS endl_opt expr .
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '*'             shift, and go to state 81
    '/'             shift, and go to state 82
    '%'             shift, and go to state 83
    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 37 (expr)


State 159

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   38     | expr NOT_EQUALS endl_opt expr .
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '*'             shift, and go to state 81
    '/'             shift, and go to state 82
    '%'             shift, and go to state 83
    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 38 (expr)


State 160

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   33     | expr '<' endl_opt expr .
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '*'             shift, and go to state 81
    '/'             shift, and go to state 82
    '%'             shift, and go to state 83
    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 33 (expr)


State 161

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   34     | expr '>' endl_opt expr .
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '*'             shift, and go to state 81
    '/'             shift, and go to state 82
    '%'             shift, and go to state 83
    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 34 (expr)


State 162

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   35     | expr LESS_OR_EQUAL endl_opt expr .
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '*'             shift, and go to state 81
    '/'             shift, and go to state 82
    '%'             shift, and go to state 83
    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 35 (expr)


State 163

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   36     | expr GREATER_OR_EQUAL endl_opt expr .
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '*'             shift, and go to state 81
    '/'             shift, and go to state 82
    '%'             shift, and go to state 83
    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 36 (expr)


State 164

  104 type: UNKNOWN .

    $default  reduce using rule 104 (type)


State 165

  103 type: ANY .

    $default  reduce using rule 103 (type)


State 166

  100 type: NUMBER .

    $default  reduce using rule 100 (type)


State 167

  101 type: STRING .

    $default  reduce using rule 101 (type)


State 168

  105 type: VOID .

    $default  reduce using rule 105 (type)


State 169

  102 type: BOOLEAN .

    $default  reduce using rule 102 (type)


State 170

  106 type: ID .

    $default  reduce using rule 106 (type)


State 171

   19 expr: expr AS endl_opt type .

    $default  reduce using rule 19 (expr)


State 172

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   28     | expr '+' endl_opt expr .
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '*'             shift, and go to state 81
    '/'             shift, and go to state 82
    '%'             shift, and go to state 83
    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 28 (expr)


State 173

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   29     | expr '-' endl_opt expr .
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '*'             shift, and go to state 81
    '/'             shift, and go to state 82
    '%'             shift, and go to state 83
    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 29 (expr)


State 174

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   30     | expr '*' endl_opt expr .
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 30 (expr)


State 175

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   31     | expr '/' endl_opt expr .
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 31 (expr)


State 176

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   32     | expr '%' endl_opt expr .
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 84
    POST_DECREMENT  shift, and go to state 85

    $default  reduce using rule 32 (expr)


State 177

    6 endl: endl . ENDL
    8 endl_opt: endl .
   10 stmt_sep: endl .

    ENDL  shift, and go to state 92

    '='       reduce using rule 8 (endl_opt)
    ':'       reduce using rule 8 (endl_opt)
    ','       reduce using rule 8 (endl_opt)
    $default  reduce using rule 10 (stmt_sep)


State 178

  108 variable_endl: ID endl_opt . type_mark endl_opt var_init endl_opt
  109              | ID endl_opt . type_mark endl_opt
  110              | ID endl_opt . var_init endl_opt
  111              | ID endl_opt . type_mark dimensions_list endl_opt
  112              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  113 variable_stmt: ID endl_opt . type_mark endl_opt var_init stmt_sep
  114              | ID endl_opt . type_mark stmt_sep
  115              | ID endl_opt . var_init stmt_sep
  116              | ID endl_opt . type_mark dimensions_list stmt_sep
  117              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  120 var_list: ID endl_opt . ',' endl_opt variable_endl
  122         | ID endl_opt . ',' endl_opt ID endl_opt
  125 var_list_stmt: ID endl_opt . ',' endl_opt variable_stmt
  127              | ID endl_opt . ',' endl_opt ID stmt_sep

    '='  shift, and go to state 194
    ':'  shift, and go to state 195
    ','  shift, and go to state 196

    type_mark  go to state 197
    var_init   go to state 198


State 179

   93 stmt: modifier endl_opt ID stmt_sep .

    $default  reduce using rule 93 (stmt)


State 180

  119 var_list: variable_endl ',' . endl_opt variable_endl
  121         | variable_endl ',' . endl_opt ID endl_opt
  124 var_list_stmt: variable_endl ',' . endl_opt variable_stmt
  126              | variable_endl ',' . endl_opt ID stmt_sep

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 199


State 181

  123 var_list: var_list ',' . endl_opt variable_endl
  128 var_list_stmt: var_list ',' . endl_opt variable_stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 200


State 182

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt . '(' endl_opt expr endl_opt ')'

    '('  shift, and go to state 201


State 183

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   51 if_stmt: IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt
   52        | IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 202


State 184

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   55 for_stmt: FOR endl_opt '(' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 203


State 185

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   53 while_stmt: WHILE endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 204


State 186

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr . endl_opt ')' endl_opt '{' endl_opt case_list_break '}' endl_opt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 205


State 187

   76 catch_clause: CATCH . endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   77             | CATCH . endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 206


State 188

   75 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause .

    $default  reduce using rule 75 (try_catch_block)


State 189

  136 param_list_0_or_more: '(' . endl_opt param_list endl_opt ')'
  137                     | '(' . ')'

    ENDL  shift, and go to state 41
    ')'   shift, and go to state 207

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 208


State 190

   73 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   74                     | FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 209


State 191

  138 enum_declaration: ENUM endl_opt ID endl_opt '{' . endl_opt id_list_endl '}'
  139                 | ENUM endl_opt ID endl_opt '{' . endl_opt id_list_init endl_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 210


State 192

   49 expr: expr '[' endl_opt expr endl_opt . ']'

    ']'  shift, and go to state 211


State 193

   48 expr: expr '?' endl_opt expr endl_opt . ':' endl_opt expr

    ':'  shift, and go to state 212


State 194

  118 var_init: '=' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 213


State 195

  107 type_mark: ':' . endl_opt type

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 214


State 196

  120 var_list: ID endl_opt ',' . endl_opt variable_endl
  122         | ID endl_opt ',' . endl_opt ID endl_opt
  125 var_list_stmt: ID endl_opt ',' . endl_opt variable_stmt
  127              | ID endl_opt ',' . endl_opt ID stmt_sep

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 215


State 197

  108 variable_endl: ID endl_opt type_mark . endl_opt var_init endl_opt
  109              | ID endl_opt type_mark . endl_opt
  111              | ID endl_opt type_mark . dimensions_list endl_opt
  112              | ID endl_opt type_mark . dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  113 variable_stmt: ID endl_opt type_mark . endl_opt var_init stmt_sep
  114              | ID endl_opt type_mark . stmt_sep
  116              | ID endl_opt type_mark . dimensions_list stmt_sep
  117              | ID endl_opt type_mark . dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    ';'   shift, and go to state 61
    ENDL  shift, and go to state 41
    '['   shift, and go to state 216

    $default  reduce using rule 7 (endl_opt)

    endl             go to state 177
    endl_opt         go to state 217
    stmt_sep         go to state 218
    dimensions       go to state 219
    dimensions_list  go to state 220


State 198

  110 variable_endl: ID endl_opt var_init . endl_opt
  115 variable_stmt: ID endl_opt var_init . stmt_sep

    ';'   shift, and go to state 61
    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 177
    endl_opt  go to state 221
    stmt_sep  go to state 222


State 199

  119 var_list: variable_endl ',' endl_opt . variable_endl
  121         | variable_endl ',' endl_opt . ID endl_opt
  124 var_list_stmt: variable_endl ',' endl_opt . variable_stmt
  126              | variable_endl ',' endl_opt . ID stmt_sep

    ID  shift, and go to state 223

    variable_endl  go to state 224
    variable_stmt  go to state 225


State 200

  123 var_list: var_list ',' endl_opt . variable_endl
  128 var_list_stmt: var_list ',' endl_opt . variable_stmt

    ID  shift, and go to state 226

    variable_endl  go to state 227
    variable_stmt  go to state 228


State 201

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' . endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 229


State 202

   51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt
   52        | IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt ELSE endl_opt stmt

    ')'  shift, and go to state 230


State 203

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 231


State 204

   53 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt

    ')'  shift, and go to state 232


State 205

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt . ')' endl_opt '{' endl_opt case_list_break '}' endl_opt

    ')'  shift, and go to state 233


State 206

   76 catch_clause: CATCH endl_opt . '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   77             | CATCH endl_opt . '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    '('  shift, and go to state 234


State 207

  137 param_list_0_or_more: '(' ')' .

    $default  reduce using rule 137 (param_list_0_or_more)


State 208

  136 param_list_0_or_more: '(' endl_opt . param_list endl_opt ')'

    ID  shift, and go to state 235

    param       go to state 236
    param_list  go to state 237


State 209

   73 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   74                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . '{' endl_opt stmt_list_opt '}'

    ':'  shift, and go to state 195
    '{'  shift, and go to state 238

    type_mark  go to state 239


State 210

  138 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt . id_list_endl '}'
  139                 | ENUM endl_opt ID endl_opt '{' endl_opt . id_list_init endl_opt '}'

    ID  shift, and go to state 240

    id_list_init  go to state 241
    id_list_endl  go to state 242


State 211

   49 expr: expr '[' endl_opt expr endl_opt ']' .

    $default  reduce using rule 49 (expr)


State 212

   48 expr: expr '?' endl_opt expr endl_opt ':' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 243


State 213

  118 var_init: '=' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 244


State 214

  107 type_mark: ':' endl_opt . type

    UNKNOWN  shift, and go to state 164
    ANY      shift, and go to state 165
    NUMBER   shift, and go to state 166
    STRING   shift, and go to state 167
    VOID     shift, and go to state 168
    BOOLEAN  shift, and go to state 169
    ID       shift, and go to state 170

    type  go to state 245


State 215

  120 var_list: ID endl_opt ',' endl_opt . variable_endl
  122         | ID endl_opt ',' endl_opt . ID endl_opt
  125 var_list_stmt: ID endl_opt ',' endl_opt . variable_stmt
  127              | ID endl_opt ',' endl_opt . ID stmt_sep

    ID  shift, and go to state 246

    variable_endl  go to state 247
    variable_stmt  go to state 248


State 216

  129 dimensions: '[' . endl_opt ']'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 249


State 217

  108 variable_endl: ID endl_opt type_mark endl_opt . var_init endl_opt
  109              | ID endl_opt type_mark endl_opt .
  113 variable_stmt: ID endl_opt type_mark endl_opt . var_init stmt_sep

    '='  shift, and go to state 194

    $default  reduce using rule 109 (variable_endl)

    var_init  go to state 250


State 218

  114 variable_stmt: ID endl_opt type_mark stmt_sep .

    $default  reduce using rule 114 (variable_stmt)


State 219

  130 dimensions_list: dimensions .

    $default  reduce using rule 130 (dimensions_list)


State 220

  111 variable_endl: ID endl_opt type_mark dimensions_list . endl_opt
  112              | ID endl_opt type_mark dimensions_list . endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  116 variable_stmt: ID endl_opt type_mark dimensions_list . stmt_sep
  117              | ID endl_opt type_mark dimensions_list . endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  131 dimensions_list: dimensions_list . dimensions

    ';'   shift, and go to state 61
    ENDL  shift, and go to state 41
    '['   shift, and go to state 216

    $default  reduce using rule 7 (endl_opt)

    endl        go to state 177
    endl_opt    go to state 251
    stmt_sep    go to state 252
    dimensions  go to state 253


State 221

  110 variable_endl: ID endl_opt var_init endl_opt .

    $default  reduce using rule 110 (variable_endl)


State 222

  115 variable_stmt: ID endl_opt var_init stmt_sep .

    $default  reduce using rule 115 (variable_stmt)


State 223

  108 variable_endl: ID . endl_opt type_mark endl_opt var_init endl_opt
  109              | ID . endl_opt type_mark endl_opt
  110              | ID . endl_opt var_init endl_opt
  111              | ID . endl_opt type_mark dimensions_list endl_opt
  112              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  113 variable_stmt: ID . endl_opt type_mark endl_opt var_init stmt_sep
  114              | ID . endl_opt type_mark stmt_sep
  115              | ID . endl_opt var_init stmt_sep
  116              | ID . endl_opt type_mark dimensions_list stmt_sep
  117              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  121 var_list: variable_endl ',' endl_opt ID . endl_opt
  126 var_list_stmt: variable_endl ',' endl_opt ID . stmt_sep

    ';'   shift, and go to state 61
    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 177
    endl_opt  go to state 254
    stmt_sep  go to state 255


State 224

  119 var_list: variable_endl ',' endl_opt variable_endl .

    $default  reduce using rule 119 (var_list)


State 225

  124 var_list_stmt: variable_endl ',' endl_opt variable_stmt .

    $default  reduce using rule 124 (var_list_stmt)


State 226

  108 variable_endl: ID . endl_opt type_mark endl_opt var_init endl_opt
  109              | ID . endl_opt type_mark endl_opt
  110              | ID . endl_opt var_init endl_opt
  111              | ID . endl_opt type_mark dimensions_list endl_opt
  112              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  113 variable_stmt: ID . endl_opt type_mark endl_opt var_init stmt_sep
  114              | ID . endl_opt type_mark stmt_sep
  115              | ID . endl_opt var_init stmt_sep
  116              | ID . endl_opt type_mark dimensions_list stmt_sep
  117              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 256


State 227

  123 var_list: var_list ',' endl_opt variable_endl .

    $default  reduce using rule 123 (var_list)


State 228

  128 var_list_stmt: var_list ',' endl_opt variable_stmt .

    $default  reduce using rule 128 (var_list_stmt)


State 229

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt . expr endl_opt ')'

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 257


State 230

   51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt
   52        | IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 258


State 231

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 259


State 232

   53 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 260


State 233

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' . endl_opt '{' endl_opt case_list_break '}' endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 261


State 234

   76 catch_clause: CATCH endl_opt '(' . endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   77             | CATCH endl_opt '(' . endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 262


State 235

  132 param: ID . endl_opt type_mark
  133      | ID . endl_opt '?' endl_opt type_mark

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 263


State 236

  134 param_list: param .

    $default  reduce using rule 134 (param_list)


State 237

  135 param_list: param_list . endl_opt ',' endl_opt param
  136 param_list_0_or_more: '(' endl_opt param_list . endl_opt ')'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 264


State 238

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 265


State 239

   73 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 266


State 240

  140 id_list_init: ID . endl_opt var_init
  142 id_list_endl: ID . endl_opt
  143             | ID . endl_opt ',' endl_opt ID endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 267


State 241

  139 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_init . endl_opt '}'
  141 id_list_init: id_list_init . endl_opt ',' endl_opt ID endl_opt var_init

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 268


State 242

  138 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_endl . '}'

    '}'  shift, and go to state 269


State 243

   48 expr: expr '?' endl_opt expr endl_opt ':' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 270


State 244

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
  118 var_init: '=' endl_opt expr .

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 118 (var_init)


State 245

  107 type_mark: ':' endl_opt type .

    $default  reduce using rule 107 (type_mark)


State 246

  108 variable_endl: ID . endl_opt type_mark endl_opt var_init endl_opt
  109              | ID . endl_opt type_mark endl_opt
  110              | ID . endl_opt var_init endl_opt
  111              | ID . endl_opt type_mark dimensions_list endl_opt
  112              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  113 variable_stmt: ID . endl_opt type_mark endl_opt var_init stmt_sep
  114              | ID . endl_opt type_mark stmt_sep
  115              | ID . endl_opt var_init stmt_sep
  116              | ID . endl_opt type_mark dimensions_list stmt_sep
  117              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  122 var_list: ID endl_opt ',' endl_opt ID . endl_opt
  127 var_list_stmt: ID endl_opt ',' endl_opt ID . stmt_sep

    ';'   shift, and go to state 61
    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 177
    endl_opt  go to state 271
    stmt_sep  go to state 272


State 247

  120 var_list: ID endl_opt ',' endl_opt variable_endl .

    $default  reduce using rule 120 (var_list)


State 248

  125 var_list_stmt: ID endl_opt ',' endl_opt variable_stmt .

    $default  reduce using rule 125 (var_list_stmt)


State 249

  129 dimensions: '[' endl_opt . ']'

    ']'  shift, and go to state 273


State 250

  108 variable_endl: ID endl_opt type_mark endl_opt var_init . endl_opt
  113 variable_stmt: ID endl_opt type_mark endl_opt var_init . stmt_sep

    ';'   shift, and go to state 61
    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 177
    endl_opt  go to state 274
    stmt_sep  go to state 275


State 251

  111 variable_endl: ID endl_opt type_mark dimensions_list endl_opt .
  112              | ID endl_opt type_mark dimensions_list endl_opt . '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  117 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt . '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    '='  shift, and go to state 276

    $default  reduce using rule 111 (variable_endl)


State 252

  116 variable_stmt: ID endl_opt type_mark dimensions_list stmt_sep .

    $default  reduce using rule 116 (variable_stmt)


State 253

  131 dimensions_list: dimensions_list dimensions .

    $default  reduce using rule 131 (dimensions_list)


State 254

  108 variable_endl: ID endl_opt . type_mark endl_opt var_init endl_opt
  109              | ID endl_opt . type_mark endl_opt
  110              | ID endl_opt . var_init endl_opt
  111              | ID endl_opt . type_mark dimensions_list endl_opt
  112              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  113 variable_stmt: ID endl_opt . type_mark endl_opt var_init stmt_sep
  114              | ID endl_opt . type_mark stmt_sep
  115              | ID endl_opt . var_init stmt_sep
  116              | ID endl_opt . type_mark dimensions_list stmt_sep
  117              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  121 var_list: variable_endl ',' endl_opt ID endl_opt .

    '='  shift, and go to state 194
    ':'  shift, and go to state 195

    $default  reduce using rule 121 (var_list)

    type_mark  go to state 197
    var_init   go to state 198


State 255

  126 var_list_stmt: variable_endl ',' endl_opt ID stmt_sep .

    $default  reduce using rule 126 (var_list_stmt)


State 256

  108 variable_endl: ID endl_opt . type_mark endl_opt var_init endl_opt
  109              | ID endl_opt . type_mark endl_opt
  110              | ID endl_opt . var_init endl_opt
  111              | ID endl_opt . type_mark dimensions_list endl_opt
  112              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  113 variable_stmt: ID endl_opt . type_mark endl_opt var_init stmt_sep
  114              | ID endl_opt . type_mark stmt_sep
  115              | ID endl_opt . var_init stmt_sep
  116              | ID endl_opt . type_mark dimensions_list stmt_sep
  117              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    '='  shift, and go to state 194
    ':'  shift, and go to state 195

    type_mark  go to state 197
    var_init   go to state 198


State 257

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr . endl_opt ')'

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 277


State 258

   51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt
   52        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt ELSE endl_opt stmt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt              go to state 278
    modifier          go to state 38
    enum_declaration  go to state 39


State 259

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 279


State 260

   53 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt              go to state 280
    modifier          go to state 38
    enum_declaration  go to state 39


State 261

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt . '{' endl_opt case_list_break '}' endl_opt

    '{'  shift, and go to state 281


State 262

   76 catch_clause: CATCH endl_opt '(' endl_opt . ID endl_opt ')' endl_opt block_statement endl_opt
   77             | CATCH endl_opt '(' endl_opt . ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ID  shift, and go to state 282


State 263

  132 param: ID endl_opt . type_mark
  133      | ID endl_opt . '?' endl_opt type_mark

    '?'  shift, and go to state 283
    ':'  shift, and go to state 195

    type_mark  go to state 284


State 264

  135 param_list: param_list endl_opt . ',' endl_opt param
  136 param_list_0_or_more: '(' endl_opt param_list endl_opt . ')'

    ')'  shift, and go to state 285
    ','  shift, and go to state 286


State 265

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    $default  reduce using rule 80 (stmt_list_opt)

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt_list_opt     go to state 287
    stmt_list         go to state 108
    stmt              go to state 109
    modifier          go to state 38
    enum_declaration  go to state 39


State 266

   73 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt . '{' endl_opt stmt_list_opt '}'

    '{'  shift, and go to state 288


State 267

  140 id_list_init: ID endl_opt . var_init
  142 id_list_endl: ID endl_opt .
  143             | ID endl_opt . ',' endl_opt ID endl_opt

    '='  shift, and go to state 194
    ','  shift, and go to state 289

    $default  reduce using rule 142 (id_list_endl)

    var_init  go to state 290


State 268

  139 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_init endl_opt . '}'
  141 id_list_init: id_list_init endl_opt . ',' endl_opt ID endl_opt var_init

    ','  shift, and go to state 291
    '}'  shift, and go to state 292


State 269

  138 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_endl '}' .

    $default  reduce using rule 138 (enum_declaration)


State 270

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   48     | expr '?' endl_opt expr endl_opt ':' endl_opt expr .
   49     | expr . '[' endl_opt expr endl_opt ']'

    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 48 (expr)


State 271

  108 variable_endl: ID endl_opt . type_mark endl_opt var_init endl_opt
  109              | ID endl_opt . type_mark endl_opt
  110              | ID endl_opt . var_init endl_opt
  111              | ID endl_opt . type_mark dimensions_list endl_opt
  112              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  113 variable_stmt: ID endl_opt . type_mark endl_opt var_init stmt_sep
  114              | ID endl_opt . type_mark stmt_sep
  115              | ID endl_opt . var_init stmt_sep
  116              | ID endl_opt . type_mark dimensions_list stmt_sep
  117              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  122 var_list: ID endl_opt ',' endl_opt ID endl_opt .

    '='  shift, and go to state 194
    ':'  shift, and go to state 195

    $default  reduce using rule 122 (var_list)

    type_mark  go to state 197
    var_init   go to state 198


State 272

  127 var_list_stmt: ID endl_opt ',' endl_opt ID stmt_sep .

    $default  reduce using rule 127 (var_list_stmt)


State 273

  129 dimensions: '[' endl_opt ']' .

    $default  reduce using rule 129 (dimensions)


State 274

  108 variable_endl: ID endl_opt type_mark endl_opt var_init endl_opt .

    $default  reduce using rule 108 (variable_endl)


State 275

  113 variable_stmt: ID endl_opt type_mark endl_opt var_init stmt_sep .

    $default  reduce using rule 113 (variable_stmt)


State 276

  112 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' . endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  117 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' . endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 293


State 277

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt . ')'

    ')'  shift, and go to state 294


State 278

   51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .
   52        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt stmt

    ELSE  shift, and go to state 295

    ELSE      [reduce using rule 51 (if_stmt)]
    $default  reduce using rule 51 (if_stmt)

    shift/reduce conflict on token ELSE:
       51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .
       52 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt stmt
      Example: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE stmt
      Shift derivation
        if_stmt
        `-> 51: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
                                                                    `-> 85: if_stmt
                                                                            `-> 52: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt       stmt
                                                                                                                                                    `-> 52: %empty
      Reduce derivation
        if_stmt
        `-> 52: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt                                                                       ELSE endl_opt       stmt
                                                                    `-> 85: if_stmt                                                                 `-> 52: %empty
                                                                            `-> 51: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .



State 279

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 296


State 280

   53 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 53 (while_stmt)


State 281

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' . endl_opt case_list_break '}' endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 297


State 282

   76 catch_clause: CATCH endl_opt '(' endl_opt ID . endl_opt ')' endl_opt block_statement endl_opt
   77             | CATCH endl_opt '(' endl_opt ID . endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 298


State 283

  133 param: ID endl_opt '?' . endl_opt type_mark

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 299


State 284

  132 param: ID endl_opt type_mark .

    $default  reduce using rule 132 (param)


State 285

  136 param_list_0_or_more: '(' endl_opt param_list endl_opt ')' .

    $default  reduce using rule 136 (param_list_0_or_more)


State 286

  135 param_list: param_list endl_opt ',' . endl_opt param

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 300


State 287

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 301


State 288

   73 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 302


State 289

  143 id_list_endl: ID endl_opt ',' . endl_opt ID endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 303


State 290

  140 id_list_init: ID endl_opt var_init .

    $default  reduce using rule 140 (id_list_init)


State 291

  141 id_list_init: id_list_init endl_opt ',' . endl_opt ID endl_opt var_init

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 304


State 292

  139 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list_init endl_opt '}' .

    $default  reduce using rule 139 (enum_declaration)


State 293

  112 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt . '[' endl_opt expr_list_opt ']' endl_opt
  117 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt . '[' endl_opt expr_list_opt ']' stmt_sep

    '['  shift, and go to state 305


State 294

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')' .

    $default  reduce using rule 54 (do_while_stmt)


State 295

   52 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE . endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 306


State 296

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 307


State 297

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt . case_list_break '}' endl_opt

    DEFAULT  shift, and go to state 308
    CASE     shift, and go to state 309

    case_list        go to state 310
    case_list_break  go to state 311
    case_stmt_break  go to state 312
    case_stmt        go to state 313


State 298

   76 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt . ')' endl_opt block_statement endl_opt
   77             | CATCH endl_opt '(' endl_opt ID endl_opt . ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ':'  shift, and go to state 314
    ')'  shift, and go to state 315


State 299

  133 param: ID endl_opt '?' endl_opt . type_mark

    ':'  shift, and go to state 195

    type_mark  go to state 316


State 300

  135 param_list: param_list endl_opt ',' endl_opt . param

    ID  shift, and go to state 235

    param  go to state 317


State 301

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 74 (function_declaration)


State 302

   73 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    $default  reduce using rule 80 (stmt_list_opt)

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt_list_opt     go to state 318
    stmt_list         go to state 108
    stmt              go to state 109
    modifier          go to state 38
    enum_declaration  go to state 39


State 303

  143 id_list_endl: ID endl_opt ',' endl_opt . ID endl_opt

    ID  shift, and go to state 319


State 304

  141 id_list_init: id_list_init endl_opt ',' endl_opt . ID endl_opt var_init

    ID  shift, and go to state 320


State 305

  112 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' . endl_opt expr_list_opt ']' endl_opt
  117 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' . endl_opt expr_list_opt ']' stmt_sep

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 321


State 306

   52 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt . stmt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt              go to state 322
    modifier          go to state 38
    enum_declaration  go to state 39


State 307

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 323


State 308

   62 case_stmt_break: DEFAULT . endl_opt ':' endl_opt stmt_list_opt break_opt_special
   68 case_stmt: DEFAULT . endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 324


State 309

   61 case_stmt_break: CASE . endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt_special
   67 case_stmt: CASE . endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 325


State 310

   58 case_list: case_list . case_stmt
   60 case_list_break: case_list . case_stmt_break

    DEFAULT  shift, and go to state 308
    CASE     shift, and go to state 309

    case_stmt_break  go to state 326
    case_stmt        go to state 327


State 311

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list_break . '}' endl_opt

    '}'  shift, and go to state 328


State 312

   59 case_list_break: case_stmt_break .

    $default  reduce using rule 59 (case_list_break)


State 313

   57 case_list: case_stmt .

    $default  reduce using rule 57 (case_list)


State 314

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' . endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 329


State 315

   76 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' . endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 330


State 316

  133 param: ID endl_opt '?' endl_opt type_mark .

    $default  reduce using rule 133 (param)


State 317

  135 param_list: param_list endl_opt ',' endl_opt param .

    $default  reduce using rule 135 (param_list)


State 318

   73 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 331


State 319

  143 id_list_endl: ID endl_opt ',' endl_opt ID . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 332


State 320

  141 id_list_init: id_list_init endl_opt ',' endl_opt ID . endl_opt var_init

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 333


State 321

  112 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt . expr_list_opt ']' endl_opt
  117 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt . expr_list_opt ']' stmt_sep

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 334
    expr_list_opt  go to state 335
    expr           go to state 336


State 322

   52 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt .

    $default  reduce using rule 52 (if_stmt)


State 323

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 337


State 324

   62 case_stmt_break: DEFAULT endl_opt . ':' endl_opt stmt_list_opt break_opt_special
   68 case_stmt: DEFAULT endl_opt . ':' endl_opt stmt_list_opt break_opt

    ':'  shift, and go to state 338


State 325

   61 case_stmt_break: CASE endl_opt . expr endl_opt ':' endl_opt stmt_list_opt break_opt_special
   67 case_stmt: CASE endl_opt . expr endl_opt ':' endl_opt stmt_list_opt break_opt

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 339


State 326

   60 case_list_break: case_list case_stmt_break .

    $default  reduce using rule 60 (case_list_break)


State 327

   58 case_list: case_list case_stmt .

    $default  reduce using rule 58 (case_list)


State 328

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list_break '}' . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 340


State 329

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt . error_type endl_opt ')' endl_opt block_statement endl_opt

    UNKNOWN  shift, and go to state 341
    ANY      shift, and go to state 342

    error_type  go to state 343


State 330

   76 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt . block_statement endl_opt

    '{'  shift, and go to state 24

    block_statement  go to state 344


State 331

   73 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 73 (function_declaration)


State 332

  143 id_list_endl: ID endl_opt ',' endl_opt ID endl_opt .

    $default  reduce using rule 143 (id_list_endl)


State 333

  141 id_list_init: id_list_init endl_opt ',' endl_opt ID endl_opt . var_init

    '='  shift, and go to state 194

    var_init  go to state 345


State 334

   12 expr_list: expr_list . endl_opt ',' endl_opt expr
   14 expr_list_opt: expr_list . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 346


State 335

  112 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt . ']' endl_opt
  117 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt . ']' stmt_sep

    ']'  shift, and go to state 347


State 336

   11 expr_list: expr .
   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 11 (expr_list)


State 337

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 348


State 338

   62 case_stmt_break: DEFAULT endl_opt ':' . endl_opt stmt_list_opt break_opt_special
   68 case_stmt: DEFAULT endl_opt ':' . endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 349


State 339

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   61 case_stmt_break: CASE endl_opt expr . endl_opt ':' endl_opt stmt_list_opt break_opt_special
   67 case_stmt: CASE endl_opt expr . endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL              shift, and go to state 41
    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 350


State 340

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list_break '}' endl_opt .

    $default  reduce using rule 56 (switch_stmt)


State 341

   78 error_type: UNKNOWN .

    $default  reduce using rule 78 (error_type)


State 342

   79 error_type: ANY .

    $default  reduce using rule 79 (error_type)


State 343

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type . endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 351


State 344

   76 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 352


State 345

  141 id_list_init: id_list_init endl_opt ',' endl_opt ID endl_opt var_init .

    $default  reduce using rule 141 (id_list_init)


State 346

   12 expr_list: expr_list endl_opt . ',' endl_opt expr
   14 expr_list_opt: expr_list endl_opt .

    ','  shift, and go to state 353

    $default  reduce using rule 14 (expr_list_opt)


State 347

  112 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' . endl_opt
  117 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' . stmt_sep

    ';'   shift, and go to state 61
    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 177
    endl_opt  go to state 354
    stmt_sep  go to state 355


State 348

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ')' endl_opt stmt

    ')'  shift, and go to state 356


State 349

   62 case_stmt_break: DEFAULT endl_opt ':' endl_opt . stmt_list_opt break_opt_special
   68 case_stmt: DEFAULT endl_opt ':' endl_opt . stmt_list_opt break_opt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    $default  reduce using rule 80 (stmt_list_opt)

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt_list_opt     go to state 357
    stmt_list         go to state 108
    stmt              go to state 109
    modifier          go to state 38
    enum_declaration  go to state 39


State 350

   61 case_stmt_break: CASE endl_opt expr endl_opt . ':' endl_opt stmt_list_opt break_opt_special
   67 case_stmt: CASE endl_opt expr endl_opt . ':' endl_opt stmt_list_opt break_opt

    ':'  shift, and go to state 358


State 351

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt . ')' endl_opt block_statement endl_opt

    ')'  shift, and go to state 359


State 352

   76 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt .

    $default  reduce using rule 76 (catch_clause)


State 353

   12 expr_list: expr_list endl_opt ',' . endl_opt expr

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 360


State 354

  112 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt .

    $default  reduce using rule 112 (variable_endl)


State 355

  117 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep .

    $default  reduce using rule 117 (variable_stmt)


State 356

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' . endl_opt stmt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 361


State 357

   62 case_stmt_break: DEFAULT endl_opt ':' endl_opt stmt_list_opt . break_opt_special
   68 case_stmt: DEFAULT endl_opt ':' endl_opt stmt_list_opt . break_opt

    BREAK  shift, and go to state 362

    '}'       reduce using rule 63 (break_opt_special)
    $default  reduce using rule 69 (break_opt)

    break_opt_special  go to state 363
    break_opt          go to state 364


State 358

   61 case_stmt_break: CASE endl_opt expr endl_opt ':' . endl_opt stmt_list_opt break_opt_special
   67 case_stmt: CASE endl_opt expr endl_opt ':' . endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 365


State 359

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' . endl_opt block_statement endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 366


State 360

   12 expr_list: expr_list endl_opt ',' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23

    expr  go to state 367


State 361

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt . stmt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt              go to state 368
    modifier          go to state 38
    enum_declaration  go to state 39


State 362

   64 break_opt_special: BREAK . endl
   65                  | BREAK . ';' endl_opt
   66                  | BREAK .
   70 break_opt: BREAK . endl
   71          | BREAK . ';' endl_opt

    ';'   shift, and go to state 369
    ENDL  shift, and go to state 41

    $default  reduce using rule 66 (break_opt_special)

    endl  go to state 370


State 363

   62 case_stmt_break: DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt_special .

    $default  reduce using rule 62 (case_stmt_break)


State 364

   68 case_stmt: DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt .

    $default  reduce using rule 68 (case_stmt)


State 365

   61 case_stmt_break: CASE endl_opt expr endl_opt ':' endl_opt . stmt_list_opt break_opt_special
   67 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt . stmt_list_opt break_opt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    ENUM            shift, and go to state 11
    NUMBER_LITERAL  shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13
    TRUE_LITERAL    shift, and go to state 14
    FALSE_LITERAL   shift, and go to state 15
    ID              shift, and go to state 16
    ';'             shift, and go to state 17
    '+'             shift, and go to state 18
    '-'             shift, and go to state 19
    PREF_INCREMENT  shift, and go to state 20
    PREF_DECREMENT  shift, and go to state 21
    NOT             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    $default  reduce using rule 80 (stmt_list_opt)

    expr              go to state 27
    block_statement   go to state 28
    if_stmt           go to state 29
    while_stmt        go to state 30
    do_while_stmt     go to state 31
    for_stmt          go to state 32
    switch_stmt       go to state 33
    return_statement  go to state 34
    try_catch_block   go to state 36
    stmt_list_opt     go to state 371
    stmt_list         go to state 108
    stmt              go to state 109
    modifier          go to state 38
    enum_declaration  go to state 39


State 366

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt . block_statement endl_opt

    '{'  shift, and go to state 24

    block_statement  go to state 372


State 367

   12 expr_list: expr_list endl_opt ',' endl_opt expr .
   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 62
    PLUS_ASSIGN       shift, and go to state 63
    MINUS_ASSIGN      shift, and go to state 64
    MUL_ASSIGN        shift, and go to state 65
    DIV_ASSIGN        shift, and go to state 66
    MOD_ASSIGN        shift, and go to state 67
    '['               shift, and go to state 68
    '?'               shift, and go to state 69
    OR                shift, and go to state 70
    AND               shift, and go to state 71
    EQUALS            shift, and go to state 72
    NOT_EQUALS        shift, and go to state 73
    '<'               shift, and go to state 74
    '>'               shift, and go to state 75
    LESS_OR_EQUAL     shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 77
    AS                shift, and go to state 78
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83
    POST_INCREMENT    shift, and go to state 84
    POST_DECREMENT    shift, and go to state 85

    $default  reduce using rule 12 (expr_list)


State 368

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 55 (for_stmt)


State 369

   65 break_opt_special: BREAK ';' . endl_opt
   71 break_opt: BREAK ';' . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 373


State 370

    6 endl: endl . ENDL
   64 break_opt_special: BREAK endl .
   70 break_opt: BREAK endl .

    ENDL  shift, and go to state 92

    '}'       reduce using rule 64 (break_opt_special)
    $default  reduce using rule 70 (break_opt)


State 371

   61 case_stmt_break: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt . break_opt_special
   67 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt . break_opt

    BREAK  shift, and go to state 362

    '}'       reduce using rule 63 (break_opt_special)
    $default  reduce using rule 69 (break_opt)

    break_opt_special  go to state 374
    break_opt          go to state 375


State 372

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement . endl_opt

    ENDL  shift, and go to state 41

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 42
    endl_opt  go to state 376


State 373

   65 break_opt_special: BREAK ';' endl_opt .
   71 break_opt: BREAK ';' endl_opt .

    '}'       reduce using rule 65 (break_opt_special)
    $default  reduce using rule 71 (break_opt)


State 374

   61 case_stmt_break: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt_special .

    $default  reduce using rule 61 (case_stmt_break)


State 375

   67 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt .

    $default  reduce using rule 67 (case_stmt)


State 376

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt .

    $default  reduce using rule 77 (catch_clause)
