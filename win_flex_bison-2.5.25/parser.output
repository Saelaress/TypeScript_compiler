Terminals unused in grammar

    DELETE
    EXPORT
    PUBLIC
    PROTECTED
    PRIVATE
    READONLY
    OF
    IN
    CONTINUE
    INCREMENT
    DECREMENT
    DECLARE
    ENUM
    IS
    NEW
    '.'


State 265 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_elem
    2        | program program_elem

    3 program_elem: stmt
    4             | function_declaration

    5 endl: ENDL
    6     | endl ENDL

    7 endl_opt: %empty
    8         | endl

    9 stmt_sep: ';'
   10         | endl

   11 expr_list: expr
   12          | expr_list endl_opt ',' endl_opt expr

   13 expr_list_opt: %empty
   14              | expr_list endl_opt

   15 expr: expr POST_DECREMENT
   16     | PREF_DECREMENT endl_opt expr
   17     | expr POST_INCREMENT
   18     | PREF_INCREMENT endl_opt expr
   19     | expr AS endl_opt type
   20     | '-' endl_opt expr
   21     | '+' endl_opt expr
   22     | NUMBER_LITERAL
   23     | STRING_LITERAL
   24     | TRUE_LITERAL
   25     | FALSE_LITERAL
   26     | ID
   27     | '(' endl_opt expr ')'
   28     | expr '+' endl_opt expr
   29     | expr '-' endl_opt expr
   30     | expr '*' endl_opt expr
   31     | expr '/' endl_opt expr
   32     | expr '%' endl_opt expr
   33     | expr '<' endl_opt expr
   34     | expr '>' endl_opt expr
   35     | expr LESS_OR_EQUAL endl_opt expr
   36     | expr GREATER_OR_EQUAL endl_opt expr
   37     | expr EQUALS endl_opt expr
   38     | expr NOT_EQUALS endl_opt expr
   39     | expr '=' endl_opt expr
   40     | expr PLUS_ASSIGN endl_opt expr
   41     | expr MINUS_ASSIGN endl_opt expr
   42     | expr MUL_ASSIGN endl_opt expr
   43     | expr DIV_ASSIGN endl_opt expr
   44     | expr MOD_ASSIGN endl_opt expr
   45     | NOT endl_opt expr
   46     | expr AND endl_opt expr
   47     | expr OR endl_opt expr
   48     | expr '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr '[' endl_opt expr endl_opt ']'

   50 block_statement: '{' endl_opt stmt_list_opt '}'

   51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
   52        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

   53 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')'

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

   57 case_list: case_stmt
   58          | case_list case_stmt

   59 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt
   60          | DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt

   61 break_opt: %empty
   62          | BREAK stmt_sep

   63 return_statement: RETURN expr stmt_sep

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   65                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

   66 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause

   67 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   68             | CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

   69 error_type: UNKNOWN
   70           | ANY

   71 stmt_list_opt: %empty
   72              | stmt_list

   73 stmt_list: stmt
   74          | stmt_list stmt

   75 stmt: expr stmt_sep
   76     | if_stmt
   77     | while_stmt
   78     | for_stmt
   79     | do_while_stmt stmt_sep
   80     | switch_stmt
   81     | try_catch_block
   82     | block_statement endl_opt
   83     | modifier endl_opt variable_stmt
   84     | modifier endl_opt ID stmt_sep
   85     | modifier endl_opt var_list_stmt
   86     | return_statement
   87     | ';' endl_opt

   88 modifier: LET
   89         | CONST

   90 type: NUMBER
   91     | STRING
   92     | BOOLEAN
   93     | ANY
   94     | UNKNOWN
   95     | VOID
   96     | ID

   97 type_mark: ':' endl_opt type

   98 variable_endl: ID endl_opt type_mark endl_opt var_init endl_opt
   99              | ID endl_opt type_mark endl_opt
  100              | ID endl_opt var_init endl_opt
  101              | ID endl_opt type_mark dimensions_list endl_opt
  102              | ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt

  103 variable_stmt: ID endl_opt type_mark endl_opt var_init stmt_sep
  104              | ID endl_opt type_mark stmt_sep
  105              | ID endl_opt var_init stmt_sep
  106              | ID endl_opt type_mark dimensions_list stmt_sep
  107              | ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

  108 var_init: '=' endl_opt expr

  109 var_list: variable_endl ',' endl_opt variable_endl
  110         | ID endl_opt ',' endl_opt variable_endl
  111         | variable_endl ',' endl_opt ID endl_opt
  112         | ID endl_opt ',' endl_opt ID endl_opt
  113         | var_list ',' endl_opt variable_endl

  114 var_list_stmt: variable_endl ',' endl_opt variable_stmt
  115              | ID endl_opt ',' endl_opt variable_stmt
  116              | variable_endl ',' endl_opt ID stmt_sep
  117              | ID endl_opt ',' endl_opt ID stmt_sep
  118              | var_list ',' endl_opt variable_stmt

  119 dimensions: '[' endl_opt ']'

  120 dimensions_list: dimensions
  121                | dimensions_list dimensions

  122 param: ID endl_opt type_mark
  123      | ID endl_opt '?' endl_opt type_mark

  124 param_list: param
  125           | param_list endl_opt ',' endl_opt param

  126 param_list_0_or_more: '(' endl_opt param_list endl_opt ')'
  127                     | '(' ')'


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 32
    '(' (40) 27 51 52 53 54 55 56 67 68 126 127
    ')' (41) 27 51 52 53 54 55 56 67 68 126 127
    '*' (42) 30
    '+' (43) 21 28
    ',' (44) 12 109 110 111 112 113 114 115 116 117 118 125
    '-' (45) 20 29
    '.' (46)
    '/' (47) 31
    ':' (58) 48 59 60 68 97
    ';' (59) 9 55 87
    '<' (60) 33
    '=' (61) 39 102 107 108
    '>' (62) 34
    '?' (63) 48 123
    '[' (91) 49 102 107 119
    ']' (93) 49 102 107 119
    '{' (123) 50 56 64 65
    '}' (125) 50 56 64 65
    error (256)
    RETURN (258) 63
    DELETE (259)
    EXPORT (260)
    PUBLIC (261)
    PROTECTED (262)
    PRIVATE (263)
    READONLY (264)
    DO (265) 54
    IF (266) 51 52
    ELSE (267) 52
    FOR (268) 55
    OF (269)
    IN (270)
    WHILE (271) 53 54
    BREAK (272) 62
    CONTINUE (273)
    DEFAULT (274) 60
    SWITCH (275) 56
    CASE (276) 59
    TRY (277) 66
    CATCH (278) 67 68
    INCREMENT (279)
    DECREMENT (280)
    LET (281) 88
    CONST (282) 89
    FUNC (283) 64 65
    DECLARE (284)
    UNKNOWN (285) 69 94
    ANY (286) 70 93
    NUMBER (287) 90
    STRING (288) 91
    VOID (289) 95
    BOOLEAN (290) 92
    ENUM (291)
    NUMBER_LITERAL (292) 22
    STRING_LITERAL (293) 23
    TRUE_LITERAL (294) 24
    FALSE_LITERAL (295) 25
    ID (296) 26 64 65 67 68 84 96 98 99 100 101 102 103 104 105 106 107 110 111 112 115 116 117 122 123
    ENDL (297) 5 6
    PLUS_ASSIGN (298) 40
    MINUS_ASSIGN (299) 41
    MUL_ASSIGN (300) 42
    DIV_ASSIGN (301) 43
    MOD_ASSIGN (302) 44
    OR (303) 47
    AND (304) 46
    EQUALS (305) 37
    NOT_EQUALS (306) 38
    LESS_OR_EQUAL (307) 35
    GREATER_OR_EQUAL (308) 36
    IS (309)
    AS (310) 19
    NEW (311)
    PREF_INCREMENT (312) 18
    PREF_DECREMENT (313) 16
    POST_INCREMENT (314) 17
    POST_DECREMENT (315) 15
    NOT (316) 45
    UPLUS (317)
    UMINUS (318)


Nonterminals, with rules where they appear

    $accept (83)
        on left: 0
    program (84)
        on left: 1 2
        on right: 0 2
    program_elem (85)
        on left: 3 4
        on right: 1 2
    endl (86)
        on left: 5 6
        on right: 6 8 10
    endl_opt (87)
        on left: 7 8
        on right: 12 14 16 18 19 20 21 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 59 60 64 65 66 67 68 82 83 84 85 87 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 122 123 125 126
    stmt_sep (88)
        on left: 9 10
        on right: 62 63 75 79 84 103 104 105 106 107 116 117
    expr_list (89)
        on left: 11 12
        on right: 12 14
    expr_list_opt (90)
        on left: 13 14
        on right: 102 107
    expr (91)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
        on right: 11 12 15 16 17 18 19 20 21 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 51 52 53 54 55 56 59 63 75 108
    block_statement (92)
        on left: 50
        on right: 66 67 68 82
    if_stmt (93)
        on left: 51 52
        on right: 76
    while_stmt (94)
        on left: 53
        on right: 77
    do_while_stmt (95)
        on left: 54
        on right: 79
    for_stmt (96)
        on left: 55
        on right: 78
    switch_stmt (97)
        on left: 56
        on right: 80
    case_list (98)
        on left: 57 58
        on right: 56 58
    case_stmt (99)
        on left: 59 60
        on right: 57 58
    break_opt (100)
        on left: 61 62
        on right: 59 60
    return_statement (101)
        on left: 63
        on right: 86
    function_declaration (102)
        on left: 64 65
        on right: 4
    try_catch_block (103)
        on left: 66
        on right: 81
    catch_clause (104)
        on left: 67 68
        on right: 66
    error_type (105)
        on left: 69 70
        on right: 68
    stmt_list_opt (106)
        on left: 71 72
        on right: 50 59 60 64 65
    stmt_list (107)
        on left: 73 74
        on right: 72 74
    stmt (108)
        on left: 75 76 77 78 79 80 81 82 83 84 85 86 87
        on right: 3 51 52 53 54 55 73 74
    modifier (109)
        on left: 88 89
        on right: 83 84 85
    type (110)
        on left: 90 91 92 93 94 95 96
        on right: 19 97
    type_mark (111)
        on left: 97
        on right: 64 98 99 101 102 103 104 106 107 122 123
    variable_endl (112)
        on left: 98 99 100 101 102
        on right: 109 110 111 113 114 116
    variable_stmt (113)
        on left: 103 104 105 106 107
        on right: 83 114 115 118
    var_init (114)
        on left: 108
        on right: 98 100 103 105
    var_list (115)
        on left: 109 110 111 112 113
        on right: 113 118
    var_list_stmt (116)
        on left: 114 115 116 117 118
        on right: 85
    dimensions (117)
        on left: 119
        on right: 120 121
    dimensions_list (118)
        on left: 120 121
        on right: 101 102 106 107 121
    param (119)
        on left: 122 123
        on right: 124 125
    param_list (120)
        on left: 124 125
        on right: 125 126
    param_list_0_or_more (121)
        on left: 126 127
        on right: 64 65


State 0

    0 $accept: . program $end

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    FUNC            shift, and go to state 10
    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    ';'             shift, and go to state 16
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22
    '{'             shift, and go to state 23

    program               go to state 24
    program_elem          go to state 25
    expr                  go to state 26
    block_statement       go to state 27
    if_stmt               go to state 28
    while_stmt            go to state 29
    do_while_stmt         go to state 30
    for_stmt              go to state 31
    switch_stmt           go to state 32
    return_statement      go to state 33
    function_declaration  go to state 34
    try_catch_block       go to state 35
    stmt                  go to state 36
    modifier              go to state 37


State 1

   63 return_statement: RETURN . expr stmt_sep

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 38


State 2

   54 do_while_stmt: DO . endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 41


State 3

   51 if_stmt: IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
   52        | IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 42


State 4

   55 for_stmt: FOR . endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 43


State 5

   53 while_stmt: WHILE . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 44


State 6

   56 switch_stmt: SWITCH . endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 45


State 7

   66 try_catch_block: TRY . endl_opt block_statement endl_opt catch_clause

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 46


State 8

   88 modifier: LET .

    $default  reduce using rule 88 (modifier)


State 9

   89 modifier: CONST .

    $default  reduce using rule 89 (modifier)


State 10

   64 function_declaration: FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   65                     | FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 47


State 11

   22 expr: NUMBER_LITERAL .

    $default  reduce using rule 22 (expr)


State 12

   23 expr: STRING_LITERAL .

    $default  reduce using rule 23 (expr)


State 13

   24 expr: TRUE_LITERAL .

    $default  reduce using rule 24 (expr)


State 14

   25 expr: FALSE_LITERAL .

    $default  reduce using rule 25 (expr)


State 15

   26 expr: ID .

    $default  reduce using rule 26 (expr)


State 16

   87 stmt: ';' . endl_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 48


State 17

   21 expr: '+' . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 49


State 18

   20 expr: '-' . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 50


State 19

   18 expr: PREF_INCREMENT . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 51


State 20

   16 expr: PREF_DECREMENT . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 52


State 21

   45 expr: NOT . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 53


State 22

   27 expr: '(' . endl_opt expr ')'

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 54


State 23

   50 block_statement: '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 55


State 24

    0 $accept: program . $end
    2 program: program . program_elem

    $end            shift, and go to state 56
    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    FUNC            shift, and go to state 10
    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    ';'             shift, and go to state 16
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22
    '{'             shift, and go to state 23

    program_elem          go to state 57
    expr                  go to state 26
    block_statement       go to state 27
    if_stmt               go to state 28
    while_stmt            go to state 29
    do_while_stmt         go to state 30
    for_stmt              go to state 31
    switch_stmt           go to state 32
    return_statement      go to state 33
    function_declaration  go to state 34
    try_catch_block       go to state 35
    stmt                  go to state 36
    modifier              go to state 37


State 25

    1 program: program_elem .

    $default  reduce using rule 1 (program)


State 26

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   75 stmt: expr . stmt_sep

    ';'               shift, and go to state 58
    ENDL              shift, and go to state 39
    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    endl      go to state 83
    stmt_sep  go to state 84


State 27

   82 stmt: block_statement . endl_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 85


State 28

   76 stmt: if_stmt .

    $default  reduce using rule 76 (stmt)


State 29

   77 stmt: while_stmt .

    $default  reduce using rule 77 (stmt)


State 30

   79 stmt: do_while_stmt . stmt_sep

    ';'   shift, and go to state 58
    ENDL  shift, and go to state 39

    endl      go to state 83
    stmt_sep  go to state 86


State 31

   78 stmt: for_stmt .

    $default  reduce using rule 78 (stmt)


State 32

   80 stmt: switch_stmt .

    $default  reduce using rule 80 (stmt)


State 33

   86 stmt: return_statement .

    $default  reduce using rule 86 (stmt)


State 34

    4 program_elem: function_declaration .

    $default  reduce using rule 4 (program_elem)


State 35

   81 stmt: try_catch_block .

    $default  reduce using rule 81 (stmt)


State 36

    3 program_elem: stmt .

    $default  reduce using rule 3 (program_elem)


State 37

   83 stmt: modifier . endl_opt variable_stmt
   84     | modifier . endl_opt ID stmt_sep
   85     | modifier . endl_opt var_list_stmt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 87


State 38

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   63 return_statement: RETURN expr . stmt_sep

    ';'               shift, and go to state 58
    ENDL              shift, and go to state 39
    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    endl      go to state 83
    stmt_sep  go to state 88


State 39

    5 endl: ENDL .

    $default  reduce using rule 5 (endl)


State 40

    6 endl: endl . ENDL
    8 endl_opt: endl .

    ENDL  shift, and go to state 89

    $default  reduce using rule 8 (endl_opt)


State 41

   54 do_while_stmt: DO endl_opt . stmt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    ';'             shift, and go to state 16
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22
    '{'             shift, and go to state 23

    expr              go to state 26
    block_statement   go to state 27
    if_stmt           go to state 28
    while_stmt        go to state 29
    do_while_stmt     go to state 30
    for_stmt          go to state 31
    switch_stmt       go to state 32
    return_statement  go to state 33
    try_catch_block   go to state 35
    stmt              go to state 90
    modifier          go to state 37


State 42

   51 if_stmt: IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt
   52        | IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    '('  shift, and go to state 91


State 43

   55 for_stmt: FOR endl_opt . '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    '('  shift, and go to state 92


State 44

   53 while_stmt: WHILE endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt

    '('  shift, and go to state 93


State 45

   56 switch_stmt: SWITCH endl_opt . '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    '('  shift, and go to state 94


State 46

   66 try_catch_block: TRY endl_opt . block_statement endl_opt catch_clause

    '{'  shift, and go to state 23

    block_statement  go to state 95


State 47

   64 function_declaration: FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   65                     | FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ID  shift, and go to state 96


State 48

   87 stmt: ';' endl_opt .

    $default  reduce using rule 87 (stmt)


State 49

   21 expr: '+' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 97


State 50

   20 expr: '-' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 98


State 51

   18 expr: PREF_INCREMENT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 99


State 52

   16 expr: PREF_DECREMENT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 100


State 53

   45 expr: NOT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 101


State 54

   27 expr: '(' endl_opt . expr ')'

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 102


State 55

   50 block_statement: '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    ';'             shift, and go to state 16
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22
    '{'             shift, and go to state 23

    $default  reduce using rule 71 (stmt_list_opt)

    expr              go to state 26
    block_statement   go to state 27
    if_stmt           go to state 28
    while_stmt        go to state 29
    do_while_stmt     go to state 30
    for_stmt          go to state 31
    switch_stmt       go to state 32
    return_statement  go to state 33
    try_catch_block   go to state 35
    stmt_list_opt     go to state 103
    stmt_list         go to state 104
    stmt              go to state 105
    modifier          go to state 37


State 56

    0 $accept: program $end .

    $default  accept


State 57

    2 program: program program_elem .

    $default  reduce using rule 2 (program)


State 58

    9 stmt_sep: ';' .

    $default  reduce using rule 9 (stmt_sep)


State 59

   39 expr: expr '=' . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 106


State 60

   40 expr: expr PLUS_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 107


State 61

   41 expr: expr MINUS_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 108


State 62

   42 expr: expr MUL_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 109


State 63

   43 expr: expr DIV_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 110


State 64

   44 expr: expr MOD_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 111


State 65

   49 expr: expr '[' . endl_opt expr endl_opt ']'

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 112


State 66

   48 expr: expr '?' . endl_opt expr endl_opt ':' endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 113


State 67

   47 expr: expr OR . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 114


State 68

   46 expr: expr AND . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 115


State 69

   37 expr: expr EQUALS . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 116


State 70

   38 expr: expr NOT_EQUALS . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 117


State 71

   33 expr: expr '<' . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 118


State 72

   34 expr: expr '>' . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 119


State 73

   35 expr: expr LESS_OR_EQUAL . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 120


State 74

   36 expr: expr GREATER_OR_EQUAL . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 121


State 75

   19 expr: expr AS . endl_opt type

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 122


State 76

   28 expr: expr '+' . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 123


State 77

   29 expr: expr '-' . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 124


State 78

   30 expr: expr '*' . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 125


State 79

   31 expr: expr '/' . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 126


State 80

   32 expr: expr '%' . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 127


State 81

   17 expr: expr POST_INCREMENT .

    $default  reduce using rule 17 (expr)


State 82

   15 expr: expr POST_DECREMENT .

    $default  reduce using rule 15 (expr)


State 83

    6 endl: endl . ENDL
   10 stmt_sep: endl .

    ENDL  shift, and go to state 89

    $default  reduce using rule 10 (stmt_sep)


State 84

   75 stmt: expr stmt_sep .

    $default  reduce using rule 75 (stmt)


State 85

   82 stmt: block_statement endl_opt .

    $default  reduce using rule 82 (stmt)


State 86

   79 stmt: do_while_stmt stmt_sep .

    $default  reduce using rule 79 (stmt)


State 87

   83 stmt: modifier endl_opt . variable_stmt
   84     | modifier endl_opt . ID stmt_sep
   85     | modifier endl_opt . var_list_stmt

    ID  shift, and go to state 128

    variable_endl  go to state 129
    variable_stmt  go to state 130
    var_list       go to state 131
    var_list_stmt  go to state 132


State 88

   63 return_statement: RETURN expr stmt_sep .

    $default  reduce using rule 63 (return_statement)


State 89

    6 endl: endl ENDL .

    $default  reduce using rule 6 (endl)


State 90

   54 do_while_stmt: DO endl_opt stmt . WHILE endl_opt '(' endl_opt expr endl_opt ')'

    WHILE  shift, and go to state 133


State 91

   51 if_stmt: IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt
   52        | IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 134


State 92

   55 for_stmt: FOR endl_opt '(' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 135


State 93

   53 while_stmt: WHILE endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 136


State 94

   56 switch_stmt: SWITCH endl_opt '(' . endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 137


State 95

   66 try_catch_block: TRY endl_opt block_statement . endl_opt catch_clause

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 138


State 96

   64 function_declaration: FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   65                     | FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 139


State 97

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   21     | '+' endl_opt expr .
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    $default  reduce using rule 21 (expr)


State 98

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   20     | '-' endl_opt expr .
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    $default  reduce using rule 20 (expr)


State 99

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   18     | PREF_INCREMENT endl_opt expr .
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 81
    POST_DECREMENT  shift, and go to state 82

    $default  reduce using rule 18 (expr)


State 100

   15 expr: expr . POST_DECREMENT
   16     | PREF_DECREMENT endl_opt expr .
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 81
    POST_DECREMENT  shift, and go to state 82

    $default  reduce using rule 16 (expr)


State 101

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   45     | NOT endl_opt expr .
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    $default  reduce using rule 45 (expr)


State 102

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   27     | '(' endl_opt expr . ')'
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82
    ')'               shift, and go to state 140


State 103

   50 block_statement: '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 141


State 104

   72 stmt_list_opt: stmt_list .
   74 stmt_list: stmt_list . stmt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    ';'             shift, and go to state 16
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22
    '{'             shift, and go to state 23

    $default  reduce using rule 72 (stmt_list_opt)

    expr              go to state 26
    block_statement   go to state 27
    if_stmt           go to state 28
    while_stmt        go to state 29
    do_while_stmt     go to state 30
    for_stmt          go to state 31
    switch_stmt       go to state 32
    return_statement  go to state 33
    try_catch_block   go to state 35
    stmt              go to state 142
    modifier          go to state 37


State 105

   73 stmt_list: stmt .

    $default  reduce using rule 73 (stmt_list)


State 106

   39 expr: expr '=' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 143


State 107

   40 expr: expr PLUS_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 144


State 108

   41 expr: expr MINUS_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 145


State 109

   42 expr: expr MUL_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 146


State 110

   43 expr: expr DIV_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 147


State 111

   44 expr: expr MOD_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 148


State 112

   49 expr: expr '[' endl_opt . expr endl_opt ']'

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 149


State 113

   48 expr: expr '?' endl_opt . expr endl_opt ':' endl_opt expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 150


State 114

   47 expr: expr OR endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 151


State 115

   46 expr: expr AND endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 152


State 116

   37 expr: expr EQUALS endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 153


State 117

   38 expr: expr NOT_EQUALS endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 154


State 118

   33 expr: expr '<' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 155


State 119

   34 expr: expr '>' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 156


State 120

   35 expr: expr LESS_OR_EQUAL endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 157


State 121

   36 expr: expr GREATER_OR_EQUAL endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 158


State 122

   19 expr: expr AS endl_opt . type

    UNKNOWN  shift, and go to state 159
    ANY      shift, and go to state 160
    NUMBER   shift, and go to state 161
    STRING   shift, and go to state 162
    VOID     shift, and go to state 163
    BOOLEAN  shift, and go to state 164
    ID       shift, and go to state 165

    type  go to state 166


State 123

   28 expr: expr '+' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 167


State 124

   29 expr: expr '-' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 168


State 125

   30 expr: expr '*' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 169


State 126

   31 expr: expr '/' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 170


State 127

   32 expr: expr '%' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 171


State 128

   84 stmt: modifier endl_opt ID . stmt_sep
   98 variable_endl: ID . endl_opt type_mark endl_opt var_init endl_opt
   99              | ID . endl_opt type_mark endl_opt
  100              | ID . endl_opt var_init endl_opt
  101              | ID . endl_opt type_mark dimensions_list endl_opt
  102              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  103 variable_stmt: ID . endl_opt type_mark endl_opt var_init stmt_sep
  104              | ID . endl_opt type_mark stmt_sep
  105              | ID . endl_opt var_init stmt_sep
  106              | ID . endl_opt type_mark dimensions_list stmt_sep
  107              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  110 var_list: ID . endl_opt ',' endl_opt variable_endl
  112         | ID . endl_opt ',' endl_opt ID endl_opt
  115 var_list_stmt: ID . endl_opt ',' endl_opt variable_stmt
  117              | ID . endl_opt ',' endl_opt ID stmt_sep

    ';'   shift, and go to state 58
    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 172
    endl_opt  go to state 173
    stmt_sep  go to state 174


State 129

  109 var_list: variable_endl . ',' endl_opt variable_endl
  111         | variable_endl . ',' endl_opt ID endl_opt
  114 var_list_stmt: variable_endl . ',' endl_opt variable_stmt
  116              | variable_endl . ',' endl_opt ID stmt_sep

    ','  shift, and go to state 175


State 130

   83 stmt: modifier endl_opt variable_stmt .

    $default  reduce using rule 83 (stmt)


State 131

  113 var_list: var_list . ',' endl_opt variable_endl
  118 var_list_stmt: var_list . ',' endl_opt variable_stmt

    ','  shift, and go to state 176


State 132

   85 stmt: modifier endl_opt var_list_stmt .

    $default  reduce using rule 85 (stmt)


State 133

   54 do_while_stmt: DO endl_opt stmt WHILE . endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 177


State 134

   51 if_stmt: IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt
   52        | IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 178


State 135

   55 for_stmt: FOR endl_opt '(' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 179


State 136

   53 while_stmt: WHILE endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 180


State 137

   56 switch_stmt: SWITCH endl_opt '(' endl_opt . expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 181


State 138

   66 try_catch_block: TRY endl_opt block_statement endl_opt . catch_clause

    CATCH  shift, and go to state 182

    catch_clause  go to state 183


State 139

   64 function_declaration: FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   65                     | FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    '('  shift, and go to state 184

    param_list_0_or_more  go to state 185


State 140

   27 expr: '(' endl_opt expr ')' .

    $default  reduce using rule 27 (expr)


State 141

   50 block_statement: '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 50 (block_statement)


State 142

   74 stmt_list: stmt_list stmt .

    $default  reduce using rule 74 (stmt_list)


State 143

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   39     | expr '=' endl_opt expr .
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 39 (expr)


State 144

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   40     | expr PLUS_ASSIGN endl_opt expr .
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 40 (expr)


State 145

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   41     | expr MINUS_ASSIGN endl_opt expr .
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 41 (expr)


State 146

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   42     | expr MUL_ASSIGN endl_opt expr .
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 42 (expr)


State 147

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   43     | expr DIV_ASSIGN endl_opt expr .
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 43 (expr)


State 148

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   44     | expr MOD_ASSIGN endl_opt expr .
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 44 (expr)


State 149

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   49     | expr '[' endl_opt expr . endl_opt ']'

    ENDL              shift, and go to state 39
    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 186


State 150

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   48     | expr '?' endl_opt expr . endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    ENDL              shift, and go to state 39
    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 187


State 151

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   47     | expr OR endl_opt expr .
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 47 (expr)


State 152

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   46     | expr AND endl_opt expr .
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 46 (expr)


State 153

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   37     | expr EQUALS endl_opt expr .
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 76
    '-'             shift, and go to state 77
    '*'             shift, and go to state 78
    '/'             shift, and go to state 79
    '%'             shift, and go to state 80
    POST_INCREMENT  shift, and go to state 81
    POST_DECREMENT  shift, and go to state 82

    $default  reduce using rule 37 (expr)


State 154

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   38     | expr NOT_EQUALS endl_opt expr .
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 76
    '-'             shift, and go to state 77
    '*'             shift, and go to state 78
    '/'             shift, and go to state 79
    '%'             shift, and go to state 80
    POST_INCREMENT  shift, and go to state 81
    POST_DECREMENT  shift, and go to state 82

    $default  reduce using rule 38 (expr)


State 155

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   33     | expr '<' endl_opt expr .
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 76
    '-'             shift, and go to state 77
    '*'             shift, and go to state 78
    '/'             shift, and go to state 79
    '%'             shift, and go to state 80
    POST_INCREMENT  shift, and go to state 81
    POST_DECREMENT  shift, and go to state 82

    $default  reduce using rule 33 (expr)


State 156

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   34     | expr '>' endl_opt expr .
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 76
    '-'             shift, and go to state 77
    '*'             shift, and go to state 78
    '/'             shift, and go to state 79
    '%'             shift, and go to state 80
    POST_INCREMENT  shift, and go to state 81
    POST_DECREMENT  shift, and go to state 82

    $default  reduce using rule 34 (expr)


State 157

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   35     | expr LESS_OR_EQUAL endl_opt expr .
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 76
    '-'             shift, and go to state 77
    '*'             shift, and go to state 78
    '/'             shift, and go to state 79
    '%'             shift, and go to state 80
    POST_INCREMENT  shift, and go to state 81
    POST_DECREMENT  shift, and go to state 82

    $default  reduce using rule 35 (expr)


State 158

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   36     | expr GREATER_OR_EQUAL endl_opt expr .
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '+'             shift, and go to state 76
    '-'             shift, and go to state 77
    '*'             shift, and go to state 78
    '/'             shift, and go to state 79
    '%'             shift, and go to state 80
    POST_INCREMENT  shift, and go to state 81
    POST_DECREMENT  shift, and go to state 82

    $default  reduce using rule 36 (expr)


State 159

   94 type: UNKNOWN .

    $default  reduce using rule 94 (type)


State 160

   93 type: ANY .

    $default  reduce using rule 93 (type)


State 161

   90 type: NUMBER .

    $default  reduce using rule 90 (type)


State 162

   91 type: STRING .

    $default  reduce using rule 91 (type)


State 163

   95 type: VOID .

    $default  reduce using rule 95 (type)


State 164

   92 type: BOOLEAN .

    $default  reduce using rule 92 (type)


State 165

   96 type: ID .

    $default  reduce using rule 96 (type)


State 166

   19 expr: expr AS endl_opt type .

    $default  reduce using rule 19 (expr)


State 167

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   28     | expr '+' endl_opt expr .
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '*'             shift, and go to state 78
    '/'             shift, and go to state 79
    '%'             shift, and go to state 80
    POST_INCREMENT  shift, and go to state 81
    POST_DECREMENT  shift, and go to state 82

    $default  reduce using rule 28 (expr)


State 168

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   29     | expr '-' endl_opt expr .
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '*'             shift, and go to state 78
    '/'             shift, and go to state 79
    '%'             shift, and go to state 80
    POST_INCREMENT  shift, and go to state 81
    POST_DECREMENT  shift, and go to state 82

    $default  reduce using rule 29 (expr)


State 169

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   30     | expr '*' endl_opt expr .
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 81
    POST_DECREMENT  shift, and go to state 82

    $default  reduce using rule 30 (expr)


State 170

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   31     | expr '/' endl_opt expr .
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 81
    POST_DECREMENT  shift, and go to state 82

    $default  reduce using rule 31 (expr)


State 171

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   32     | expr '%' endl_opt expr .
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    POST_INCREMENT  shift, and go to state 81
    POST_DECREMENT  shift, and go to state 82

    $default  reduce using rule 32 (expr)


State 172

    6 endl: endl . ENDL
    8 endl_opt: endl .
   10 stmt_sep: endl .

    ENDL  shift, and go to state 89

    '='       reduce using rule 8 (endl_opt)
    ':'       reduce using rule 8 (endl_opt)
    ','       reduce using rule 8 (endl_opt)
    $default  reduce using rule 10 (stmt_sep)


State 173

   98 variable_endl: ID endl_opt . type_mark endl_opt var_init endl_opt
   99              | ID endl_opt . type_mark endl_opt
  100              | ID endl_opt . var_init endl_opt
  101              | ID endl_opt . type_mark dimensions_list endl_opt
  102              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  103 variable_stmt: ID endl_opt . type_mark endl_opt var_init stmt_sep
  104              | ID endl_opt . type_mark stmt_sep
  105              | ID endl_opt . var_init stmt_sep
  106              | ID endl_opt . type_mark dimensions_list stmt_sep
  107              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  110 var_list: ID endl_opt . ',' endl_opt variable_endl
  112         | ID endl_opt . ',' endl_opt ID endl_opt
  115 var_list_stmt: ID endl_opt . ',' endl_opt variable_stmt
  117              | ID endl_opt . ',' endl_opt ID stmt_sep

    '='  shift, and go to state 188
    ':'  shift, and go to state 189
    ','  shift, and go to state 190

    type_mark  go to state 191
    var_init   go to state 192


State 174

   84 stmt: modifier endl_opt ID stmt_sep .

    $default  reduce using rule 84 (stmt)


State 175

  109 var_list: variable_endl ',' . endl_opt variable_endl
  111         | variable_endl ',' . endl_opt ID endl_opt
  114 var_list_stmt: variable_endl ',' . endl_opt variable_stmt
  116              | variable_endl ',' . endl_opt ID stmt_sep

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 193


State 176

  113 var_list: var_list ',' . endl_opt variable_endl
  118 var_list_stmt: var_list ',' . endl_opt variable_stmt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 194


State 177

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt . '(' endl_opt expr endl_opt ')'

    '('  shift, and go to state 195


State 178

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   51 if_stmt: IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt
   52        | IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL              shift, and go to state 39
    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 196


State 179

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   55 for_stmt: FOR endl_opt '(' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 39
    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 197


State 180

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   53 while_stmt: WHILE endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 39
    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 198


State 181

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr . endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    ENDL              shift, and go to state 39
    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 199


State 182

   67 catch_clause: CATCH . endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   68             | CATCH . endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 200


State 183

   66 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause .

    $default  reduce using rule 66 (try_catch_block)


State 184

  126 param_list_0_or_more: '(' . endl_opt param_list endl_opt ')'
  127                     | '(' . ')'

    ENDL  shift, and go to state 39
    ')'   shift, and go to state 201

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 202


State 185

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   65                     | FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 203


State 186

   49 expr: expr '[' endl_opt expr endl_opt . ']'

    ']'  shift, and go to state 204


State 187

   48 expr: expr '?' endl_opt expr endl_opt . ':' endl_opt expr

    ':'  shift, and go to state 205


State 188

  108 var_init: '=' . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 206


State 189

   97 type_mark: ':' . endl_opt type

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 207


State 190

  110 var_list: ID endl_opt ',' . endl_opt variable_endl
  112         | ID endl_opt ',' . endl_opt ID endl_opt
  115 var_list_stmt: ID endl_opt ',' . endl_opt variable_stmt
  117              | ID endl_opt ',' . endl_opt ID stmt_sep

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 208


State 191

   98 variable_endl: ID endl_opt type_mark . endl_opt var_init endl_opt
   99              | ID endl_opt type_mark . endl_opt
  101              | ID endl_opt type_mark . dimensions_list endl_opt
  102              | ID endl_opt type_mark . dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  103 variable_stmt: ID endl_opt type_mark . endl_opt var_init stmt_sep
  104              | ID endl_opt type_mark . stmt_sep
  106              | ID endl_opt type_mark . dimensions_list stmt_sep
  107              | ID endl_opt type_mark . dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    ';'   shift, and go to state 58
    ENDL  shift, and go to state 39
    '['   shift, and go to state 209

    $default  reduce using rule 7 (endl_opt)

    endl             go to state 172
    endl_opt         go to state 210
    stmt_sep         go to state 211
    dimensions       go to state 212
    dimensions_list  go to state 213


State 192

  100 variable_endl: ID endl_opt var_init . endl_opt
  105 variable_stmt: ID endl_opt var_init . stmt_sep

    ';'   shift, and go to state 58
    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 172
    endl_opt  go to state 214
    stmt_sep  go to state 215


State 193

  109 var_list: variable_endl ',' endl_opt . variable_endl
  111         | variable_endl ',' endl_opt . ID endl_opt
  114 var_list_stmt: variable_endl ',' endl_opt . variable_stmt
  116              | variable_endl ',' endl_opt . ID stmt_sep

    ID  shift, and go to state 216

    variable_endl  go to state 217
    variable_stmt  go to state 218


State 194

  113 var_list: var_list ',' endl_opt . variable_endl
  118 var_list_stmt: var_list ',' endl_opt . variable_stmt

    ID  shift, and go to state 219

    variable_endl  go to state 220
    variable_stmt  go to state 221


State 195

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' . endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 222


State 196

   51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt
   52        | IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt ELSE endl_opt stmt

    ')'  shift, and go to state 223


State 197

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 224


State 198

   53 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt

    ')'  shift, and go to state 225


State 199

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt . ')' endl_opt '{' endl_opt case_list '}' endl_opt

    ')'  shift, and go to state 226


State 200

   67 catch_clause: CATCH endl_opt . '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   68             | CATCH endl_opt . '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    '('  shift, and go to state 227


State 201

  127 param_list_0_or_more: '(' ')' .

    $default  reduce using rule 127 (param_list_0_or_more)


State 202

  126 param_list_0_or_more: '(' endl_opt . param_list endl_opt ')'

    ID  shift, and go to state 228

    param       go to state 229
    param_list  go to state 230


State 203

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   65                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . '{' endl_opt stmt_list_opt '}'

    ':'  shift, and go to state 189
    '{'  shift, and go to state 231

    type_mark  go to state 232


State 204

   49 expr: expr '[' endl_opt expr endl_opt ']' .

    $default  reduce using rule 49 (expr)


State 205

   48 expr: expr '?' endl_opt expr endl_opt ':' . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 233


State 206

  108 var_init: '=' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 234


State 207

   97 type_mark: ':' endl_opt . type

    UNKNOWN  shift, and go to state 159
    ANY      shift, and go to state 160
    NUMBER   shift, and go to state 161
    STRING   shift, and go to state 162
    VOID     shift, and go to state 163
    BOOLEAN  shift, and go to state 164
    ID       shift, and go to state 165

    type  go to state 235


State 208

  110 var_list: ID endl_opt ',' endl_opt . variable_endl
  112         | ID endl_opt ',' endl_opt . ID endl_opt
  115 var_list_stmt: ID endl_opt ',' endl_opt . variable_stmt
  117              | ID endl_opt ',' endl_opt . ID stmt_sep

    ID  shift, and go to state 236

    variable_endl  go to state 237
    variable_stmt  go to state 238


State 209

  119 dimensions: '[' . endl_opt ']'

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 239


State 210

   98 variable_endl: ID endl_opt type_mark endl_opt . var_init endl_opt
   99              | ID endl_opt type_mark endl_opt .
  103 variable_stmt: ID endl_opt type_mark endl_opt . var_init stmt_sep

    '='  shift, and go to state 188

    $default  reduce using rule 99 (variable_endl)

    var_init  go to state 240


State 211

  104 variable_stmt: ID endl_opt type_mark stmt_sep .

    $default  reduce using rule 104 (variable_stmt)


State 212

  120 dimensions_list: dimensions .

    $default  reduce using rule 120 (dimensions_list)


State 213

  101 variable_endl: ID endl_opt type_mark dimensions_list . endl_opt
  102              | ID endl_opt type_mark dimensions_list . endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  106 variable_stmt: ID endl_opt type_mark dimensions_list . stmt_sep
  107              | ID endl_opt type_mark dimensions_list . endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  121 dimensions_list: dimensions_list . dimensions

    ';'   shift, and go to state 58
    ENDL  shift, and go to state 39
    '['   shift, and go to state 209

    $default  reduce using rule 7 (endl_opt)

    endl        go to state 172
    endl_opt    go to state 241
    stmt_sep    go to state 242
    dimensions  go to state 243


State 214

  100 variable_endl: ID endl_opt var_init endl_opt .

    $default  reduce using rule 100 (variable_endl)


State 215

  105 variable_stmt: ID endl_opt var_init stmt_sep .

    $default  reduce using rule 105 (variable_stmt)


State 216

   98 variable_endl: ID . endl_opt type_mark endl_opt var_init endl_opt
   99              | ID . endl_opt type_mark endl_opt
  100              | ID . endl_opt var_init endl_opt
  101              | ID . endl_opt type_mark dimensions_list endl_opt
  102              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  103 variable_stmt: ID . endl_opt type_mark endl_opt var_init stmt_sep
  104              | ID . endl_opt type_mark stmt_sep
  105              | ID . endl_opt var_init stmt_sep
  106              | ID . endl_opt type_mark dimensions_list stmt_sep
  107              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  111 var_list: variable_endl ',' endl_opt ID . endl_opt
  116 var_list_stmt: variable_endl ',' endl_opt ID . stmt_sep

    ';'   shift, and go to state 58
    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 172
    endl_opt  go to state 244
    stmt_sep  go to state 245


State 217

  109 var_list: variable_endl ',' endl_opt variable_endl .

    $default  reduce using rule 109 (var_list)


State 218

  114 var_list_stmt: variable_endl ',' endl_opt variable_stmt .

    $default  reduce using rule 114 (var_list_stmt)


State 219

   98 variable_endl: ID . endl_opt type_mark endl_opt var_init endl_opt
   99              | ID . endl_opt type_mark endl_opt
  100              | ID . endl_opt var_init endl_opt
  101              | ID . endl_opt type_mark dimensions_list endl_opt
  102              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  103 variable_stmt: ID . endl_opt type_mark endl_opt var_init stmt_sep
  104              | ID . endl_opt type_mark stmt_sep
  105              | ID . endl_opt var_init stmt_sep
  106              | ID . endl_opt type_mark dimensions_list stmt_sep
  107              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 246


State 220

  113 var_list: var_list ',' endl_opt variable_endl .

    $default  reduce using rule 113 (var_list)


State 221

  118 var_list_stmt: var_list ',' endl_opt variable_stmt .

    $default  reduce using rule 118 (var_list_stmt)


State 222

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt . expr endl_opt ')'

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 247


State 223

   51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt
   52        | IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 248


State 224

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 249


State 225

   53 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 250


State 226

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' . endl_opt '{' endl_opt case_list '}' endl_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 251


State 227

   67 catch_clause: CATCH endl_opt '(' . endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   68             | CATCH endl_opt '(' . endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 252


State 228

  122 param: ID . endl_opt type_mark
  123      | ID . endl_opt '?' endl_opt type_mark

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 253


State 229

  124 param_list: param .

    $default  reduce using rule 124 (param_list)


State 230

  125 param_list: param_list . endl_opt ',' endl_opt param
  126 param_list_0_or_more: '(' endl_opt param_list . endl_opt ')'

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 254


State 231

   65 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 255


State 232

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 256


State 233

   48 expr: expr '?' endl_opt expr endl_opt ':' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 257


State 234

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
  108 var_init: '=' endl_opt expr .

    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 108 (var_init)


State 235

   97 type_mark: ':' endl_opt type .

    $default  reduce using rule 97 (type_mark)


State 236

   98 variable_endl: ID . endl_opt type_mark endl_opt var_init endl_opt
   99              | ID . endl_opt type_mark endl_opt
  100              | ID . endl_opt var_init endl_opt
  101              | ID . endl_opt type_mark dimensions_list endl_opt
  102              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  103 variable_stmt: ID . endl_opt type_mark endl_opt var_init stmt_sep
  104              | ID . endl_opt type_mark stmt_sep
  105              | ID . endl_opt var_init stmt_sep
  106              | ID . endl_opt type_mark dimensions_list stmt_sep
  107              | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  112 var_list: ID endl_opt ',' endl_opt ID . endl_opt
  117 var_list_stmt: ID endl_opt ',' endl_opt ID . stmt_sep

    ';'   shift, and go to state 58
    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 172
    endl_opt  go to state 258
    stmt_sep  go to state 259


State 237

  110 var_list: ID endl_opt ',' endl_opt variable_endl .

    $default  reduce using rule 110 (var_list)


State 238

  115 var_list_stmt: ID endl_opt ',' endl_opt variable_stmt .

    $default  reduce using rule 115 (var_list_stmt)


State 239

  119 dimensions: '[' endl_opt . ']'

    ']'  shift, and go to state 260


State 240

   98 variable_endl: ID endl_opt type_mark endl_opt var_init . endl_opt
  103 variable_stmt: ID endl_opt type_mark endl_opt var_init . stmt_sep

    ';'   shift, and go to state 58
    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 172
    endl_opt  go to state 261
    stmt_sep  go to state 262


State 241

  101 variable_endl: ID endl_opt type_mark dimensions_list endl_opt .
  102              | ID endl_opt type_mark dimensions_list endl_opt . '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  107 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt . '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    '='  shift, and go to state 263

    $default  reduce using rule 101 (variable_endl)


State 242

  106 variable_stmt: ID endl_opt type_mark dimensions_list stmt_sep .

    $default  reduce using rule 106 (variable_stmt)


State 243

  121 dimensions_list: dimensions_list dimensions .

    $default  reduce using rule 121 (dimensions_list)


State 244

   98 variable_endl: ID endl_opt . type_mark endl_opt var_init endl_opt
   99              | ID endl_opt . type_mark endl_opt
  100              | ID endl_opt . var_init endl_opt
  101              | ID endl_opt . type_mark dimensions_list endl_opt
  102              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  103 variable_stmt: ID endl_opt . type_mark endl_opt var_init stmt_sep
  104              | ID endl_opt . type_mark stmt_sep
  105              | ID endl_opt . var_init stmt_sep
  106              | ID endl_opt . type_mark dimensions_list stmt_sep
  107              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  111 var_list: variable_endl ',' endl_opt ID endl_opt .

    '='  shift, and go to state 188
    ':'  shift, and go to state 189

    $default  reduce using rule 111 (var_list)

    type_mark  go to state 191
    var_init   go to state 192


State 245

  116 var_list_stmt: variable_endl ',' endl_opt ID stmt_sep .

    $default  reduce using rule 116 (var_list_stmt)


State 246

   98 variable_endl: ID endl_opt . type_mark endl_opt var_init endl_opt
   99              | ID endl_opt . type_mark endl_opt
  100              | ID endl_opt . var_init endl_opt
  101              | ID endl_opt . type_mark dimensions_list endl_opt
  102              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  103 variable_stmt: ID endl_opt . type_mark endl_opt var_init stmt_sep
  104              | ID endl_opt . type_mark stmt_sep
  105              | ID endl_opt . var_init stmt_sep
  106              | ID endl_opt . type_mark dimensions_list stmt_sep
  107              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    '='  shift, and go to state 188
    ':'  shift, and go to state 189

    type_mark  go to state 191
    var_init   go to state 192


State 247

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr . endl_opt ')'

    ENDL              shift, and go to state 39
    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 264


State 248

   51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt
   52        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt ELSE endl_opt stmt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    ';'             shift, and go to state 16
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22
    '{'             shift, and go to state 23

    expr              go to state 26
    block_statement   go to state 27
    if_stmt           go to state 28
    while_stmt        go to state 29
    do_while_stmt     go to state 30
    for_stmt          go to state 31
    switch_stmt       go to state 32
    return_statement  go to state 33
    try_catch_block   go to state 35
    stmt              go to state 265
    modifier          go to state 37


State 249

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 266


State 250

   53 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    ';'             shift, and go to state 16
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22
    '{'             shift, and go to state 23

    expr              go to state 26
    block_statement   go to state 27
    if_stmt           go to state 28
    while_stmt        go to state 29
    do_while_stmt     go to state 30
    for_stmt          go to state 31
    switch_stmt       go to state 32
    return_statement  go to state 33
    try_catch_block   go to state 35
    stmt              go to state 267
    modifier          go to state 37


State 251

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt . '{' endl_opt case_list '}' endl_opt

    '{'  shift, and go to state 268


State 252

   67 catch_clause: CATCH endl_opt '(' endl_opt . ID endl_opt ')' endl_opt block_statement endl_opt
   68             | CATCH endl_opt '(' endl_opt . ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ID  shift, and go to state 269


State 253

  122 param: ID endl_opt . type_mark
  123      | ID endl_opt . '?' endl_opt type_mark

    '?'  shift, and go to state 270
    ':'  shift, and go to state 189

    type_mark  go to state 271


State 254

  125 param_list: param_list endl_opt . ',' endl_opt param
  126 param_list_0_or_more: '(' endl_opt param_list endl_opt . ')'

    ')'  shift, and go to state 272
    ','  shift, and go to state 273


State 255

   65 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    ';'             shift, and go to state 16
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22
    '{'             shift, and go to state 23

    $default  reduce using rule 71 (stmt_list_opt)

    expr              go to state 26
    block_statement   go to state 27
    if_stmt           go to state 28
    while_stmt        go to state 29
    do_while_stmt     go to state 30
    for_stmt          go to state 31
    switch_stmt       go to state 32
    return_statement  go to state 33
    try_catch_block   go to state 35
    stmt_list_opt     go to state 274
    stmt_list         go to state 104
    stmt              go to state 105
    modifier          go to state 37


State 256

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt . '{' endl_opt stmt_list_opt '}'

    '{'  shift, and go to state 275


State 257

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   48     | expr '?' endl_opt expr endl_opt ':' endl_opt expr .
   49     | expr . '[' endl_opt expr endl_opt ']'

    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 48 (expr)


State 258

   98 variable_endl: ID endl_opt . type_mark endl_opt var_init endl_opt
   99              | ID endl_opt . type_mark endl_opt
  100              | ID endl_opt . var_init endl_opt
  101              | ID endl_opt . type_mark dimensions_list endl_opt
  102              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  103 variable_stmt: ID endl_opt . type_mark endl_opt var_init stmt_sep
  104              | ID endl_opt . type_mark stmt_sep
  105              | ID endl_opt . var_init stmt_sep
  106              | ID endl_opt . type_mark dimensions_list stmt_sep
  107              | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  112 var_list: ID endl_opt ',' endl_opt ID endl_opt .

    '='  shift, and go to state 188
    ':'  shift, and go to state 189

    $default  reduce using rule 112 (var_list)

    type_mark  go to state 191
    var_init   go to state 192


State 259

  117 var_list_stmt: ID endl_opt ',' endl_opt ID stmt_sep .

    $default  reduce using rule 117 (var_list_stmt)


State 260

  119 dimensions: '[' endl_opt ']' .

    $default  reduce using rule 119 (dimensions)


State 261

   98 variable_endl: ID endl_opt type_mark endl_opt var_init endl_opt .

    $default  reduce using rule 98 (variable_endl)


State 262

  103 variable_stmt: ID endl_opt type_mark endl_opt var_init stmt_sep .

    $default  reduce using rule 103 (variable_stmt)


State 263

  102 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' . endl_opt '[' endl_opt expr_list_opt ']' endl_opt
  107 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' . endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 276


State 264

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt . ')'

    ')'  shift, and go to state 277


State 265

   51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .
   52        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt stmt

    ELSE  shift, and go to state 278

    ELSE      [reduce using rule 51 (if_stmt)]
    $default  reduce using rule 51 (if_stmt)

    shift/reduce conflict on token ELSE:
       51 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .
       52 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt stmt
      Example: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE stmt
      Shift derivation
        if_stmt
        `-> 51: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
                                                                    `-> 76: if_stmt
                                                                            `-> 52: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt       stmt
                                                                                                                                                    `-> 52: %empty
      Reduce derivation
        if_stmt
        `-> 52: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt                                                                       ELSE endl_opt       stmt
                                                                    `-> 76: if_stmt                                                                 `-> 52: %empty
                                                                            `-> 51: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .



State 266

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 39
    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 279


State 267

   53 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 53 (while_stmt)


State 268

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' . endl_opt case_list '}' endl_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 280


State 269

   67 catch_clause: CATCH endl_opt '(' endl_opt ID . endl_opt ')' endl_opt block_statement endl_opt
   68             | CATCH endl_opt '(' endl_opt ID . endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 281


State 270

  123 param: ID endl_opt '?' . endl_opt type_mark

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 282


State 271

  122 param: ID endl_opt type_mark .

    $default  reduce using rule 122 (param)


State 272

  126 param_list_0_or_more: '(' endl_opt param_list endl_opt ')' .

    $default  reduce using rule 126 (param_list_0_or_more)


State 273

  125 param_list: param_list endl_opt ',' . endl_opt param

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 283


State 274

   65 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 284


State 275

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 285


State 276

  102 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt . '[' endl_opt expr_list_opt ']' endl_opt
  107 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt . '[' endl_opt expr_list_opt ']' stmt_sep

    '['  shift, and go to state 286


State 277

   54 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')' .

    $default  reduce using rule 54 (do_while_stmt)


State 278

   52 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE . endl_opt stmt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 287


State 279

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 288


State 280

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt . case_list '}' endl_opt

    DEFAULT  shift, and go to state 289
    CASE     shift, and go to state 290

    case_list  go to state 291
    case_stmt  go to state 292


State 281

   67 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt . ')' endl_opt block_statement endl_opt
   68             | CATCH endl_opt '(' endl_opt ID endl_opt . ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ':'  shift, and go to state 293
    ')'  shift, and go to state 294


State 282

  123 param: ID endl_opt '?' endl_opt . type_mark

    ':'  shift, and go to state 189

    type_mark  go to state 295


State 283

  125 param_list: param_list endl_opt ',' endl_opt . param

    ID  shift, and go to state 228

    param  go to state 296


State 284

   65 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 65 (function_declaration)


State 285

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    ';'             shift, and go to state 16
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22
    '{'             shift, and go to state 23

    $default  reduce using rule 71 (stmt_list_opt)

    expr              go to state 26
    block_statement   go to state 27
    if_stmt           go to state 28
    while_stmt        go to state 29
    do_while_stmt     go to state 30
    for_stmt          go to state 31
    switch_stmt       go to state 32
    return_statement  go to state 33
    try_catch_block   go to state 35
    stmt_list_opt     go to state 297
    stmt_list         go to state 104
    stmt              go to state 105
    modifier          go to state 37


State 286

  102 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' . endl_opt expr_list_opt ']' endl_opt
  107 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' . endl_opt expr_list_opt ']' stmt_sep

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 298


State 287

   52 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt . stmt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    ';'             shift, and go to state 16
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22
    '{'             shift, and go to state 23

    expr              go to state 26
    block_statement   go to state 27
    if_stmt           go to state 28
    while_stmt        go to state 29
    do_while_stmt     go to state 30
    for_stmt          go to state 31
    switch_stmt       go to state 32
    return_statement  go to state 33
    try_catch_block   go to state 35
    stmt              go to state 299
    modifier          go to state 37


State 288

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 300


State 289

   60 case_stmt: DEFAULT . endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 301


State 290

   59 case_stmt: CASE . endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 302


State 291

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list . '}' endl_opt
   58 case_list: case_list . case_stmt

    DEFAULT  shift, and go to state 289
    CASE     shift, and go to state 290
    '}'      shift, and go to state 303

    case_stmt  go to state 304


State 292

   57 case_list: case_stmt .

    $default  reduce using rule 57 (case_list)


State 293

   68 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' . endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 305


State 294

   67 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' . endl_opt block_statement endl_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 306


State 295

  123 param: ID endl_opt '?' endl_opt type_mark .

    $default  reduce using rule 123 (param)


State 296

  125 param_list: param_list endl_opt ',' endl_opt param .

    $default  reduce using rule 125 (param_list)


State 297

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 307


State 298

  102 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt . expr_list_opt ']' endl_opt
  107 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt . expr_list_opt ']' stmt_sep

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 308
    expr_list_opt  go to state 309
    expr           go to state 310


State 299

   52 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt .

    $default  reduce using rule 52 (if_stmt)


State 300

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 311


State 301

   60 case_stmt: DEFAULT endl_opt . ':' endl_opt stmt_list_opt break_opt

    ':'  shift, and go to state 312


State 302

   59 case_stmt: CASE endl_opt . expr endl_opt ':' endl_opt stmt_list_opt break_opt

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 313


State 303

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' . endl_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 314


State 304

   58 case_list: case_list case_stmt .

    $default  reduce using rule 58 (case_list)


State 305

   68 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt . error_type endl_opt ')' endl_opt block_statement endl_opt

    UNKNOWN  shift, and go to state 315
    ANY      shift, and go to state 316

    error_type  go to state 317


State 306

   67 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt . block_statement endl_opt

    '{'  shift, and go to state 23

    block_statement  go to state 318


State 307

   64 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 64 (function_declaration)


State 308

   12 expr_list: expr_list . endl_opt ',' endl_opt expr
   14 expr_list_opt: expr_list . endl_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 319


State 309

  102 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt . ']' endl_opt
  107 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt . ']' stmt_sep

    ']'  shift, and go to state 320


State 310

   11 expr_list: expr .
   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 11 (expr_list)


State 311

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 39
    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 321


State 312

   60 case_stmt: DEFAULT endl_opt ':' . endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 322


State 313

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   59 case_stmt: CASE endl_opt expr . endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL              shift, and go to state 39
    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 323


State 314

   56 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt .

    $default  reduce using rule 56 (switch_stmt)


State 315

   69 error_type: UNKNOWN .

    $default  reduce using rule 69 (error_type)


State 316

   70 error_type: ANY .

    $default  reduce using rule 70 (error_type)


State 317

   68 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type . endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 324


State 318

   67 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement . endl_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 325


State 319

   12 expr_list: expr_list endl_opt . ',' endl_opt expr
   14 expr_list_opt: expr_list endl_opt .

    ','  shift, and go to state 326

    $default  reduce using rule 14 (expr_list_opt)


State 320

  102 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' . endl_opt
  107 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' . stmt_sep

    ';'   shift, and go to state 58
    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 172
    endl_opt  go to state 327
    stmt_sep  go to state 328


State 321

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ')' endl_opt stmt

    ')'  shift, and go to state 329


State 322

   60 case_stmt: DEFAULT endl_opt ':' endl_opt . stmt_list_opt break_opt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    ';'             shift, and go to state 16
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22
    '{'             shift, and go to state 23

    $default  reduce using rule 71 (stmt_list_opt)

    expr              go to state 26
    block_statement   go to state 27
    if_stmt           go to state 28
    while_stmt        go to state 29
    do_while_stmt     go to state 30
    for_stmt          go to state 31
    switch_stmt       go to state 32
    return_statement  go to state 33
    try_catch_block   go to state 35
    stmt_list_opt     go to state 330
    stmt_list         go to state 104
    stmt              go to state 105
    modifier          go to state 37


State 323

   59 case_stmt: CASE endl_opt expr endl_opt . ':' endl_opt stmt_list_opt break_opt

    ':'  shift, and go to state 331


State 324

   68 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt . ')' endl_opt block_statement endl_opt

    ')'  shift, and go to state 332


State 325

   67 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt .

    $default  reduce using rule 67 (catch_clause)


State 326

   12 expr_list: expr_list endl_opt ',' . endl_opt expr

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 333


State 327

  102 variable_endl: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt .

    $default  reduce using rule 102 (variable_endl)


State 328

  107 variable_stmt: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep .

    $default  reduce using rule 107 (variable_stmt)


State 329

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' . endl_opt stmt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 334


State 330

   60 case_stmt: DEFAULT endl_opt ':' endl_opt stmt_list_opt . break_opt

    BREAK  shift, and go to state 335

    $default  reduce using rule 61 (break_opt)

    break_opt  go to state 336


State 331

   59 case_stmt: CASE endl_opt expr endl_opt ':' . endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 337


State 332

   68 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' . endl_opt block_statement endl_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 338


State 333

   12 expr_list: expr_list endl_opt ',' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22

    expr  go to state 339


State 334

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt . stmt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    ';'             shift, and go to state 16
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22
    '{'             shift, and go to state 23

    expr              go to state 26
    block_statement   go to state 27
    if_stmt           go to state 28
    while_stmt        go to state 29
    do_while_stmt     go to state 30
    for_stmt          go to state 31
    switch_stmt       go to state 32
    return_statement  go to state 33
    try_catch_block   go to state 35
    stmt              go to state 340
    modifier          go to state 37


State 335

   62 break_opt: BREAK . stmt_sep

    ';'   shift, and go to state 58
    ENDL  shift, and go to state 39

    endl      go to state 83
    stmt_sep  go to state 341


State 336

   60 case_stmt: DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt .

    $default  reduce using rule 60 (case_stmt)


State 337

   59 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt . stmt_list_opt break_opt

    RETURN          shift, and go to state 1
    DO              shift, and go to state 2
    IF              shift, and go to state 3
    FOR             shift, and go to state 4
    WHILE           shift, and go to state 5
    SWITCH          shift, and go to state 6
    TRY             shift, and go to state 7
    LET             shift, and go to state 8
    CONST           shift, and go to state 9
    NUMBER_LITERAL  shift, and go to state 11
    STRING_LITERAL  shift, and go to state 12
    TRUE_LITERAL    shift, and go to state 13
    FALSE_LITERAL   shift, and go to state 14
    ID              shift, and go to state 15
    ';'             shift, and go to state 16
    '+'             shift, and go to state 17
    '-'             shift, and go to state 18
    PREF_INCREMENT  shift, and go to state 19
    PREF_DECREMENT  shift, and go to state 20
    NOT             shift, and go to state 21
    '('             shift, and go to state 22
    '{'             shift, and go to state 23

    $default  reduce using rule 71 (stmt_list_opt)

    expr              go to state 26
    block_statement   go to state 27
    if_stmt           go to state 28
    while_stmt        go to state 29
    do_while_stmt     go to state 30
    for_stmt          go to state 31
    switch_stmt       go to state 32
    return_statement  go to state 33
    try_catch_block   go to state 35
    stmt_list_opt     go to state 342
    stmt_list         go to state 104
    stmt              go to state 105
    modifier          go to state 37


State 338

   68 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt . block_statement endl_opt

    '{'  shift, and go to state 23

    block_statement  go to state 343


State 339

   12 expr_list: expr_list endl_opt ',' endl_opt expr .
   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'

    '='               shift, and go to state 59
    PLUS_ASSIGN       shift, and go to state 60
    MINUS_ASSIGN      shift, and go to state 61
    MUL_ASSIGN        shift, and go to state 62
    DIV_ASSIGN        shift, and go to state 63
    MOD_ASSIGN        shift, and go to state 64
    '['               shift, and go to state 65
    '?'               shift, and go to state 66
    OR                shift, and go to state 67
    AND               shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    '<'               shift, and go to state 71
    '>'               shift, and go to state 72
    LESS_OR_EQUAL     shift, and go to state 73
    GREATER_OR_EQUAL  shift, and go to state 74
    AS                shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77
    '*'               shift, and go to state 78
    '/'               shift, and go to state 79
    '%'               shift, and go to state 80
    POST_INCREMENT    shift, and go to state 81
    POST_DECREMENT    shift, and go to state 82

    $default  reduce using rule 12 (expr_list)


State 340

   55 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 55 (for_stmt)


State 341

   62 break_opt: BREAK stmt_sep .

    $default  reduce using rule 62 (break_opt)


State 342

   59 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt . break_opt

    BREAK  shift, and go to state 335

    $default  reduce using rule 61 (break_opt)

    break_opt  go to state 344


State 343

   68 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement . endl_opt

    ENDL  shift, and go to state 39

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 40
    endl_opt  go to state 345


State 344

   59 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt .

    $default  reduce using rule 59 (case_stmt)


State 345

   68 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt .

    $default  reduce using rule 68 (catch_clause)
