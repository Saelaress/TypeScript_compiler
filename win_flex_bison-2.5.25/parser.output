Terminals unused in grammar

    INTERFACE
    CONSTRUCTOR
    NEW
    THIS
    DELETE
    EXPORT
    OF
    IN
    CONTINUE
    INCREMENT
    DECREMENT
    DECLARE
    IS


State 265 conflicts: 1 shift/reduce
State 295 conflicts: 1 shift/reduce
State 318 conflicts: 1 shift/reduce
State 331 conflicts: 1 shift/reduce
State 335 conflicts: 1 shift/reduce
State 339 conflicts: 1 shift/reduce
State 362 conflicts: 1 shift/reduce
State 393 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_elem
    2        | program program_elem

    3 program_elem: class_declaration
    4             | function_declaration

    5 endl: ENDL
    6     | endl ENDL

    7 endl_opt: %empty
    8         | endl

    9 stmt_sep: ';'
   10         | endl

   11 expr_list: expr
   12          | expr_list endl_opt ',' endl_opt expr

   13 expr_list_opt: %empty
   14              | expr_list endl_opt

   15 expr: expr POST_DECREMENT
   16     | PREF_DECREMENT endl_opt expr
   17     | expr POST_INCREMENT
   18     | PREF_INCREMENT endl_opt expr
   19     | expr AS endl_opt type
   20     | '-' endl_opt expr
   21     | '+' endl_opt expr
   22     | NUMBER_LITERAL
   23     | STRING_LITERAL
   24     | TRUE_LITERAL
   25     | FALSE_LITERAL
   26     | ID
   27     | '(' endl_opt expr ')'
   28     | expr '+' endl_opt expr
   29     | expr '-' endl_opt expr
   30     | expr '*' endl_opt expr
   31     | expr '/' endl_opt expr
   32     | expr '%' endl_opt expr
   33     | expr '<' endl_opt expr
   34     | expr '>' endl_opt expr
   35     | expr LESS_OR_EQUAL endl_opt expr
   36     | expr GREATER_OR_EQUAL endl_opt expr
   37     | expr EQUALS endl_opt expr
   38     | expr NOT_EQUALS endl_opt expr
   39     | expr '=' endl_opt expr
   40     | expr PLUS_ASSIGN endl_opt expr
   41     | expr MINUS_ASSIGN endl_opt expr
   42     | expr MUL_ASSIGN endl_opt expr
   43     | expr DIV_ASSIGN endl_opt expr
   44     | expr MOD_ASSIGN endl_opt expr
   45     | NOT endl_opt expr
   46     | expr AND endl_opt expr
   47     | expr OR endl_opt expr
   48     | expr '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr '[' endl_opt expr endl_opt ']'
   50     | expr '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr '.' endl_opt ID

   52 block_statement: '{' endl_opt stmt_list_opt '}'

   53 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
   54        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

   55 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt

   56 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')'

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

   59 case_list: case_stmt
   60          | case_list case_stmt

   61 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt
   62          | DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt

   63 break_opt: %empty
   64          | BREAK stmt_sep

   65 return_statement: RETURN expr stmt_sep

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   67                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

   68 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause

   69 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   70             | CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

   71 error_type: UNKNOWN
   72           | ANY

   73 stmt_list_opt: %empty
   74              | stmt_list

   75 stmt_list: stmt
   76          | stmt_list stmt

   77 stmt: expr stmt_sep
   78     | if_stmt
   79     | while_stmt
   80     | for_stmt
   81     | do_while_stmt stmt_sep
   82     | switch_stmt
   83     | try_catch_block
   84     | block_statement endl_opt
   85     | modifier endl_opt variable stmt_sep
   86     | modifier endl_opt ID stmt_sep
   87     | modifier endl_opt var_list stmt_sep
   88     | enum_declaration
   89     | return_statement
   90     | ';' endl_opt

   91 modifier: LET
   92         | CONST

   93 type: NUMBER
   94     | STRING
   95     | BOOLEAN
   96     | ANY
   97     | UNKNOWN
   98     | VOID
   99     | ID

  100 type_mark: ':' endl_opt type

  101 type_mark_opt: %empty
  102              | type_mark

  103 variable: ID endl_opt type_mark endl_opt var_init
  104         | ID endl_opt type_mark
  105         | ID endl_opt var_init
  106         | ID endl_opt type_mark dimensions_list
  107         | ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'

  108 var_init: '=' endl_opt expr

  109 var_list: variable endl_opt ',' endl_opt variable
  110         | ID endl_opt ',' endl_opt variable
  111         | variable endl_opt ',' endl_opt ID
  112         | ID endl_opt ',' endl_opt ID
  113         | var_list endl_opt ',' endl_opt variable

  114 dimensions: '[' endl_opt ']'

  115 dimensions_list: dimensions
  116                | dimensions_list dimensions

  117 param: ID endl_opt type_mark
  118      | ID endl_opt '?' endl_opt type_mark

  119 param_list: param
  120           | param_list endl_opt ',' endl_opt param

  121 param_list_0_or_more: '(' endl_opt param_list endl_opt ')'
  122                     | '(' ')'

  123 implements_decl: IMPLEMENTS endl_opt ID
  124                | implements_decl endl_opt ',' endl_opt ID

  125 readonly_opt: %empty
  126             | READONLY endl_opt

  127 static_opt: %empty
  128           | STATIC endl_opt

  129 visibility: PRIVATE
  130           | PROTECTED
  131           | PUBLIC

  132 visibility_opt: %empty
  133               | visibility endl_opt

  134 class_member: visibility_opt static_opt readonly_opt ID endl_opt type_mark endl_opt var_init stmt_sep
  135             | visibility_opt static_opt readonly_opt ID stmt_sep
  136             | visibility_opt static_opt readonly_opt ID endl_opt type_mark stmt_sep
  137             | visibility_opt static_opt readonly_opt ID endl_opt var_init stmt_sep
  138             | visibility_opt static_opt readonly_opt ID endl_opt type_mark dimensions_list stmt_sep
  139             | visibility_opt static_opt readonly_opt ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  140             | visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' endl_opt
  141             | visibility_opt static_opt class_declaration endl_opt

  142 class_member_list: class_member
  143                  | class_member_list class_member

  144 class_body: %empty
  145           | class_member_list

  146 class_declaration: CLASS endl_opt ID endl_opt '{' endl_opt class_body '}'
  147                  | CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  148                  | CLASS endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt class_body '}'
  149                  | CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

  150 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}'

  151 id_list: ID endl_opt var_init
  152        | ID
  153        | id_list endl_opt ',' endl_opt ID
  154        | id_list endl_opt ',' endl_opt ID endl_opt var_init


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 32
    '(' (40) 27 50 53 54 55 56 57 58 69 70 121 122
    ')' (41) 27 50 53 54 55 56 57 58 69 70 121 122
    '*' (42) 30
    '+' (43) 21 28
    ',' (44) 12 109 110 111 112 113 120 124 153 154
    '-' (45) 20 29
    '.' (46) 50 51
    '/' (47) 31
    ':' (58) 48 61 62 70 100
    ';' (59) 9 57 90
    '<' (60) 33
    '=' (61) 39 107 108 139
    '>' (62) 34
    '?' (63) 48 118
    '[' (91) 49 107 114 139
    ']' (93) 49 107 114 139
    '{' (123) 52 58 66 67 140 146 147 148 149 150
    '}' (125) 52 58 66 67 140 146 147 148 149 150
    error (256)
    INTERFACE (258)
    IMPLEMENTS (259) 123
    CONSTRUCTOR (260)
    NEW (261)
    EXTENDS (262) 147 149
    THIS (263)
    CLASS (264) 146 147 148 149
    STATIC (265) 128
    RETURN (266) 65
    DELETE (267)
    EXPORT (268)
    PUBLIC (269) 131
    PROTECTED (270) 130
    PRIVATE (271) 129
    READONLY (272) 126
    DO (273) 56
    IF (274) 53 54
    ELSE (275) 54
    FOR (276) 57
    OF (277)
    IN (278)
    WHILE (279) 55 56
    BREAK (280) 64
    CONTINUE (281)
    DEFAULT (282) 62
    SWITCH (283) 58
    CASE (284) 61
    TRY (285) 68
    CATCH (286) 69 70
    INCREMENT (287)
    DECREMENT (288)
    LET (289) 91
    CONST (290) 92
    FUNC (291) 66 67
    DECLARE (292)
    UNKNOWN (293) 71 97
    ANY (294) 72 96
    NUMBER (295) 93
    STRING (296) 94
    VOID (297) 98
    BOOLEAN (298) 95
    ENUM (299) 150
    NUMBER_LITERAL (300) 22
    STRING_LITERAL (301) 23
    TRUE_LITERAL (302) 24
    FALSE_LITERAL (303) 25
    ID (304) 26 50 51 66 67 69 70 86 99 103 104 105 106 107 110 111 112 117 118 123 124 134 135 136 137 138 139 140 146 147 148 149 150 151 152 153 154
    ENDL (305) 5 6
    PLUS_ASSIGN (306) 40
    MINUS_ASSIGN (307) 41
    MUL_ASSIGN (308) 42
    DIV_ASSIGN (309) 43
    MOD_ASSIGN (310) 44
    OR (311) 47
    AND (312) 46
    EQUALS (313) 37
    NOT_EQUALS (314) 38
    LESS_OR_EQUAL (315) 35
    GREATER_OR_EQUAL (316) 36
    IS (317)
    AS (318) 19
    PREF_INCREMENT (319) 18
    PREF_DECREMENT (320) 16
    POST_INCREMENT (321) 17
    POST_DECREMENT (322) 15
    NOT (323) 45
    UPLUS (324)
    UMINUS (325)


Nonterminals, with rules where they appear

    $accept (90)
        on left: 0
    program (91)
        on left: 1 2
        on right: 0 2
    program_elem (92)
        on left: 3 4
        on right: 1 2
    endl (93)
        on left: 5 6
        on right: 6 8 10
    endl_opt (94)
        on left: 7 8
        on right: 12 14 16 18 19 20 21 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 61 62 66 67 68 69 70 84 85 86 87 90 100 103 104 105 106 107 108 109 110 111 112 113 114 117 118 120 121 123 124 126 128 133 134 136 137 138 139 140 141 146 147 148 149 150 151 153 154
    stmt_sep (95)
        on left: 9 10
        on right: 64 65 77 81 85 86 87 134 135 136 137 138 139
    expr_list (96)
        on left: 11 12
        on right: 12 14
    expr_list_opt (97)
        on left: 13 14
        on right: 50 107 139
    expr (98)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
        on right: 11 12 15 16 17 18 19 20 21 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 53 54 55 56 57 58 61 65 77 108
    block_statement (99)
        on left: 52
        on right: 68 69 70 84
    if_stmt (100)
        on left: 53 54
        on right: 78
    while_stmt (101)
        on left: 55
        on right: 79
    do_while_stmt (102)
        on left: 56
        on right: 81
    for_stmt (103)
        on left: 57
        on right: 80
    switch_stmt (104)
        on left: 58
        on right: 82
    case_list (105)
        on left: 59 60
        on right: 58 60
    case_stmt (106)
        on left: 61 62
        on right: 59 60
    break_opt (107)
        on left: 63 64
        on right: 61 62
    return_statement (108)
        on left: 65
        on right: 89
    function_declaration (109)
        on left: 66 67
        on right: 4
    try_catch_block (110)
        on left: 68
        on right: 83
    catch_clause (111)
        on left: 69 70
        on right: 68
    error_type (112)
        on left: 71 72
        on right: 70
    stmt_list_opt (113)
        on left: 73 74
        on right: 52 61 62 66 67 140
    stmt_list (114)
        on left: 75 76
        on right: 74 76
    stmt (115)
        on left: 77 78 79 80 81 82 83 84 85 86 87 88 89 90
        on right: 53 54 55 56 57 75 76
    modifier (116)
        on left: 91 92
        on right: 85 86 87
    type (117)
        on left: 93 94 95 96 97 98 99
        on right: 19 100
    type_mark (118)
        on left: 100
        on right: 66 102 103 104 106 107 117 118 134 136 138 139
    type_mark_opt (119)
        on left: 101 102
        on right: 140
    variable (120)
        on left: 103 104 105 106 107
        on right: 85 109 110 111 113
    var_init (121)
        on left: 108
        on right: 103 105 134 137 151 154
    var_list (122)
        on left: 109 110 111 112 113
        on right: 87 113
    dimensions (123)
        on left: 114
        on right: 115 116
    dimensions_list (124)
        on left: 115 116
        on right: 106 107 116 138 139
    param (125)
        on left: 117 118
        on right: 119 120
    param_list (126)
        on left: 119 120
        on right: 120 121
    param_list_0_or_more (127)
        on left: 121 122
        on right: 66 67 140
    implements_decl (128)
        on left: 123 124
        on right: 124 148 149
    readonly_opt (129)
        on left: 125 126
        on right: 134 135 136 137 138 139 140
    static_opt (130)
        on left: 127 128
        on right: 134 135 136 137 138 139 140 141
    visibility (131)
        on left: 129 130 131
        on right: 133
    visibility_opt (132)
        on left: 132 133
        on right: 134 135 136 137 138 139 140 141
    class_member (133)
        on left: 134 135 136 137 138 139 140 141
        on right: 142 143
    class_member_list (134)
        on left: 142 143
        on right: 143 145
    class_body (135)
        on left: 144 145
        on right: 146 147 148 149
    class_declaration (136)
        on left: 146 147 148 149
        on right: 3 141
    enum_declaration (137)
        on left: 150
        on right: 88
    id_list (138)
        on left: 151 152 153 154
        on right: 150 153 154


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1
    FUNC   shift, and go to state 2

    program               go to state 3
    program_elem          go to state 4
    function_declaration  go to state 5
    class_declaration     go to state 6


State 1

  146 class_declaration: CLASS . endl_opt ID endl_opt '{' endl_opt class_body '}'
  147                  | CLASS . endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  148                  | CLASS . endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt class_body '}'
  149                  | CLASS . endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 9


State 2

   66 function_declaration: FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   67                     | FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 10


State 3

    0 $accept: program . $end
    2 program: program . program_elem

    $end   shift, and go to state 11
    CLASS  shift, and go to state 1
    FUNC   shift, and go to state 2

    program_elem          go to state 12
    function_declaration  go to state 5
    class_declaration     go to state 6


State 4

    1 program: program_elem .

    $default  reduce using rule 1 (program)


State 5

    4 program_elem: function_declaration .

    $default  reduce using rule 4 (program_elem)


State 6

    3 program_elem: class_declaration .

    $default  reduce using rule 3 (program_elem)


State 7

    5 endl: ENDL .

    $default  reduce using rule 5 (endl)


State 8

    6 endl: endl . ENDL
    8 endl_opt: endl .

    ENDL  shift, and go to state 13

    $default  reduce using rule 8 (endl_opt)


State 9

  146 class_declaration: CLASS endl_opt . ID endl_opt '{' endl_opt class_body '}'
  147                  | CLASS endl_opt . ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  148                  | CLASS endl_opt . ID endl_opt implements_decl endl_opt '{' endl_opt class_body '}'
  149                  | CLASS endl_opt . ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    ID  shift, and go to state 14


State 10

   66 function_declaration: FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   67                     | FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ID  shift, and go to state 15


State 11

    0 $accept: program $end .

    $default  accept


State 12

    2 program: program program_elem .

    $default  reduce using rule 2 (program)


State 13

    6 endl: endl ENDL .

    $default  reduce using rule 6 (endl)


State 14

  146 class_declaration: CLASS endl_opt ID . endl_opt '{' endl_opt class_body '}'
  147                  | CLASS endl_opt ID . endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  148                  | CLASS endl_opt ID . endl_opt implements_decl endl_opt '{' endl_opt class_body '}'
  149                  | CLASS endl_opt ID . endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 16


State 15

   66 function_declaration: FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   67                     | FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 17


State 16

  146 class_declaration: CLASS endl_opt ID endl_opt . '{' endl_opt class_body '}'
  147                  | CLASS endl_opt ID endl_opt . EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  148                  | CLASS endl_opt ID endl_opt . implements_decl endl_opt '{' endl_opt class_body '}'
  149                  | CLASS endl_opt ID endl_opt . EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    IMPLEMENTS  shift, and go to state 18
    EXTENDS     shift, and go to state 19
    '{'         shift, and go to state 20

    implements_decl  go to state 21


State 17

   66 function_declaration: FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   67                     | FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    '('  shift, and go to state 22

    param_list_0_or_more  go to state 23


State 18

  123 implements_decl: IMPLEMENTS . endl_opt ID

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 24


State 19

  147 class_declaration: CLASS endl_opt ID endl_opt EXTENDS . endl_opt ID endl_opt '{' endl_opt class_body '}'
  149                  | CLASS endl_opt ID endl_opt EXTENDS . endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 25


State 20

  146 class_declaration: CLASS endl_opt ID endl_opt '{' . endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 26


State 21

  124 implements_decl: implements_decl . endl_opt ',' endl_opt ID
  148 class_declaration: CLASS endl_opt ID endl_opt implements_decl . endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 27


State 22

  121 param_list_0_or_more: '(' . endl_opt param_list endl_opt ')'
  122                     | '(' . ')'

    ENDL  shift, and go to state 7
    ')'   shift, and go to state 28

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 29


State 23

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   67                     | FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 30


State 24

  123 implements_decl: IMPLEMENTS endl_opt . ID

    ID  shift, and go to state 31


State 25

  147 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt . ID endl_opt '{' endl_opt class_body '}'
  149                  | CLASS endl_opt ID endl_opt EXTENDS endl_opt . ID implements_decl endl_opt '{' endl_opt class_body '}'

    ID  shift, and go to state 32


State 26

  146 class_declaration: CLASS endl_opt ID endl_opt '{' endl_opt . class_body '}'

    PUBLIC     shift, and go to state 33
    PROTECTED  shift, and go to state 34
    PRIVATE    shift, and go to state 35

    '}'       reduce using rule 144 (class_body)
    $default  reduce using rule 132 (visibility_opt)

    visibility         go to state 36
    visibility_opt     go to state 37
    class_member       go to state 38
    class_member_list  go to state 39
    class_body         go to state 40


State 27

  124 implements_decl: implements_decl endl_opt . ',' endl_opt ID
  148 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt . '{' endl_opt class_body '}'

    ','  shift, and go to state 41
    '{'  shift, and go to state 42


State 28

  122 param_list_0_or_more: '(' ')' .

    $default  reduce using rule 122 (param_list_0_or_more)


State 29

  121 param_list_0_or_more: '(' endl_opt . param_list endl_opt ')'

    ID  shift, and go to state 43

    param       go to state 44
    param_list  go to state 45


State 30

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   67                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . '{' endl_opt stmt_list_opt '}'

    ':'  shift, and go to state 46
    '{'  shift, and go to state 47

    type_mark  go to state 48


State 31

  123 implements_decl: IMPLEMENTS endl_opt ID .

    $default  reduce using rule 123 (implements_decl)


State 32

  147 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID . endl_opt '{' endl_opt class_body '}'
  149                  | CLASS endl_opt ID endl_opt EXTENDS endl_opt ID . implements_decl endl_opt '{' endl_opt class_body '}'

    IMPLEMENTS  shift, and go to state 18
    ENDL        shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl             go to state 8
    endl_opt         go to state 49
    implements_decl  go to state 50


State 33

  131 visibility: PUBLIC .

    $default  reduce using rule 131 (visibility)


State 34

  130 visibility: PROTECTED .

    $default  reduce using rule 130 (visibility)


State 35

  129 visibility: PRIVATE .

    $default  reduce using rule 129 (visibility)


State 36

  133 visibility_opt: visibility . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 51


State 37

  134 class_member: visibility_opt . static_opt readonly_opt ID endl_opt type_mark endl_opt var_init stmt_sep
  135             | visibility_opt . static_opt readonly_opt ID stmt_sep
  136             | visibility_opt . static_opt readonly_opt ID endl_opt type_mark stmt_sep
  137             | visibility_opt . static_opt readonly_opt ID endl_opt var_init stmt_sep
  138             | visibility_opt . static_opt readonly_opt ID endl_opt type_mark dimensions_list stmt_sep
  139             | visibility_opt . static_opt readonly_opt ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  140             | visibility_opt . static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' endl_opt
  141             | visibility_opt . static_opt class_declaration endl_opt

    STATIC  shift, and go to state 52

    $default  reduce using rule 127 (static_opt)

    static_opt  go to state 53


State 38

  142 class_member_list: class_member .

    $default  reduce using rule 142 (class_member_list)


State 39

  143 class_member_list: class_member_list . class_member
  145 class_body: class_member_list .

    PUBLIC     shift, and go to state 33
    PROTECTED  shift, and go to state 34
    PRIVATE    shift, and go to state 35

    '}'       reduce using rule 145 (class_body)
    $default  reduce using rule 132 (visibility_opt)

    visibility      go to state 36
    visibility_opt  go to state 37
    class_member    go to state 54


State 40

  146 class_declaration: CLASS endl_opt ID endl_opt '{' endl_opt class_body . '}'

    '}'  shift, and go to state 55


State 41

  124 implements_decl: implements_decl endl_opt ',' . endl_opt ID

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 56


State 42

  148 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt '{' . endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 57


State 43

  117 param: ID . endl_opt type_mark
  118      | ID . endl_opt '?' endl_opt type_mark

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 58


State 44

  119 param_list: param .

    $default  reduce using rule 119 (param_list)


State 45

  120 param_list: param_list . endl_opt ',' endl_opt param
  121 param_list_0_or_more: '(' endl_opt param_list . endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 59


State 46

  100 type_mark: ':' . endl_opt type

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 60


State 47

   67 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 61


State 48

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 62


State 49

  147 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt . '{' endl_opt class_body '}'

    '{'  shift, and go to state 63


State 50

  124 implements_decl: implements_decl . endl_opt ',' endl_opt ID
  149 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl . endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 64


State 51

  133 visibility_opt: visibility endl_opt .

    $default  reduce using rule 133 (visibility_opt)


State 52

  128 static_opt: STATIC . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 65


State 53

  134 class_member: visibility_opt static_opt . readonly_opt ID endl_opt type_mark endl_opt var_init stmt_sep
  135             | visibility_opt static_opt . readonly_opt ID stmt_sep
  136             | visibility_opt static_opt . readonly_opt ID endl_opt type_mark stmt_sep
  137             | visibility_opt static_opt . readonly_opt ID endl_opt var_init stmt_sep
  138             | visibility_opt static_opt . readonly_opt ID endl_opt type_mark dimensions_list stmt_sep
  139             | visibility_opt static_opt . readonly_opt ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  140             | visibility_opt static_opt . readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' endl_opt
  141             | visibility_opt static_opt . class_declaration endl_opt

    CLASS     shift, and go to state 1
    READONLY  shift, and go to state 66

    $default  reduce using rule 125 (readonly_opt)

    readonly_opt       go to state 67
    class_declaration  go to state 68


State 54

  143 class_member_list: class_member_list class_member .

    $default  reduce using rule 143 (class_member_list)


State 55

  146 class_declaration: CLASS endl_opt ID endl_opt '{' endl_opt class_body '}' .

    $default  reduce using rule 146 (class_declaration)


State 56

  124 implements_decl: implements_decl endl_opt ',' endl_opt . ID

    ID  shift, and go to state 69


State 57

  148 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt . class_body '}'

    PUBLIC     shift, and go to state 33
    PROTECTED  shift, and go to state 34
    PRIVATE    shift, and go to state 35

    '}'       reduce using rule 144 (class_body)
    $default  reduce using rule 132 (visibility_opt)

    visibility         go to state 36
    visibility_opt     go to state 37
    class_member       go to state 38
    class_member_list  go to state 39
    class_body         go to state 70


State 58

  117 param: ID endl_opt . type_mark
  118      | ID endl_opt . '?' endl_opt type_mark

    '?'  shift, and go to state 71
    ':'  shift, and go to state 46

    type_mark  go to state 72


State 59

  120 param_list: param_list endl_opt . ',' endl_opt param
  121 param_list_0_or_more: '(' endl_opt param_list endl_opt . ')'

    ')'  shift, and go to state 73
    ','  shift, and go to state 74


State 60

  100 type_mark: ':' endl_opt . type

    UNKNOWN  shift, and go to state 75
    ANY      shift, and go to state 76
    NUMBER   shift, and go to state 77
    STRING   shift, and go to state 78
    VOID     shift, and go to state 79
    BOOLEAN  shift, and go to state 80
    ID       shift, and go to state 81

    type  go to state 82


State 61

   67 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    $default  reduce using rule 73 (stmt_list_opt)

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt_list_opt     go to state 115
    stmt_list         go to state 116
    stmt              go to state 117
    modifier          go to state 118
    enum_declaration  go to state 119


State 62

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt . '{' endl_opt stmt_list_opt '}'

    '{'  shift, and go to state 120


State 63

  147 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' . endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 121


State 64

  124 implements_decl: implements_decl endl_opt . ',' endl_opt ID
  149 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt . '{' endl_opt class_body '}'

    ','  shift, and go to state 41
    '{'  shift, and go to state 122


State 65

  128 static_opt: STATIC endl_opt .

    $default  reduce using rule 128 (static_opt)


State 66

  126 readonly_opt: READONLY . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 123


State 67

  134 class_member: visibility_opt static_opt readonly_opt . ID endl_opt type_mark endl_opt var_init stmt_sep
  135             | visibility_opt static_opt readonly_opt . ID stmt_sep
  136             | visibility_opt static_opt readonly_opt . ID endl_opt type_mark stmt_sep
  137             | visibility_opt static_opt readonly_opt . ID endl_opt var_init stmt_sep
  138             | visibility_opt static_opt readonly_opt . ID endl_opt type_mark dimensions_list stmt_sep
  139             | visibility_opt static_opt readonly_opt . ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  140             | visibility_opt static_opt readonly_opt . ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' endl_opt

    ID  shift, and go to state 124


State 68

  141 class_member: visibility_opt static_opt class_declaration . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 125


State 69

  124 implements_decl: implements_decl endl_opt ',' endl_opt ID .

    $default  reduce using rule 124 (implements_decl)


State 70

  148 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt class_body . '}'

    '}'  shift, and go to state 126


State 71

  118 param: ID endl_opt '?' . endl_opt type_mark

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 127


State 72

  117 param: ID endl_opt type_mark .

    $default  reduce using rule 117 (param)


State 73

  121 param_list_0_or_more: '(' endl_opt param_list endl_opt ')' .

    $default  reduce using rule 121 (param_list_0_or_more)


State 74

  120 param_list: param_list endl_opt ',' . endl_opt param

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 128


State 75

   97 type: UNKNOWN .

    $default  reduce using rule 97 (type)


State 76

   96 type: ANY .

    $default  reduce using rule 96 (type)


State 77

   93 type: NUMBER .

    $default  reduce using rule 93 (type)


State 78

   94 type: STRING .

    $default  reduce using rule 94 (type)


State 79

   98 type: VOID .

    $default  reduce using rule 98 (type)


State 80

   95 type: BOOLEAN .

    $default  reduce using rule 95 (type)


State 81

   99 type: ID .

    $default  reduce using rule 99 (type)


State 82

  100 type_mark: ':' endl_opt type .

    $default  reduce using rule 100 (type_mark)


State 83

   65 return_statement: RETURN . expr stmt_sep

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 129


State 84

   56 do_while_stmt: DO . endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 130


State 85

   53 if_stmt: IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
   54        | IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 131


State 86

   57 for_stmt: FOR . endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 132


State 87

   55 while_stmt: WHILE . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 133


State 88

   58 switch_stmt: SWITCH . endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 134


State 89

   68 try_catch_block: TRY . endl_opt block_statement endl_opt catch_clause

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 135


State 90

   91 modifier: LET .

    $default  reduce using rule 91 (modifier)


State 91

   92 modifier: CONST .

    $default  reduce using rule 92 (modifier)


State 92

  150 enum_declaration: ENUM . endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 136


State 93

   22 expr: NUMBER_LITERAL .

    $default  reduce using rule 22 (expr)


State 94

   23 expr: STRING_LITERAL .

    $default  reduce using rule 23 (expr)


State 95

   24 expr: TRUE_LITERAL .

    $default  reduce using rule 24 (expr)


State 96

   25 expr: FALSE_LITERAL .

    $default  reduce using rule 25 (expr)


State 97

   26 expr: ID .

    $default  reduce using rule 26 (expr)


State 98

   90 stmt: ';' . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 137


State 99

   21 expr: '+' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 138


State 100

   20 expr: '-' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 139


State 101

   18 expr: PREF_INCREMENT . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 140


State 102

   16 expr: PREF_DECREMENT . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 141


State 103

   45 expr: NOT . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 142


State 104

   27 expr: '(' . endl_opt expr ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 143


State 105

   52 block_statement: '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 144


State 106

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   77 stmt: expr . stmt_sep

    ';'               shift, and go to state 145
    ENDL              shift, and go to state 7
    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    endl      go to state 171
    stmt_sep  go to state 172


State 107

   84 stmt: block_statement . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 173


State 108

   78 stmt: if_stmt .

    $default  reduce using rule 78 (stmt)


State 109

   79 stmt: while_stmt .

    $default  reduce using rule 79 (stmt)


State 110

   81 stmt: do_while_stmt . stmt_sep

    ';'   shift, and go to state 145
    ENDL  shift, and go to state 7

    endl      go to state 171
    stmt_sep  go to state 174


State 111

   80 stmt: for_stmt .

    $default  reduce using rule 80 (stmt)


State 112

   82 stmt: switch_stmt .

    $default  reduce using rule 82 (stmt)


State 113

   89 stmt: return_statement .

    $default  reduce using rule 89 (stmt)


State 114

   83 stmt: try_catch_block .

    $default  reduce using rule 83 (stmt)


State 115

   67 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 175


State 116

   74 stmt_list_opt: stmt_list .
   76 stmt_list: stmt_list . stmt

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    $default  reduce using rule 74 (stmt_list_opt)

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt              go to state 176
    modifier          go to state 118
    enum_declaration  go to state 119


State 117

   75 stmt_list: stmt .

    $default  reduce using rule 75 (stmt_list)


State 118

   85 stmt: modifier . endl_opt variable stmt_sep
   86     | modifier . endl_opt ID stmt_sep
   87     | modifier . endl_opt var_list stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 177


State 119

   88 stmt: enum_declaration .

    $default  reduce using rule 88 (stmt)


State 120

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 178


State 121

  147 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt . class_body '}'

    PUBLIC     shift, and go to state 33
    PROTECTED  shift, and go to state 34
    PRIVATE    shift, and go to state 35

    '}'       reduce using rule 144 (class_body)
    $default  reduce using rule 132 (visibility_opt)

    visibility         go to state 36
    visibility_opt     go to state 37
    class_member       go to state 38
    class_member_list  go to state 39
    class_body         go to state 179


State 122

  149 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' . endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 180


State 123

  126 readonly_opt: READONLY endl_opt .

    $default  reduce using rule 126 (readonly_opt)


State 124

  134 class_member: visibility_opt static_opt readonly_opt ID . endl_opt type_mark endl_opt var_init stmt_sep
  135             | visibility_opt static_opt readonly_opt ID . stmt_sep
  136             | visibility_opt static_opt readonly_opt ID . endl_opt type_mark stmt_sep
  137             | visibility_opt static_opt readonly_opt ID . endl_opt var_init stmt_sep
  138             | visibility_opt static_opt readonly_opt ID . endl_opt type_mark dimensions_list stmt_sep
  139             | visibility_opt static_opt readonly_opt ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  140             | visibility_opt static_opt readonly_opt ID . endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' endl_opt

    ';'   shift, and go to state 145
    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 181
    endl_opt  go to state 182
    stmt_sep  go to state 183


State 125

  141 class_member: visibility_opt static_opt class_declaration endl_opt .

    $default  reduce using rule 141 (class_member)


State 126

  148 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt class_body '}' .

    $default  reduce using rule 148 (class_declaration)


State 127

  118 param: ID endl_opt '?' endl_opt . type_mark

    ':'  shift, and go to state 46

    type_mark  go to state 184


State 128

  120 param_list: param_list endl_opt ',' endl_opt . param

    ID  shift, and go to state 43

    param  go to state 185


State 129

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   65 return_statement: RETURN expr . stmt_sep

    ';'               shift, and go to state 145
    ENDL              shift, and go to state 7
    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    endl      go to state 171
    stmt_sep  go to state 186


State 130

   56 do_while_stmt: DO endl_opt . stmt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt              go to state 187
    modifier          go to state 118
    enum_declaration  go to state 119


State 131

   53 if_stmt: IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt
   54        | IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    '('  shift, and go to state 188


State 132

   57 for_stmt: FOR endl_opt . '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    '('  shift, and go to state 189


State 133

   55 while_stmt: WHILE endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt

    '('  shift, and go to state 190


State 134

   58 switch_stmt: SWITCH endl_opt . '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    '('  shift, and go to state 191


State 135

   68 try_catch_block: TRY endl_opt . block_statement endl_opt catch_clause

    '{'  shift, and go to state 105

    block_statement  go to state 192


State 136

  150 enum_declaration: ENUM endl_opt . ID endl_opt '{' endl_opt id_list endl_opt '}'

    ID  shift, and go to state 193


State 137

   90 stmt: ';' endl_opt .

    $default  reduce using rule 90 (stmt)


State 138

   21 expr: '+' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 194


State 139

   20 expr: '-' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 195


State 140

   18 expr: PREF_INCREMENT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 196


State 141

   16 expr: PREF_DECREMENT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 197


State 142

   45 expr: NOT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 198


State 143

   27 expr: '(' endl_opt . expr ')'

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 199


State 144

   52 block_statement: '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    $default  reduce using rule 73 (stmt_list_opt)

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt_list_opt     go to state 200
    stmt_list         go to state 116
    stmt              go to state 117
    modifier          go to state 118
    enum_declaration  go to state 119


State 145

    9 stmt_sep: ';' .

    $default  reduce using rule 9 (stmt_sep)


State 146

   39 expr: expr '=' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 201


State 147

   40 expr: expr PLUS_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 202


State 148

   41 expr: expr MINUS_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 203


State 149

   42 expr: expr MUL_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 204


State 150

   43 expr: expr DIV_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 205


State 151

   44 expr: expr MOD_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 206


State 152

   49 expr: expr '[' . endl_opt expr endl_opt ']'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 207


State 153

   48 expr: expr '?' . endl_opt expr endl_opt ':' endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 208


State 154

   47 expr: expr OR . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 209


State 155

   46 expr: expr AND . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 210


State 156

   37 expr: expr EQUALS . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 211


State 157

   38 expr: expr NOT_EQUALS . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 212


State 158

   33 expr: expr '<' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 213


State 159

   34 expr: expr '>' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 214


State 160

   35 expr: expr LESS_OR_EQUAL . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 215


State 161

   36 expr: expr GREATER_OR_EQUAL . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 216


State 162

   19 expr: expr AS . endl_opt type

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 217


State 163

   28 expr: expr '+' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 218


State 164

   29 expr: expr '-' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 219


State 165

   30 expr: expr '*' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 220


State 166

   31 expr: expr '/' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 221


State 167

   32 expr: expr '%' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 222


State 168

   17 expr: expr POST_INCREMENT .

    $default  reduce using rule 17 (expr)


State 169

   15 expr: expr POST_DECREMENT .

    $default  reduce using rule 15 (expr)


State 170

   50 expr: expr '.' . endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr '.' . endl_opt ID

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 223


State 171

    6 endl: endl . ENDL
   10 stmt_sep: endl .

    ENDL  shift, and go to state 13

    $default  reduce using rule 10 (stmt_sep)


State 172

   77 stmt: expr stmt_sep .

    $default  reduce using rule 77 (stmt)


State 173

   84 stmt: block_statement endl_opt .

    $default  reduce using rule 84 (stmt)


State 174

   81 stmt: do_while_stmt stmt_sep .

    $default  reduce using rule 81 (stmt)


State 175

   67 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 67 (function_declaration)


State 176

   76 stmt_list: stmt_list stmt .

    $default  reduce using rule 76 (stmt_list)


State 177

   85 stmt: modifier endl_opt . variable stmt_sep
   86     | modifier endl_opt . ID stmt_sep
   87     | modifier endl_opt . var_list stmt_sep

    ID  shift, and go to state 224

    variable  go to state 225
    var_list  go to state 226


State 178

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    $default  reduce using rule 73 (stmt_list_opt)

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt_list_opt     go to state 227
    stmt_list         go to state 116
    stmt              go to state 117
    modifier          go to state 118
    enum_declaration  go to state 119


State 179

  147 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body . '}'

    '}'  shift, and go to state 228


State 180

  149 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt . class_body '}'

    PUBLIC     shift, and go to state 33
    PROTECTED  shift, and go to state 34
    PRIVATE    shift, and go to state 35

    '}'       reduce using rule 144 (class_body)
    $default  reduce using rule 132 (visibility_opt)

    visibility         go to state 36
    visibility_opt     go to state 37
    class_member       go to state 38
    class_member_list  go to state 39
    class_body         go to state 229


State 181

    6 endl: endl . ENDL
    8 endl_opt: endl .
   10 stmt_sep: endl .

    ENDL  shift, and go to state 13

    '='       reduce using rule 8 (endl_opt)
    ':'       reduce using rule 8 (endl_opt)
    '('       reduce using rule 8 (endl_opt)
    $default  reduce using rule 10 (stmt_sep)


State 182

  134 class_member: visibility_opt static_opt readonly_opt ID endl_opt . type_mark endl_opt var_init stmt_sep
  136             | visibility_opt static_opt readonly_opt ID endl_opt . type_mark stmt_sep
  137             | visibility_opt static_opt readonly_opt ID endl_opt . var_init stmt_sep
  138             | visibility_opt static_opt readonly_opt ID endl_opt . type_mark dimensions_list stmt_sep
  139             | visibility_opt static_opt readonly_opt ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
  140             | visibility_opt static_opt readonly_opt ID endl_opt . param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' endl_opt

    '='  shift, and go to state 230
    ':'  shift, and go to state 46
    '('  shift, and go to state 22

    type_mark             go to state 231
    var_init              go to state 232
    param_list_0_or_more  go to state 233


State 183

  135 class_member: visibility_opt static_opt readonly_opt ID stmt_sep .

    $default  reduce using rule 135 (class_member)


State 184

  118 param: ID endl_opt '?' endl_opt type_mark .

    $default  reduce using rule 118 (param)


State 185

  120 param_list: param_list endl_opt ',' endl_opt param .

    $default  reduce using rule 120 (param_list)


State 186

   65 return_statement: RETURN expr stmt_sep .

    $default  reduce using rule 65 (return_statement)


State 187

   56 do_while_stmt: DO endl_opt stmt . WHILE endl_opt '(' endl_opt expr endl_opt ')'

    WHILE  shift, and go to state 234


State 188

   53 if_stmt: IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt
   54        | IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 235


State 189

   57 for_stmt: FOR endl_opt '(' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 236


State 190

   55 while_stmt: WHILE endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 237


State 191

   58 switch_stmt: SWITCH endl_opt '(' . endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 238


State 192

   68 try_catch_block: TRY endl_opt block_statement . endl_opt catch_clause

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 239


State 193

  150 enum_declaration: ENUM endl_opt ID . endl_opt '{' endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 240


State 194

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   21     | '+' endl_opt expr .
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '.'  shift, and go to state 170

    $default  reduce using rule 21 (expr)


State 195

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   20     | '-' endl_opt expr .
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '.'  shift, and go to state 170

    $default  reduce using rule 20 (expr)


State 196

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   18     | PREF_INCREMENT endl_opt expr .
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 168
    POST_DECREMENT  shift, and go to state 169
    '.'             shift, and go to state 170

    $default  reduce using rule 18 (expr)


State 197

   15 expr: expr . POST_DECREMENT
   16     | PREF_DECREMENT endl_opt expr .
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 168
    POST_DECREMENT  shift, and go to state 169
    '.'             shift, and go to state 170

    $default  reduce using rule 16 (expr)


State 198

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   45     | NOT endl_opt expr .
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '.'  shift, and go to state 170

    $default  reduce using rule 45 (expr)


State 199

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   27     | '(' endl_opt expr . ')'
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170
    ')'               shift, and go to state 241


State 200

   52 block_statement: '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 242


State 201

   39 expr: expr '=' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 243


State 202

   40 expr: expr PLUS_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 244


State 203

   41 expr: expr MINUS_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 245


State 204

   42 expr: expr MUL_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 246


State 205

   43 expr: expr DIV_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 247


State 206

   44 expr: expr MOD_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 248


State 207

   49 expr: expr '[' endl_opt . expr endl_opt ']'

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 249


State 208

   48 expr: expr '?' endl_opt . expr endl_opt ':' endl_opt expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 250


State 209

   47 expr: expr OR endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 251


State 210

   46 expr: expr AND endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 252


State 211

   37 expr: expr EQUALS endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 253


State 212

   38 expr: expr NOT_EQUALS endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 254


State 213

   33 expr: expr '<' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 255


State 214

   34 expr: expr '>' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 256


State 215

   35 expr: expr LESS_OR_EQUAL endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 257


State 216

   36 expr: expr GREATER_OR_EQUAL endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 258


State 217

   19 expr: expr AS endl_opt . type

    UNKNOWN  shift, and go to state 75
    ANY      shift, and go to state 76
    NUMBER   shift, and go to state 77
    STRING   shift, and go to state 78
    VOID     shift, and go to state 79
    BOOLEAN  shift, and go to state 80
    ID       shift, and go to state 81

    type  go to state 259


State 218

   28 expr: expr '+' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 260


State 219

   29 expr: expr '-' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 261


State 220

   30 expr: expr '*' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 262


State 221

   31 expr: expr '/' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 263


State 222

   32 expr: expr '%' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 264


State 223

   50 expr: expr '.' endl_opt . ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr '.' endl_opt . ID

    ID  shift, and go to state 265


State 224

   86 stmt: modifier endl_opt ID . stmt_sep
  103 variable: ID . endl_opt type_mark endl_opt var_init
  104         | ID . endl_opt type_mark
  105         | ID . endl_opt var_init
  106         | ID . endl_opt type_mark dimensions_list
  107         | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'
  110 var_list: ID . endl_opt ',' endl_opt variable
  112         | ID . endl_opt ',' endl_opt ID

    ';'   shift, and go to state 145
    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 439
    endl_opt  go to state 266
    stmt_sep  go to state 267


State 225

   85 stmt: modifier endl_opt variable . stmt_sep
  109 var_list: variable . endl_opt ',' endl_opt variable
  111         | variable . endl_opt ',' endl_opt ID

    ';'   shift, and go to state 145
    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 439
    endl_opt  go to state 268
    stmt_sep  go to state 269


State 226

   87 stmt: modifier endl_opt var_list . stmt_sep
  113 var_list: var_list . endl_opt ',' endl_opt variable

    ';'   shift, and go to state 145
    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 439
    endl_opt  go to state 270
    stmt_sep  go to state 271


State 227

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 272


State 228

  147 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}' .

    $default  reduce using rule 147 (class_declaration)


State 229

  149 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body . '}'

    '}'  shift, and go to state 273


State 230

  108 var_init: '=' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 274


State 231

  134 class_member: visibility_opt static_opt readonly_opt ID endl_opt type_mark . endl_opt var_init stmt_sep
  136             | visibility_opt static_opt readonly_opt ID endl_opt type_mark . stmt_sep
  138             | visibility_opt static_opt readonly_opt ID endl_opt type_mark . dimensions_list stmt_sep
  139             | visibility_opt static_opt readonly_opt ID endl_opt type_mark . dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    ';'   shift, and go to state 145
    ENDL  shift, and go to state 7
    '['   shift, and go to state 275

    $default  reduce using rule 7 (endl_opt)

    endl             go to state 181
    endl_opt         go to state 276
    stmt_sep         go to state 277
    dimensions       go to state 278
    dimensions_list  go to state 279


State 232

  137 class_member: visibility_opt static_opt readonly_opt ID endl_opt var_init . stmt_sep

    ';'   shift, and go to state 145
    ENDL  shift, and go to state 7

    endl      go to state 171
    stmt_sep  go to state 280


State 233

  140 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more . type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' endl_opt

    ':'  shift, and go to state 46

    $default  reduce using rule 101 (type_mark_opt)

    type_mark      go to state 281
    type_mark_opt  go to state 282


State 234

   56 do_while_stmt: DO endl_opt stmt WHILE . endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 283


State 235

   53 if_stmt: IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt
   54        | IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 284


State 236

   57 for_stmt: FOR endl_opt '(' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 285


State 237

   55 while_stmt: WHILE endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 286


State 238

   58 switch_stmt: SWITCH endl_opt '(' endl_opt . expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 287


State 239

   68 try_catch_block: TRY endl_opt block_statement endl_opt . catch_clause

    CATCH  shift, and go to state 288

    catch_clause  go to state 289


State 240

  150 enum_declaration: ENUM endl_opt ID endl_opt . '{' endl_opt id_list endl_opt '}'

    '{'  shift, and go to state 290


State 241

   27 expr: '(' endl_opt expr ')' .

    $default  reduce using rule 27 (expr)


State 242

   52 block_statement: '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 52 (block_statement)


State 243

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   39     | expr '=' endl_opt expr .
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 39 (expr)


State 244

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   40     | expr PLUS_ASSIGN endl_opt expr .
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 40 (expr)


State 245

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   41     | expr MINUS_ASSIGN endl_opt expr .
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 41 (expr)


State 246

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   42     | expr MUL_ASSIGN endl_opt expr .
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 42 (expr)


State 247

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   43     | expr DIV_ASSIGN endl_opt expr .
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 43 (expr)


State 248

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   44     | expr MOD_ASSIGN endl_opt expr .
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 44 (expr)


State 249

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   49     | expr '[' endl_opt expr . endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    ENDL              shift, and go to state 7
    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 291


State 250

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   48     | expr '?' endl_opt expr . endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    ENDL              shift, and go to state 7
    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 292


State 251

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   47     | expr OR endl_opt expr .
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 47 (expr)


State 252

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   46     | expr AND endl_opt expr .
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 46 (expr)


State 253

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   37     | expr EQUALS endl_opt expr .
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 163
    '-'             shift, and go to state 164
    '*'             shift, and go to state 165
    '/'             shift, and go to state 166
    '%'             shift, and go to state 167
    POST_INCREMENT  shift, and go to state 168
    POST_DECREMENT  shift, and go to state 169
    '.'             shift, and go to state 170

    $default  reduce using rule 37 (expr)


State 254

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   38     | expr NOT_EQUALS endl_opt expr .
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 163
    '-'             shift, and go to state 164
    '*'             shift, and go to state 165
    '/'             shift, and go to state 166
    '%'             shift, and go to state 167
    POST_INCREMENT  shift, and go to state 168
    POST_DECREMENT  shift, and go to state 169
    '.'             shift, and go to state 170

    $default  reduce using rule 38 (expr)


State 255

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   33     | expr '<' endl_opt expr .
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 163
    '-'             shift, and go to state 164
    '*'             shift, and go to state 165
    '/'             shift, and go to state 166
    '%'             shift, and go to state 167
    POST_INCREMENT  shift, and go to state 168
    POST_DECREMENT  shift, and go to state 169
    '.'             shift, and go to state 170

    $default  reduce using rule 33 (expr)


State 256

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   34     | expr '>' endl_opt expr .
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 163
    '-'             shift, and go to state 164
    '*'             shift, and go to state 165
    '/'             shift, and go to state 166
    '%'             shift, and go to state 167
    POST_INCREMENT  shift, and go to state 168
    POST_DECREMENT  shift, and go to state 169
    '.'             shift, and go to state 170

    $default  reduce using rule 34 (expr)


State 257

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   35     | expr LESS_OR_EQUAL endl_opt expr .
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 163
    '-'             shift, and go to state 164
    '*'             shift, and go to state 165
    '/'             shift, and go to state 166
    '%'             shift, and go to state 167
    POST_INCREMENT  shift, and go to state 168
    POST_DECREMENT  shift, and go to state 169
    '.'             shift, and go to state 170

    $default  reduce using rule 35 (expr)


State 258

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   36     | expr GREATER_OR_EQUAL endl_opt expr .
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '+'             shift, and go to state 163
    '-'             shift, and go to state 164
    '*'             shift, and go to state 165
    '/'             shift, and go to state 166
    '%'             shift, and go to state 167
    POST_INCREMENT  shift, and go to state 168
    POST_DECREMENT  shift, and go to state 169
    '.'             shift, and go to state 170

    $default  reduce using rule 36 (expr)


State 259

   19 expr: expr AS endl_opt type .

    $default  reduce using rule 19 (expr)


State 260

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   28     | expr '+' endl_opt expr .
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '*'             shift, and go to state 165
    '/'             shift, and go to state 166
    '%'             shift, and go to state 167
    POST_INCREMENT  shift, and go to state 168
    POST_DECREMENT  shift, and go to state 169
    '.'             shift, and go to state 170

    $default  reduce using rule 28 (expr)


State 261

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   29     | expr '-' endl_opt expr .
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '*'             shift, and go to state 165
    '/'             shift, and go to state 166
    '%'             shift, and go to state 167
    POST_INCREMENT  shift, and go to state 168
    POST_DECREMENT  shift, and go to state 169
    '.'             shift, and go to state 170

    $default  reduce using rule 29 (expr)


State 262

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   30     | expr '*' endl_opt expr .
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 168
    POST_DECREMENT  shift, and go to state 169
    '.'             shift, and go to state 170

    $default  reduce using rule 30 (expr)


State 263

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   31     | expr '/' endl_opt expr .
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 168
    POST_DECREMENT  shift, and go to state 169
    '.'             shift, and go to state 170

    $default  reduce using rule 31 (expr)


State 264

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   32     | expr '%' endl_opt expr .
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 168
    POST_DECREMENT  shift, and go to state 169
    '.'             shift, and go to state 170

    $default  reduce using rule 32 (expr)


State 265

   50 expr: expr '.' endl_opt ID . endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr '.' endl_opt ID .

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 51 (expr)]
    '('       reduce using rule 7 (endl_opt)
    $default  reduce using rule 51 (expr)

    endl      go to state 8
    endl_opt  go to state 293

    shift/reduce conflict on token ENDL:
       51 expr: expr '.' endl_opt ID .
        5 endl: . ENDL
      First example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt expr '.' endl_opt ID . ENDL '(' endl_opt expr_list_opt ')' stmt_sep '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                   $end
               `-> 1: function_declaration
                      `-> 67: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                     '}'
                                                                                                   `-> 74: stmt_list
                                                                                                           `-> 75: stmt
                                                                                                                   `-> 77: expr                                                                             stmt_sep
                                                                                                                           `-> 50: expr '.' endl_opt ID endl_opt             '(' endl_opt expr_list_opt ')'
                                                                                                                                                        `-> 8: endl
                                                                                                                                                               `-> 5: . ENDL
      Second example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt expr '.' endl_opt ID . ENDL '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                   $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 67: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                              '}'
                                                                                                          `-> 74: stmt_list
                                                                                                                  `-> 75: stmt
                                                                                                                          `-> 77: expr                           stmt_sep
                                                                                                                                  `-> 51: expr '.' endl_opt ID . `-> 10: endl
                                                                                                                                                                         `-> 5: ENDL



State 266

  103 variable: ID endl_opt . type_mark endl_opt var_init
  104         | ID endl_opt . type_mark
  105         | ID endl_opt . var_init
  106         | ID endl_opt . type_mark dimensions_list
  107         | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'
  110 var_list: ID endl_opt . ',' endl_opt variable
  112         | ID endl_opt . ',' endl_opt ID

    '='  shift, and go to state 230
    ':'  shift, and go to state 46
    ','  shift, and go to state 294

    type_mark  go to state 295
    var_init   go to state 296


State 267

   86 stmt: modifier endl_opt ID stmt_sep .

    $default  reduce using rule 86 (stmt)


State 268

  109 var_list: variable endl_opt . ',' endl_opt variable
  111         | variable endl_opt . ',' endl_opt ID

    ','  shift, and go to state 297


State 269

   85 stmt: modifier endl_opt variable stmt_sep .

    $default  reduce using rule 85 (stmt)


State 270

  113 var_list: var_list endl_opt . ',' endl_opt variable

    ','  shift, and go to state 298


State 271

   87 stmt: modifier endl_opt var_list stmt_sep .

    $default  reduce using rule 87 (stmt)


State 272

   66 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 66 (function_declaration)


State 273

  149 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}' .

    $default  reduce using rule 149 (class_declaration)


State 274

  108 var_init: '=' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 299


State 275

  114 dimensions: '[' . endl_opt ']'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 300


State 276

  134 class_member: visibility_opt static_opt readonly_opt ID endl_opt type_mark endl_opt . var_init stmt_sep

    '='  shift, and go to state 230

    var_init  go to state 301


State 277

  136 class_member: visibility_opt static_opt readonly_opt ID endl_opt type_mark stmt_sep .

    $default  reduce using rule 136 (class_member)


State 278

  115 dimensions_list: dimensions .

    $default  reduce using rule 115 (dimensions_list)


State 279

  116 dimensions_list: dimensions_list . dimensions
  138 class_member: visibility_opt static_opt readonly_opt ID endl_opt type_mark dimensions_list . stmt_sep
  139             | visibility_opt static_opt readonly_opt ID endl_opt type_mark dimensions_list . endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    ';'   shift, and go to state 145
    ENDL  shift, and go to state 7
    '['   shift, and go to state 275

    $default  reduce using rule 7 (endl_opt)

    endl        go to state 181
    endl_opt    go to state 302
    stmt_sep    go to state 303
    dimensions  go to state 304


State 280

  137 class_member: visibility_opt static_opt readonly_opt ID endl_opt var_init stmt_sep .

    $default  reduce using rule 137 (class_member)


State 281

  102 type_mark_opt: type_mark .

    $default  reduce using rule 102 (type_mark_opt)


State 282

  140 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt . endl_opt '{' endl_opt stmt_list_opt '}' endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 305


State 283

   56 do_while_stmt: DO endl_opt stmt WHILE endl_opt . '(' endl_opt expr endl_opt ')'

    '('  shift, and go to state 306


State 284

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   53 if_stmt: IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt
   54        | IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt ELSE endl_opt stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 307


State 285

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   57 for_stmt: FOR endl_opt '(' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 308


State 286

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   55 while_stmt: WHILE endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 309


State 287

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr . endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 310


State 288

   69 catch_clause: CATCH . endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   70             | CATCH . endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 311


State 289

   68 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause .

    $default  reduce using rule 68 (try_catch_block)


State 290

  150 enum_declaration: ENUM endl_opt ID endl_opt '{' . endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 312


State 291

   49 expr: expr '[' endl_opt expr endl_opt . ']'

    ']'  shift, and go to state 313


State 292

   48 expr: expr '?' endl_opt expr endl_opt . ':' endl_opt expr

    ':'  shift, and go to state 314


State 293

   50 expr: expr '.' endl_opt ID endl_opt . '(' endl_opt expr_list_opt ')'

    '('  shift, and go to state 315


State 294

  110 var_list: ID endl_opt ',' . endl_opt variable
  112         | ID endl_opt ',' . endl_opt ID

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 316


State 295

  103 variable: ID endl_opt type_mark . endl_opt var_init
  104         | ID endl_opt type_mark .
  106         | ID endl_opt type_mark . dimensions_list
  107         | ID endl_opt type_mark . dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'

    ENDL  shift, and go to state 7
    '['   shift, and go to state 275

    ENDL      [reduce using rule 104 (variable)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 104 (variable)

    endl             go to state 8
    endl_opt         go to state 317
    dimensions       go to state 278
    dimensions_list  go to state 318

    shift/reduce conflict on token ENDL:
      104 variable: ID endl_opt type_mark .
        5 endl: . ENDL
      First example: ID endl_opt type_mark . ENDL endl_opt var_init stmt_sep
      Shift derivation
        stmt
        `-> 85: ID endl_opt variable                                                  stmt_sep
                            `-> 103: type_mark endl_opt             endl_opt var_init
                                               `-> 8: endl
                                                      `-> 5: . ENDL
      Second example: modifier ID endl_opt type_mark . ENDL
      Reduce derivation
        stmt
        `-> 85: modifier variable                         stmt_sep
                         `-> 104: ID endl_opt type_mark . `-> 10: endl
                                                                  `-> 5: ENDL



State 296

  105 variable: ID endl_opt var_init .

    $default  reduce using rule 105 (variable)


State 297

  109 var_list: variable endl_opt ',' . endl_opt variable
  111         | variable endl_opt ',' . endl_opt ID

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 319


State 298

  113 var_list: var_list endl_opt ',' . endl_opt variable

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 320


State 299

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
  108 var_init: '=' endl_opt expr .

    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 108 (var_init)


State 300

  114 dimensions: '[' endl_opt . ']'

    ']'  shift, and go to state 321


State 301

  134 class_member: visibility_opt static_opt readonly_opt ID endl_opt type_mark endl_opt var_init . stmt_sep

    ';'   shift, and go to state 145
    ENDL  shift, and go to state 7

    endl      go to state 171
    stmt_sep  go to state 322


State 302

  139 class_member: visibility_opt static_opt readonly_opt ID endl_opt type_mark dimensions_list endl_opt . '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    '='  shift, and go to state 323


State 303

  138 class_member: visibility_opt static_opt readonly_opt ID endl_opt type_mark dimensions_list stmt_sep .

    $default  reduce using rule 138 (class_member)


State 304

  116 dimensions_list: dimensions_list dimensions .

    $default  reduce using rule 116 (dimensions_list)


State 305

  140 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt . '{' endl_opt stmt_list_opt '}' endl_opt

    '{'  shift, and go to state 324


State 306

   56 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' . endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 325


State 307

   53 if_stmt: IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt
   54        | IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt ELSE endl_opt stmt

    ')'  shift, and go to state 326


State 308

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 327


State 309

   55 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt

    ')'  shift, and go to state 328


State 310

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt . ')' endl_opt '{' endl_opt case_list '}' endl_opt

    ')'  shift, and go to state 329


State 311

   69 catch_clause: CATCH endl_opt . '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   70             | CATCH endl_opt . '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    '('  shift, and go to state 330


State 312

  150 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt . id_list endl_opt '}'

    ID  shift, and go to state 331

    id_list  go to state 332


State 313

   49 expr: expr '[' endl_opt expr endl_opt ']' .

    $default  reduce using rule 49 (expr)


State 314

   48 expr: expr '?' endl_opt expr endl_opt ':' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 333


State 315

   50 expr: expr '.' endl_opt ID endl_opt '(' . endl_opt expr_list_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 334


State 316

  110 var_list: ID endl_opt ',' endl_opt . variable
  112         | ID endl_opt ',' endl_opt . ID

    ID  shift, and go to state 335

    variable  go to state 336


State 317

  103 variable: ID endl_opt type_mark endl_opt . var_init

    '='  shift, and go to state 230

    var_init  go to state 337


State 318

  106 variable: ID endl_opt type_mark dimensions_list .
  107         | ID endl_opt type_mark dimensions_list . endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'
  116 dimensions_list: dimensions_list . dimensions

    ENDL  shift, and go to state 7
    '['   shift, and go to state 275

    ENDL      [reduce using rule 106 (variable)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 106 (variable)

    endl        go to state 8
    endl_opt    go to state 338
    dimensions  go to state 304

    shift/reduce conflict on token ENDL:
      106 variable: ID endl_opt type_mark dimensions_list .
        5 endl: . ENDL
      First example: ID endl_opt type_mark dimensions_list . ENDL endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep
      Shift derivation
        stmt
        `-> 85: ID endl_opt variable                                                                                                     stmt_sep
                            `-> 107: type_mark dimensions_list endl_opt             endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'
                                                               `-> 8: endl
                                                                      `-> 5: . ENDL
      Second example: modifier ID endl_opt type_mark dimensions_list . ENDL
      Reduce derivation
        stmt
        `-> 85: modifier variable                                         stmt_sep
                         `-> 106: ID endl_opt type_mark dimensions_list . `-> 10: endl
                                                                                  `-> 5: ENDL



State 319

  109 var_list: variable endl_opt ',' endl_opt . variable
  111         | variable endl_opt ',' endl_opt . ID

    ID  shift, and go to state 339

    variable  go to state 340


State 320

  113 var_list: var_list endl_opt ',' endl_opt . variable

    ID  shift, and go to state 341

    variable  go to state 342


State 321

  114 dimensions: '[' endl_opt ']' .

    $default  reduce using rule 114 (dimensions)


State 322

  134 class_member: visibility_opt static_opt readonly_opt ID endl_opt type_mark endl_opt var_init stmt_sep .

    $default  reduce using rule 134 (class_member)


State 323

  139 class_member: visibility_opt static_opt readonly_opt ID endl_opt type_mark dimensions_list endl_opt '=' . endl_opt '[' endl_opt expr_list_opt ']' stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 343


State 324

  140 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' . endl_opt stmt_list_opt '}' endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 344


State 325

   56 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt . expr endl_opt ')'

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 345


State 326

   53 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt
   54        | IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt ELSE endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 346


State 327

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 347


State 328

   55 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 348


State 329

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' . endl_opt '{' endl_opt case_list '}' endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 349


State 330

   69 catch_clause: CATCH endl_opt '(' . endl_opt ID endl_opt ')' endl_opt block_statement endl_opt
   70             | CATCH endl_opt '(' . endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 350


State 331

  151 id_list: ID . endl_opt var_init
  152        | ID .

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 152 (id_list)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 152 (id_list)

    endl      go to state 8
    endl_opt  go to state 351

    shift/reduce conflict on token ENDL:
      152 id_list: ID .
        5 endl: . ENDL
      First example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt ENUM endl_opt ID endl_opt '{' endl_opt ID . ENDL var_init endl_opt '}' '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                               $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 67: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                          '}'
                                                                                                          `-> 74: stmt_list
                                                                                                                  `-> 75: enum_declaration
                                                                                                                          `-> 150: ENUM endl_opt ID endl_opt '{' endl_opt id_list                                   endl_opt '}'
                                                                                                                                                                          `-> 151: ID endl_opt             var_init
                                                                                                                                                                                      `-> 8: endl
                                                                                                                                                                                             `-> 5: . ENDL
      Second example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt ENUM endl_opt ID endl_opt '{' endl_opt ID . ENDL '}' '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                     $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 67: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                '}'
                                                                                                          `-> 74: stmt_list
                                                                                                                  `-> 75: stmt
                                                                                                                          `-> 88: enum_declaration
                                                                                                                                  `-> 150: ENUM endl_opt ID endl_opt '{' endl_opt id_list       endl_opt           '}'
                                                                                                                                                                                  `-> 152: ID . `-> 8: endl
                                                                                                                                                                                                       `-> 5: ENDL



State 332

  150 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list . endl_opt '}'
  153 id_list: id_list . endl_opt ',' endl_opt ID
  154        | id_list . endl_opt ',' endl_opt ID endl_opt var_init

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 352


State 333

   48 expr: expr '?' endl_opt expr endl_opt ':' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 353


State 334

   50 expr: expr '.' endl_opt ID endl_opt '(' endl_opt . expr_list_opt ')'

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 354
    expr_list_opt  go to state 355
    expr           go to state 356


State 335

  103 variable: ID . endl_opt type_mark endl_opt var_init
  104         | ID . endl_opt type_mark
  105         | ID . endl_opt var_init
  106         | ID . endl_opt type_mark dimensions_list
  107         | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'
  112 var_list: ID endl_opt ',' endl_opt ID .

    ENDL  shift, and go to state 7

    ';'       reduce using rule 112 (var_list)
    ENDL      [reduce using rule 112 (var_list)]
    ','       reduce using rule 112 (var_list)
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 357

    shift/reduce conflict on token ENDL:
      112 var_list: ID endl_opt ',' endl_opt ID .
        5 endl: . ENDL
      First example: ID endl_opt ',' endl_opt ID . ENDL stmt_sep
      Shift derivation
        stmt
        `-> 87: ID endl_opt var_list                               stmt_sep
                            `-> 110: ',' endl_opt ID endl
                                                     `-> 5: . ENDL
      Second example: modifier ID endl_opt ',' endl_opt ID . ENDL
      Reduce derivation
        stmt
        `-> 87: modifier var_list                               stmt_sep
                         `-> 112: ID endl_opt ',' endl_opt ID . `-> 10: endl
                                                                        `-> 5: ENDL



State 336

  110 var_list: ID endl_opt ',' endl_opt variable .

    $default  reduce using rule 110 (var_list)


State 337

  103 variable: ID endl_opt type_mark endl_opt var_init .

    $default  reduce using rule 103 (variable)


State 338

  107 variable: ID endl_opt type_mark dimensions_list endl_opt . '=' endl_opt '[' endl_opt expr_list_opt ']'

    '='  shift, and go to state 358


State 339

  103 variable: ID . endl_opt type_mark endl_opt var_init
  104         | ID . endl_opt type_mark
  105         | ID . endl_opt var_init
  106         | ID . endl_opt type_mark dimensions_list
  107         | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'
  111 var_list: variable endl_opt ',' endl_opt ID .

    ENDL  shift, and go to state 7

    ';'       reduce using rule 111 (var_list)
    ENDL      [reduce using rule 111 (var_list)]
    ','       reduce using rule 111 (var_list)
    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 357

    shift/reduce conflict on token ENDL:
      111 var_list: variable endl_opt ',' endl_opt ID .
        5 endl: . ENDL
      First example: variable endl_opt ',' endl_opt ID . ENDL stmt_sep
      Shift derivation
        stmt
        `-> 87: variable endl_opt var_list                               stmt_sep
                                  `-> 109: ',' endl_opt ID endl
                                                           `-> 5: . ENDL
      Second example: modifier variable endl_opt ',' endl_opt ID . ENDL
      Reduce derivation
        stmt
        `-> 87: modifier var_list                                     stmt_sep
                         `-> 111: variable endl_opt ',' endl_opt ID . `-> 10: endl
                                                                              `-> 5: ENDL



State 340

  109 var_list: variable endl_opt ',' endl_opt variable .

    $default  reduce using rule 109 (var_list)


State 341

  103 variable: ID . endl_opt type_mark endl_opt var_init
  104         | ID . endl_opt type_mark
  105         | ID . endl_opt var_init
  106         | ID . endl_opt type_mark dimensions_list
  107         | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 357


State 342

  113 var_list: var_list endl_opt ',' endl_opt variable .

    $default  reduce using rule 113 (var_list)


State 343

  139 class_member: visibility_opt static_opt readonly_opt ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt . '[' endl_opt expr_list_opt ']' stmt_sep

    '['  shift, and go to state 359


State 344

  140 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt . stmt_list_opt '}' endl_opt

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    $default  reduce using rule 73 (stmt_list_opt)

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt_list_opt     go to state 360
    stmt_list         go to state 116
    stmt              go to state 117
    modifier          go to state 118
    enum_declaration  go to state 119


State 345

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   56 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr . endl_opt ')'

    ENDL              shift, and go to state 7
    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 361


State 346

   53 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt
   54        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt ELSE endl_opt stmt

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt              go to state 362
    modifier          go to state 118
    enum_declaration  go to state 119


State 347

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 363


State 348

   55 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt              go to state 364
    modifier          go to state 118
    enum_declaration  go to state 119


State 349

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt . '{' endl_opt case_list '}' endl_opt

    '{'  shift, and go to state 365


State 350

   69 catch_clause: CATCH endl_opt '(' endl_opt . ID endl_opt ')' endl_opt block_statement endl_opt
   70             | CATCH endl_opt '(' endl_opt . ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ID  shift, and go to state 366


State 351

  151 id_list: ID endl_opt . var_init

    '='  shift, and go to state 230

    var_init  go to state 367


State 352

  150 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt . '}'
  153 id_list: id_list endl_opt . ',' endl_opt ID
  154        | id_list endl_opt . ',' endl_opt ID endl_opt var_init

    ','  shift, and go to state 368
    '}'  shift, and go to state 369


State 353

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   48     | expr '?' endl_opt expr endl_opt ':' endl_opt expr .
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 48 (expr)


State 354

   12 expr_list: expr_list . endl_opt ',' endl_opt expr
   14 expr_list_opt: expr_list . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 370


State 355

   50 expr: expr '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt . ')'

    ')'  shift, and go to state 371


State 356

   11 expr_list: expr .
   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 11 (expr_list)


State 357

  103 variable: ID endl_opt . type_mark endl_opt var_init
  104         | ID endl_opt . type_mark
  105         | ID endl_opt . var_init
  106         | ID endl_opt . type_mark dimensions_list
  107         | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'

    '='  shift, and go to state 230
    ':'  shift, and go to state 46

    type_mark  go to state 295
    var_init   go to state 296


State 358

  107 variable: ID endl_opt type_mark dimensions_list endl_opt '=' . endl_opt '[' endl_opt expr_list_opt ']'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 372


State 359

  139 class_member: visibility_opt static_opt readonly_opt ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' . endl_opt expr_list_opt ']' stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 373


State 360

  140 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt . '}' endl_opt

    '}'  shift, and go to state 374


State 361

   56 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt . ')'

    ')'  shift, and go to state 375


State 362

   53 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .
   54        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt stmt

    ELSE  shift, and go to state 376

    ELSE      [reduce using rule 53 (if_stmt)]
    $default  reduce using rule 53 (if_stmt)

    shift/reduce conflict on token ELSE:
       53 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .
       54 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt stmt
      Example: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE stmt
      Shift derivation
        if_stmt
        `-> 53: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
                                                                    `-> 78: if_stmt
                                                                            `-> 54: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt . ELSE endl_opt       stmt
                                                                                                                                                    `-> 54: %empty
      Reduce derivation
        if_stmt
        `-> 54: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt                                                                       ELSE endl_opt       stmt
                                                                    `-> 78: if_stmt                                                                 `-> 54: %empty
                                                                            `-> 53: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .



State 363

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 377


State 364

   55 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 55 (while_stmt)


State 365

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' . endl_opt case_list '}' endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 378


State 366

   69 catch_clause: CATCH endl_opt '(' endl_opt ID . endl_opt ')' endl_opt block_statement endl_opt
   70             | CATCH endl_opt '(' endl_opt ID . endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 379


State 367

  151 id_list: ID endl_opt var_init .

    $default  reduce using rule 151 (id_list)


State 368

  153 id_list: id_list endl_opt ',' . endl_opt ID
  154        | id_list endl_opt ',' . endl_opt ID endl_opt var_init

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 380


State 369

  150 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}' .

    $default  reduce using rule 150 (enum_declaration)


State 370

   12 expr_list: expr_list endl_opt . ',' endl_opt expr
   14 expr_list_opt: expr_list endl_opt .

    ','  shift, and go to state 381

    $default  reduce using rule 14 (expr_list_opt)


State 371

   50 expr: expr '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')' .

    $default  reduce using rule 50 (expr)


State 372

  107 variable: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt . '[' endl_opt expr_list_opt ']'

    '['  shift, and go to state 382


State 373

  139 class_member: visibility_opt static_opt readonly_opt ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt . expr_list_opt ']' stmt_sep

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 354
    expr_list_opt  go to state 383
    expr           go to state 356


State 374

  140 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 384


State 375

   56 do_while_stmt: DO endl_opt stmt WHILE endl_opt '(' endl_opt expr endl_opt ')' .

    $default  reduce using rule 56 (do_while_stmt)


State 376

   54 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE . endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 385


State 377

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ')' endl_opt stmt

    ';'  shift, and go to state 386


State 378

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt . case_list '}' endl_opt

    DEFAULT  shift, and go to state 387
    CASE     shift, and go to state 388

    case_list  go to state 389
    case_stmt  go to state 390


State 379

   69 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt . ')' endl_opt block_statement endl_opt
   70             | CATCH endl_opt '(' endl_opt ID endl_opt . ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ':'  shift, and go to state 391
    ')'  shift, and go to state 392


State 380

  153 id_list: id_list endl_opt ',' endl_opt . ID
  154        | id_list endl_opt ',' endl_opt . ID endl_opt var_init

    ID  shift, and go to state 393


State 381

   12 expr_list: expr_list endl_opt ',' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 394


State 382

  107 variable: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' . endl_opt expr_list_opt ']'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 395


State 383

  139 class_member: visibility_opt static_opt readonly_opt ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt . ']' stmt_sep

    ']'  shift, and go to state 396


State 384

  140 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more type_mark_opt endl_opt '{' endl_opt stmt_list_opt '}' endl_opt .

    $default  reduce using rule 140 (class_member)


State 385

   54 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt . stmt

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt              go to state 397
    modifier          go to state 118
    enum_declaration  go to state 119


State 386

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ')' endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 398


State 387

   62 case_stmt: DEFAULT . endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 399


State 388

   61 case_stmt: CASE . endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 400


State 389

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list . '}' endl_opt
   60 case_list: case_list . case_stmt

    DEFAULT  shift, and go to state 387
    CASE     shift, and go to state 388
    '}'      shift, and go to state 401

    case_stmt  go to state 402


State 390

   59 case_list: case_stmt .

    $default  reduce using rule 59 (case_list)


State 391

   70 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' . endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 403


State 392

   69 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' . endl_opt block_statement endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 404


State 393

  153 id_list: id_list endl_opt ',' endl_opt ID .
  154        | id_list endl_opt ',' endl_opt ID . endl_opt var_init

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 153 (id_list)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 153 (id_list)

    endl      go to state 8
    endl_opt  go to state 405

    shift/reduce conflict on token ENDL:
      153 id_list: id_list endl_opt ',' endl_opt ID .
        5 endl: . ENDL
      First example: endl_opt ',' endl_opt ID . ENDL var_init
      Shift derivation
        id_list
        `-> 154: endl_opt ',' endl_opt ID endl          var_init
                                          `-> 5: . ENDL
      Second example: ENDL ',' endl_opt ID endl_opt var_init
      Reduce derivation
        id_list
        `-> 154: ENDL ',' endl_opt ID endl_opt var_init



State 394

   12 expr_list: expr_list endl_opt ',' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 406


State 395

  107 variable: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt . expr_list_opt ']'

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 354
    expr_list_opt  go to state 407
    expr           go to state 356


State 396

  139 class_member: visibility_opt static_opt readonly_opt ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' . stmt_sep

    ';'   shift, and go to state 145
    ENDL  shift, and go to state 7

    endl      go to state 171
    stmt_sep  go to state 408


State 397

   54 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt ELSE endl_opt stmt .

    $default  reduce using rule 54 (if_stmt)


State 398

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ')' endl_opt stmt

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 409


State 399

   62 case_stmt: DEFAULT endl_opt . ':' endl_opt stmt_list_opt break_opt

    ':'  shift, and go to state 410


State 400

   61 case_stmt: CASE endl_opt . expr endl_opt ':' endl_opt stmt_list_opt break_opt

    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104

    expr  go to state 411


State 401

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 412


State 402

   60 case_list: case_list case_stmt .

    $default  reduce using rule 60 (case_list)


State 403

   70 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt . error_type endl_opt ')' endl_opt block_statement endl_opt

    UNKNOWN  shift, and go to state 413
    ANY      shift, and go to state 414

    error_type  go to state 415


State 404

   69 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt . block_statement endl_opt

    '{'  shift, and go to state 105

    block_statement  go to state 416


State 405

  154 id_list: id_list endl_opt ',' endl_opt ID endl_opt . var_init

    '='  shift, and go to state 230

    var_init  go to state 417


State 406

   12 expr_list: expr_list endl_opt ',' endl_opt expr .
   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID

    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 12 (expr_list)


State 407

  107 variable: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt . ']'

    ']'  shift, and go to state 418


State 408

  139 class_member: visibility_opt static_opt readonly_opt ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' stmt_sep .

    $default  reduce using rule 139 (class_member)


State 409

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ')' endl_opt stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 419


State 410

   62 case_stmt: DEFAULT endl_opt ':' . endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 420


State 411

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   19     | expr . AS endl_opt type
   28     | expr . '+' endl_opt expr
   29     | expr . '-' endl_opt expr
   30     | expr . '*' endl_opt expr
   31     | expr . '/' endl_opt expr
   32     | expr . '%' endl_opt expr
   33     | expr . '<' endl_opt expr
   34     | expr . '>' endl_opt expr
   35     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr . EQUALS endl_opt expr
   38     | expr . NOT_EQUALS endl_opt expr
   39     | expr . '=' endl_opt expr
   40     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr . MUL_ASSIGN endl_opt expr
   43     | expr . DIV_ASSIGN endl_opt expr
   44     | expr . MOD_ASSIGN endl_opt expr
   46     | expr . AND endl_opt expr
   47     | expr . OR endl_opt expr
   48     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   51     | expr . '.' endl_opt ID
   61 case_stmt: CASE endl_opt expr . endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 146
    PLUS_ASSIGN       shift, and go to state 147
    MINUS_ASSIGN      shift, and go to state 148
    MUL_ASSIGN        shift, and go to state 149
    DIV_ASSIGN        shift, and go to state 150
    MOD_ASSIGN        shift, and go to state 151
    '['               shift, and go to state 152
    '?'               shift, and go to state 153
    OR                shift, and go to state 154
    AND               shift, and go to state 155
    EQUALS            shift, and go to state 156
    NOT_EQUALS        shift, and go to state 157
    '<'               shift, and go to state 158
    '>'               shift, and go to state 159
    LESS_OR_EQUAL     shift, and go to state 160
    GREATER_OR_EQUAL  shift, and go to state 161
    AS                shift, and go to state 162
    '+'               shift, and go to state 163
    '-'               shift, and go to state 164
    '*'               shift, and go to state 165
    '/'               shift, and go to state 166
    '%'               shift, and go to state 167
    POST_INCREMENT    shift, and go to state 168
    POST_DECREMENT    shift, and go to state 169
    '.'               shift, and go to state 170

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 421


State 412

   58 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' endl_opt .

    $default  reduce using rule 58 (switch_stmt)


State 413

   71 error_type: UNKNOWN .

    $default  reduce using rule 71 (error_type)


State 414

   72 error_type: ANY .

    $default  reduce using rule 72 (error_type)


State 415

   70 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type . endl_opt ')' endl_opt block_statement endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 422


State 416

   69 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 423


State 417

  154 id_list: id_list endl_opt ',' endl_opt ID endl_opt var_init .

    $default  reduce using rule 154 (id_list)


State 418

  107 variable: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' .

    $default  reduce using rule 107 (variable)


State 419

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ')' endl_opt stmt

    ')'  shift, and go to state 424


State 420

   62 case_stmt: DEFAULT endl_opt ':' endl_opt . stmt_list_opt break_opt

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    $default  reduce using rule 73 (stmt_list_opt)

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt_list_opt     go to state 425
    stmt_list         go to state 116
    stmt              go to state 117
    modifier          go to state 118
    enum_declaration  go to state 119


State 421

   61 case_stmt: CASE endl_opt expr endl_opt . ':' endl_opt stmt_list_opt break_opt

    ':'  shift, and go to state 426


State 422

   70 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt . ')' endl_opt block_statement endl_opt

    ')'  shift, and go to state 427


State 423

   69 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement endl_opt .

    $default  reduce using rule 69 (catch_clause)


State 424

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' . endl_opt stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 428


State 425

   62 case_stmt: DEFAULT endl_opt ':' endl_opt stmt_list_opt . break_opt

    BREAK  shift, and go to state 429

    $default  reduce using rule 63 (break_opt)

    break_opt  go to state 430


State 426

   61 case_stmt: CASE endl_opt expr endl_opt ':' . endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 431


State 427

   70 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' . endl_opt block_statement endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 432


State 428

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt . stmt

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt              go to state 433
    modifier          go to state 118
    enum_declaration  go to state 119


State 429

   64 break_opt: BREAK . stmt_sep

    ';'   shift, and go to state 145
    ENDL  shift, and go to state 7

    endl      go to state 171
    stmt_sep  go to state 434


State 430

   62 case_stmt: DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt .

    $default  reduce using rule 62 (case_stmt)


State 431

   61 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt . stmt_list_opt break_opt

    RETURN          shift, and go to state 83
    DO              shift, and go to state 84
    IF              shift, and go to state 85
    FOR             shift, and go to state 86
    WHILE           shift, and go to state 87
    SWITCH          shift, and go to state 88
    TRY             shift, and go to state 89
    LET             shift, and go to state 90
    CONST           shift, and go to state 91
    ENUM            shift, and go to state 92
    NUMBER_LITERAL  shift, and go to state 93
    STRING_LITERAL  shift, and go to state 94
    TRUE_LITERAL    shift, and go to state 95
    FALSE_LITERAL   shift, and go to state 96
    ID              shift, and go to state 97
    ';'             shift, and go to state 98
    '+'             shift, and go to state 99
    '-'             shift, and go to state 100
    PREF_INCREMENT  shift, and go to state 101
    PREF_DECREMENT  shift, and go to state 102
    NOT             shift, and go to state 103
    '('             shift, and go to state 104
    '{'             shift, and go to state 105

    $default  reduce using rule 73 (stmt_list_opt)

    expr              go to state 106
    block_statement   go to state 107
    if_stmt           go to state 108
    while_stmt        go to state 109
    do_while_stmt     go to state 110
    for_stmt          go to state 111
    switch_stmt       go to state 112
    return_statement  go to state 113
    try_catch_block   go to state 114
    stmt_list_opt     go to state 435
    stmt_list         go to state 116
    stmt              go to state 117
    modifier          go to state 118
    enum_declaration  go to state 119


State 432

   70 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt . block_statement endl_opt

    '{'  shift, and go to state 105

    block_statement  go to state 436


State 433

   57 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 57 (for_stmt)


State 434

   64 break_opt: BREAK stmt_sep .

    $default  reduce using rule 64 (break_opt)


State 435

   61 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt . break_opt

    BREAK  shift, and go to state 429

    $default  reduce using rule 63 (break_opt)

    break_opt  go to state 437


State 436

   70 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 438


State 437

   61 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt .

    $default  reduce using rule 61 (case_stmt)


State 438

   70 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement endl_opt .

    $default  reduce using rule 70 (catch_clause)


State 439

    6 endl: endl . ENDL
    8 endl_opt: endl .
   10 stmt_sep: endl .

    ENDL  shift, and go to state 13

    '='       reduce using rule 8 (endl_opt)
    ':'       reduce using rule 8 (endl_opt)
    ','       reduce using rule 8 (endl_opt)
    $default  reduce using rule 10 (stmt_sep)
