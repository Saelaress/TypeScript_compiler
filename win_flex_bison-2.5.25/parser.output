Terminals unused in grammar

    INTERFACE
    CONSTRUCTOR
    NEW
    THIS
    DELETE
    EXPORT
    OF
    IN
    CONTINUE
    INCREMENT
    DECREMENT
    DECLARE
    IS


State 99 conflicts: 1 shift/reduce
State 127 conflicts: 1 shift/reduce
State 128 conflicts: 1 shift/reduce
State 129 conflicts: 1 shift/reduce
State 176 conflicts: 1 shift/reduce
State 235 conflicts: 1 shift/reduce
State 240 conflicts: 2 shift/reduce
State 277 conflicts: 1 shift/reduce
State 312 conflicts: 1 shift/reduce
State 313 conflicts: 1 shift/reduce
State 340 conflicts: 1 shift/reduce
State 400 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_elem
    2        | program program_elem

    3 program_elem: class_declaration
    4             | function_declaration

    5 endl: ENDL
    6     | endl ENDL

    7 endl_opt: %empty
    8         | endl

    9 stmt_sep: ';'
   10         | endl

   11 expr_list: expr
   12          | expr_list endl_opt ',' endl_opt expr

   13 expr_list_opt: %empty
   14              | expr_list

   15 expr: expr POST_DECREMENT
   16     | PREF_DECREMENT endl_opt expr
   17     | expr POST_INCREMENT
   18     | PREF_INCREMENT endl_opt expr
   19     | ID AS endl_opt type
   20     | '-' endl_opt expr
   21     | '+' endl_opt expr
   22     | NUMBER_LITERAL
   23     | STRING_LITERAL
   24     | TRUE_LITERAL
   25     | FALSE_LITERAL
   26     | ID
   27     | '(' endl_opt expr endl_opt ')'
   28     | ID endl_opt '(' endl_opt expr_list_opt ')'
   29     | expr '+' endl_opt expr
   30     | expr '-' endl_opt expr
   31     | expr '*' endl_opt expr
   32     | expr '/' endl_opt expr
   33     | expr '%' endl_opt expr
   34     | expr '<' endl_opt expr
   35     | expr '>' endl_opt expr
   36     | expr LESS_OR_EQUAL endl_opt expr
   37     | expr GREATER_OR_EQUAL endl_opt expr
   38     | expr EQUALS endl_opt expr
   39     | expr NOT_EQUALS endl_opt expr
   40     | expr '=' endl_opt expr
   41     | expr PLUS_ASSIGN endl_opt expr
   42     | expr MINUS_ASSIGN endl_opt expr
   43     | expr MUL_ASSIGN endl_opt expr
   44     | expr DIV_ASSIGN endl_opt expr
   45     | expr MOD_ASSIGN endl_opt expr
   46     | NOT endl_opt expr
   47     | expr AND endl_opt expr
   48     | expr OR endl_opt expr
   49     | expr '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr '[' endl_opt expr endl_opt ']'
   51     | expr '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr '.' endl_opt ID

   53 block_statement: '{' endl_opt stmt_list_opt '}'

   54 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement
   55        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep
   56        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement
   57        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep
   58        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement
   59        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

   60 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
   61           | WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt empty_stmt

   62 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'
   63              | DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt
   65         | FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}'

   67 case_list: case_stmt
   68          | case_list case_stmt

   69 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt
   70          | DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt

   71 break_opt: %empty
   72          | BREAK stmt_sep endl_opt

   73 return_statement: RETURN expr stmt_sep

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   75                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

   76 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement
   78             | CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

   79 error_type: UNKNOWN
   80           | ANY

   81 stmt_list_opt: %empty
   82              | stmt_list endl_opt

   83 stmt_list: stmt
   84          | empty_stmt
   85          | stmt_list stmt
   86          | stmt_list empty_stmt

   87 stmt: expr stmt_sep
   88     | if_stmt
   89     | while_stmt
   90     | for_stmt
   91     | do_while_stmt stmt_sep
   92     | switch_stmt
   93     | try_catch_block
   94     | block_statement
   95     | modifier endl_opt var_declaration stmt_sep
   96     | enum_declaration
   97     | return_statement

   98 empty_stmt: ';'

   99 modifier: LET
  100         | CONST

  101 type: NUMBER
  102     | STRING
  103     | BOOLEAN
  104     | ANY
  105     | UNKNOWN
  106     | VOID
  107     | ID

  108 type_mark: ':' endl_opt type

  109 type_mark_opt: %empty
  110              | endl_opt type_mark

  111 variable: ID type_mark_opt

  112 var_init_opt: %empty
  113             | endl_opt '=' endl_opt expr

  114 var_list: variable var_init_opt
  115         | var_list endl_opt ',' endl_opt variable var_init_opt

  116 var_declaration: var_list
  117                | ID endl_opt type_mark endl_opt dimensions_list
  118                | ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'

  119 dimensions: '[' endl_opt ']'

  120 dimensions_list: dimensions
  121                | dimensions_list dimensions

  122 param: ID endl_opt type_mark

  123 optional_param: ID endl_opt '?' endl_opt type_mark

  124 param_list: param
  125           | param_list endl_opt ',' endl_opt param
  126           | optional_param
  127           | param_list endl_opt ',' endl_opt optional_param

  128 param_list_0_or_more: '(' endl_opt param_list endl_opt ')'
  129                     | '(' ')'

  130 implements_decl: IMPLEMENTS endl_opt ID
  131                | implements_decl endl_opt ',' endl_opt ID

  132 readonly_opt: %empty
  133             | READONLY endl_opt

  134 static_opt: %empty
  135           | STATIC endl_opt

  136 visibility: PRIVATE
  137           | PROTECTED
  138           | PUBLIC

  139 visibility_opt: %empty
  140               | visibility endl_opt

  141 class_member: visibility_opt static_opt readonly_opt var_declaration
  142             | visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
  143             | visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'
  144             | visibility_opt static_opt class_declaration

  145 class_member_list: class_member
  146                  | class_member_list endl_opt class_member

  147 class_body: %empty
  148           | class_member_list endl_opt

  149 class_declaration: CLASS endl_opt ID endl_opt '{' endl_opt class_body '}'
  150                  | CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  151                  | CLASS endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt class_body '}'
  152                  | CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

  153 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}'

  154 id_list: ID var_init_opt
  155        | id_list endl_opt ',' endl_opt ID var_init_opt


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 33
    '(' (40) 27 28 51 54 55 56 57 58 59 60 61 62 63 64 65 66 77 78 128 129
    ')' (41) 27 28 51 54 55 56 57 58 59 60 61 62 63 64 65 66 77 78 128 129
    '*' (42) 31
    '+' (43) 21 29
    ',' (44) 12 115 125 127 131 155
    '-' (45) 20 30
    '.' (46) 51 52
    '/' (47) 32
    ':' (58) 49 69 70 78 108
    ';' (59) 9 64 65 98
    '<' (60) 34
    '=' (61) 40 113 118
    '>' (62) 35
    '?' (63) 49 123
    '[' (91) 50 118 119
    ']' (93) 50 118 119
    '{' (123) 53 66 74 75 142 143 149 150 151 152 153
    '}' (125) 53 66 74 75 142 143 149 150 151 152 153
    error (256)
    INTERFACE (258)
    IMPLEMENTS (259) 130
    CONSTRUCTOR (260)
    NEW (261)
    EXTENDS (262) 150 152
    THIS (263)
    CLASS (264) 149 150 151 152
    STATIC (265) 135
    RETURN (266) 73
    DELETE (267)
    EXPORT (268)
    PUBLIC (269) 138
    PROTECTED (270) 137
    PRIVATE (271) 136
    READONLY (272) 133
    DO (273) 62 63
    IF (274) 54 55 56 57 58 59
    ELSE (275) 56 57 58 59
    FOR (276) 64 65
    OF (277)
    IN (278)
    WHILE (279) 60 61 62 63
    BREAK (280) 72
    CONTINUE (281)
    DEFAULT (282) 70
    SWITCH (283) 66
    CASE (284) 69
    TRY (285) 76
    CATCH (286) 77 78
    INCREMENT (287)
    DECREMENT (288)
    LET (289) 99
    CONST (290) 100
    FUNC (291) 74 75
    DECLARE (292)
    UNKNOWN (293) 79 105
    ANY (294) 80 104
    NUMBER (295) 101
    STRING (296) 102
    VOID (297) 106
    BOOLEAN (298) 103
    ENUM (299) 153
    NUMBER_LITERAL (300) 22
    STRING_LITERAL (301) 23
    TRUE_LITERAL (302) 24
    FALSE_LITERAL (303) 25
    ID (304) 19 26 28 51 52 74 75 77 78 107 111 117 118 122 123 130 131 142 143 149 150 151 152 153 154 155
    ENDL (305) 5 6
    PLUS_ASSIGN (306) 41
    MINUS_ASSIGN (307) 42
    MUL_ASSIGN (308) 43
    DIV_ASSIGN (309) 44
    MOD_ASSIGN (310) 45
    OR (311) 48
    AND (312) 47
    EQUALS (313) 38
    NOT_EQUALS (314) 39
    LESS_OR_EQUAL (315) 36
    GREATER_OR_EQUAL (316) 37
    IS (317)
    AS (318) 19
    PREF_INCREMENT (319) 18
    PREF_DECREMENT (320) 16
    POST_INCREMENT (321) 17
    POST_DECREMENT (322) 15
    NOT (323) 46
    UPLUS (324)
    UMINUS (325)


Nonterminals, with rules where they appear

    $accept (90)
        on left: 0
    program (91)
        on left: 1 2
        on right: 0 2
    program_elem (92)
        on left: 3 4
        on right: 1 2
    endl (93)
        on left: 5 6
        on right: 6 8 10
    endl_opt (94)
        on left: 7 8
        on right: 12 16 18 19 20 21 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 69 70 72 74 75 76 77 78 82 95 108 110 113 115 117 118 119 122 123 125 127 128 130 131 133 135 140 142 143 146 148 149 150 151 152 153 155
    stmt_sep (95)
        on left: 9 10
        on right: 55 57 58 59 72 73 87 91 95
    expr_list (96)
        on left: 11 12
        on right: 12 14
    expr_list_opt (97)
        on left: 13 14
        on right: 28 51 118
    expr (98)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
        on right: 11 12 15 16 17 18 20 21 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 54 55 56 57 58 59 60 61 62 63 64 65 66 69 73 87 113
    block_statement (99)
        on left: 53
        on right: 54 56 57 58 76 77 78 94
    if_stmt (100)
        on left: 54 55 56 57 58 59
        on right: 88
    while_stmt (101)
        on left: 60 61
        on right: 89
    do_while_stmt (102)
        on left: 62 63
        on right: 91
    for_stmt (103)
        on left: 64 65
        on right: 90
    switch_stmt (104)
        on left: 66
        on right: 92
    case_list (105)
        on left: 67 68
        on right: 66 68
    case_stmt (106)
        on left: 69 70
        on right: 67 68
    break_opt (107)
        on left: 71 72
        on right: 69 70
    return_statement (108)
        on left: 73
        on right: 97
    function_declaration (109)
        on left: 74 75
        on right: 4
    try_catch_block (110)
        on left: 76
        on right: 93
    catch_clause (111)
        on left: 77 78
        on right: 76
    error_type (112)
        on left: 79 80
        on right: 78
    stmt_list_opt (113)
        on left: 81 82
        on right: 53 69 70 74 75 142 143
    stmt_list (114)
        on left: 83 84 85 86
        on right: 82 85 86
    stmt (115)
        on left: 87 88 89 90 91 92 93 94 95 96 97
        on right: 60 62 64 83 85
    empty_stmt (116)
        on left: 98
        on right: 61 63 65 84 86
    modifier (117)
        on left: 99 100
        on right: 95
    type (118)
        on left: 101 102 103 104 105 106 107
        on right: 19 108
    type_mark (119)
        on left: 108
        on right: 74 110 117 118 122 123 142
    type_mark_opt (120)
        on left: 109 110
        on right: 111
    variable (121)
        on left: 111
        on right: 114 115
    var_init_opt (122)
        on left: 112 113
        on right: 114 115 154 155
    var_list (123)
        on left: 114 115
        on right: 115 116
    var_declaration (124)
        on left: 116 117 118
        on right: 95 141
    dimensions (125)
        on left: 119
        on right: 120 121
    dimensions_list (126)
        on left: 120 121
        on right: 117 118 121
    param (127)
        on left: 122
        on right: 124 125
    optional_param (128)
        on left: 123
        on right: 126 127
    param_list (129)
        on left: 124 125 126 127
        on right: 125 127 128
    param_list_0_or_more (130)
        on left: 128 129
        on right: 74 75 142 143
    implements_decl (131)
        on left: 130 131
        on right: 131 151 152
    readonly_opt (132)
        on left: 132 133
        on right: 141 142 143
    static_opt (133)
        on left: 134 135
        on right: 141 142 143 144
    visibility (134)
        on left: 136 137 138
        on right: 140
    visibility_opt (135)
        on left: 139 140
        on right: 141 142 143 144
    class_member (136)
        on left: 141 142 143 144
        on right: 145 146
    class_member_list (137)
        on left: 145 146
        on right: 146 148
    class_body (138)
        on left: 147 148
        on right: 149 150 151 152
    class_declaration (139)
        on left: 149 150 151 152
        on right: 3 144
    enum_declaration (140)
        on left: 153
        on right: 96
    id_list (141)
        on left: 154 155
        on right: 153 155


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1
    FUNC   shift, and go to state 2

    program               go to state 3
    program_elem          go to state 4
    function_declaration  go to state 5
    class_declaration     go to state 6


State 1

  149 class_declaration: CLASS . endl_opt ID endl_opt '{' endl_opt class_body '}'
  150                  | CLASS . endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  151                  | CLASS . endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt class_body '}'
  152                  | CLASS . endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 9


State 2

   74 function_declaration: FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   75                     | FUNC . endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 10


State 3

    0 $accept: program . $end
    2 program: program . program_elem

    $end   shift, and go to state 11
    CLASS  shift, and go to state 1
    FUNC   shift, and go to state 2

    program_elem          go to state 12
    function_declaration  go to state 5
    class_declaration     go to state 6


State 4

    1 program: program_elem .

    $default  reduce using rule 1 (program)


State 5

    4 program_elem: function_declaration .

    $default  reduce using rule 4 (program_elem)


State 6

    3 program_elem: class_declaration .

    $default  reduce using rule 3 (program_elem)


State 7

    5 endl: ENDL .

    $default  reduce using rule 5 (endl)


State 8

    6 endl: endl . ENDL
    8 endl_opt: endl .

    ENDL  shift, and go to state 13

    $default  reduce using rule 8 (endl_opt)


State 9

  149 class_declaration: CLASS endl_opt . ID endl_opt '{' endl_opt class_body '}'
  150                  | CLASS endl_opt . ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  151                  | CLASS endl_opt . ID endl_opt implements_decl endl_opt '{' endl_opt class_body '}'
  152                  | CLASS endl_opt . ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    ID  shift, and go to state 14


State 10

   74 function_declaration: FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   75                     | FUNC endl_opt . ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ID  shift, and go to state 15


State 11

    0 $accept: program $end .

    $default  accept


State 12

    2 program: program program_elem .

    $default  reduce using rule 2 (program)


State 13

    6 endl: endl ENDL .

    $default  reduce using rule 6 (endl)


State 14

  149 class_declaration: CLASS endl_opt ID . endl_opt '{' endl_opt class_body '}'
  150                  | CLASS endl_opt ID . endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  151                  | CLASS endl_opt ID . endl_opt implements_decl endl_opt '{' endl_opt class_body '}'
  152                  | CLASS endl_opt ID . endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 16


State 15

   74 function_declaration: FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   75                     | FUNC endl_opt ID . endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 17


State 16

  149 class_declaration: CLASS endl_opt ID endl_opt . '{' endl_opt class_body '}'
  150                  | CLASS endl_opt ID endl_opt . EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}'
  151                  | CLASS endl_opt ID endl_opt . implements_decl endl_opt '{' endl_opt class_body '}'
  152                  | CLASS endl_opt ID endl_opt . EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    IMPLEMENTS  shift, and go to state 18
    EXTENDS     shift, and go to state 19
    '{'         shift, and go to state 20

    implements_decl  go to state 21


State 17

   74 function_declaration: FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   75                     | FUNC endl_opt ID endl_opt . param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    '('  shift, and go to state 22

    param_list_0_or_more  go to state 23


State 18

  130 implements_decl: IMPLEMENTS . endl_opt ID

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 24


State 19

  150 class_declaration: CLASS endl_opt ID endl_opt EXTENDS . endl_opt ID endl_opt '{' endl_opt class_body '}'
  152                  | CLASS endl_opt ID endl_opt EXTENDS . endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 25


State 20

  149 class_declaration: CLASS endl_opt ID endl_opt '{' . endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 26


State 21

  131 implements_decl: implements_decl . endl_opt ',' endl_opt ID
  151 class_declaration: CLASS endl_opt ID endl_opt implements_decl . endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 27


State 22

  128 param_list_0_or_more: '(' . endl_opt param_list endl_opt ')'
  129                     | '(' . ')'

    ENDL  shift, and go to state 7
    ')'   shift, and go to state 28

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 29


State 23

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   75                     | FUNC endl_opt ID endl_opt param_list_0_or_more . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 30


State 24

  130 implements_decl: IMPLEMENTS endl_opt . ID

    ID  shift, and go to state 31


State 25

  150 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt . ID endl_opt '{' endl_opt class_body '}'
  152                  | CLASS endl_opt ID endl_opt EXTENDS endl_opt . ID implements_decl endl_opt '{' endl_opt class_body '}'

    ID  shift, and go to state 32


State 26

  149 class_declaration: CLASS endl_opt ID endl_opt '{' endl_opt . class_body '}'

    PUBLIC     shift, and go to state 33
    PROTECTED  shift, and go to state 34
    PRIVATE    shift, and go to state 35

    '}'       reduce using rule 147 (class_body)
    $default  reduce using rule 139 (visibility_opt)

    visibility         go to state 36
    visibility_opt     go to state 37
    class_member       go to state 38
    class_member_list  go to state 39
    class_body         go to state 40


State 27

  131 implements_decl: implements_decl endl_opt . ',' endl_opt ID
  151 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt . '{' endl_opt class_body '}'

    ','  shift, and go to state 41
    '{'  shift, and go to state 42


State 28

  129 param_list_0_or_more: '(' ')' .

    $default  reduce using rule 129 (param_list_0_or_more)


State 29

  128 param_list_0_or_more: '(' endl_opt . param_list endl_opt ')'

    ID  shift, and go to state 43

    param           go to state 44
    optional_param  go to state 45
    param_list      go to state 46


State 30

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . type_mark endl_opt '{' endl_opt stmt_list_opt '}'
   75                     | FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt . '{' endl_opt stmt_list_opt '}'

    ':'  shift, and go to state 47
    '{'  shift, and go to state 48

    type_mark  go to state 49


State 31

  130 implements_decl: IMPLEMENTS endl_opt ID .

    $default  reduce using rule 130 (implements_decl)


State 32

  150 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID . endl_opt '{' endl_opt class_body '}'
  152                  | CLASS endl_opt ID endl_opt EXTENDS endl_opt ID . implements_decl endl_opt '{' endl_opt class_body '}'

    IMPLEMENTS  shift, and go to state 18
    ENDL        shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl             go to state 8
    endl_opt         go to state 50
    implements_decl  go to state 51


State 33

  138 visibility: PUBLIC .

    $default  reduce using rule 138 (visibility)


State 34

  137 visibility: PROTECTED .

    $default  reduce using rule 137 (visibility)


State 35

  136 visibility: PRIVATE .

    $default  reduce using rule 136 (visibility)


State 36

  140 visibility_opt: visibility . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 52


State 37

  141 class_member: visibility_opt . static_opt readonly_opt var_declaration
  142             | visibility_opt . static_opt readonly_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
  143             | visibility_opt . static_opt readonly_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'
  144             | visibility_opt . static_opt class_declaration

    STATIC  shift, and go to state 53

    $default  reduce using rule 134 (static_opt)

    static_opt  go to state 54


State 38

  145 class_member_list: class_member .

    $default  reduce using rule 145 (class_member_list)


State 39

  146 class_member_list: class_member_list . endl_opt class_member
  148 class_body: class_member_list . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 55


State 40

  149 class_declaration: CLASS endl_opt ID endl_opt '{' endl_opt class_body . '}'

    '}'  shift, and go to state 56


State 41

  131 implements_decl: implements_decl endl_opt ',' . endl_opt ID

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 57


State 42

  151 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt '{' . endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 58


State 43

  122 param: ID . endl_opt type_mark
  123 optional_param: ID . endl_opt '?' endl_opt type_mark

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 59


State 44

  124 param_list: param .

    $default  reduce using rule 124 (param_list)


State 45

  126 param_list: optional_param .

    $default  reduce using rule 126 (param_list)


State 46

  125 param_list: param_list . endl_opt ',' endl_opt param
  127           | param_list . endl_opt ',' endl_opt optional_param
  128 param_list_0_or_more: '(' endl_opt param_list . endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 60


State 47

  108 type_mark: ':' . endl_opt type

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 61


State 48

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 62


State 49

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 63


State 50

  150 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt . '{' endl_opt class_body '}'

    '{'  shift, and go to state 64


State 51

  131 implements_decl: implements_decl . endl_opt ',' endl_opt ID
  152 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl . endl_opt '{' endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 65


State 52

  140 visibility_opt: visibility endl_opt .

    $default  reduce using rule 140 (visibility_opt)


State 53

  135 static_opt: STATIC . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 66


State 54

  141 class_member: visibility_opt static_opt . readonly_opt var_declaration
  142             | visibility_opt static_opt . readonly_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
  143             | visibility_opt static_opt . readonly_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'
  144             | visibility_opt static_opt . class_declaration

    CLASS     shift, and go to state 1
    READONLY  shift, and go to state 67

    $default  reduce using rule 132 (readonly_opt)

    readonly_opt       go to state 68
    class_declaration  go to state 69


State 55

  146 class_member_list: class_member_list endl_opt . class_member
  148 class_body: class_member_list endl_opt .

    PUBLIC     shift, and go to state 33
    PROTECTED  shift, and go to state 34
    PRIVATE    shift, and go to state 35

    '}'       reduce using rule 148 (class_body)
    $default  reduce using rule 139 (visibility_opt)

    visibility      go to state 36
    visibility_opt  go to state 37
    class_member    go to state 70


State 56

  149 class_declaration: CLASS endl_opt ID endl_opt '{' endl_opt class_body '}' .

    $default  reduce using rule 149 (class_declaration)


State 57

  131 implements_decl: implements_decl endl_opt ',' endl_opt . ID

    ID  shift, and go to state 71


State 58

  151 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt . class_body '}'

    PUBLIC     shift, and go to state 33
    PROTECTED  shift, and go to state 34
    PRIVATE    shift, and go to state 35

    '}'       reduce using rule 147 (class_body)
    $default  reduce using rule 139 (visibility_opt)

    visibility         go to state 36
    visibility_opt     go to state 37
    class_member       go to state 38
    class_member_list  go to state 39
    class_body         go to state 72


State 59

  122 param: ID endl_opt . type_mark
  123 optional_param: ID endl_opt . '?' endl_opt type_mark

    '?'  shift, and go to state 73
    ':'  shift, and go to state 47

    type_mark  go to state 74


State 60

  125 param_list: param_list endl_opt . ',' endl_opt param
  127           | param_list endl_opt . ',' endl_opt optional_param
  128 param_list_0_or_more: '(' endl_opt param_list endl_opt . ')'

    ')'  shift, and go to state 75
    ','  shift, and go to state 76


State 61

  108 type_mark: ':' endl_opt . type

    UNKNOWN  shift, and go to state 77
    ANY      shift, and go to state 78
    NUMBER   shift, and go to state 79
    STRING   shift, and go to state 80
    VOID     shift, and go to state 81
    BOOLEAN  shift, and go to state 82
    ID       shift, and go to state 83

    type  go to state 84


State 62

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    $default  reduce using rule 81 (stmt_list_opt)

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt_list_opt     go to state 117
    stmt_list         go to state 118
    stmt              go to state 119
    empty_stmt        go to state 120
    modifier          go to state 121
    enum_declaration  go to state 122


State 63

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt . '{' endl_opt stmt_list_opt '}'

    '{'  shift, and go to state 123


State 64

  150 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' . endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 124


State 65

  131 implements_decl: implements_decl endl_opt . ',' endl_opt ID
  152 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt . '{' endl_opt class_body '}'

    ','  shift, and go to state 41
    '{'  shift, and go to state 125


State 66

  135 static_opt: STATIC endl_opt .

    $default  reduce using rule 135 (static_opt)


State 67

  133 readonly_opt: READONLY . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 126


State 68

  141 class_member: visibility_opt static_opt readonly_opt . var_declaration
  142             | visibility_opt static_opt readonly_opt . ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
  143             | visibility_opt static_opt readonly_opt . ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ID  shift, and go to state 127

    variable         go to state 128
    var_list         go to state 129
    var_declaration  go to state 130


State 69

  144 class_member: visibility_opt static_opt class_declaration .

    $default  reduce using rule 144 (class_member)


State 70

  146 class_member_list: class_member_list endl_opt class_member .

    $default  reduce using rule 146 (class_member_list)


State 71

  131 implements_decl: implements_decl endl_opt ',' endl_opt ID .

    $default  reduce using rule 131 (implements_decl)


State 72

  151 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt class_body . '}'

    '}'  shift, and go to state 131


State 73

  123 optional_param: ID endl_opt '?' . endl_opt type_mark

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 132


State 74

  122 param: ID endl_opt type_mark .

    $default  reduce using rule 122 (param)


State 75

  128 param_list_0_or_more: '(' endl_opt param_list endl_opt ')' .

    $default  reduce using rule 128 (param_list_0_or_more)


State 76

  125 param_list: param_list endl_opt ',' . endl_opt param
  127           | param_list endl_opt ',' . endl_opt optional_param

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 133


State 77

  105 type: UNKNOWN .

    $default  reduce using rule 105 (type)


State 78

  104 type: ANY .

    $default  reduce using rule 104 (type)


State 79

  101 type: NUMBER .

    $default  reduce using rule 101 (type)


State 80

  102 type: STRING .

    $default  reduce using rule 102 (type)


State 81

  106 type: VOID .

    $default  reduce using rule 106 (type)


State 82

  103 type: BOOLEAN .

    $default  reduce using rule 103 (type)


State 83

  107 type: ID .

    $default  reduce using rule 107 (type)


State 84

  108 type_mark: ':' endl_opt type .

    $default  reduce using rule 108 (type_mark)


State 85

   73 return_statement: RETURN . expr stmt_sep

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 134


State 86

   62 do_while_stmt: DO . endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'
   63              | DO . endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 135


State 87

   54 if_stmt: IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement
   55        | IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep
   56        | IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement
   57        | IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep
   58        | IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement
   59        | IF . endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 136


State 88

   64 for_stmt: FOR . endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt
   65         | FOR . endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 137


State 89

   60 while_stmt: WHILE . endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt
   61           | WHILE . endl_opt '(' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 138


State 90

   66 switch_stmt: SWITCH . endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 139


State 91

   76 try_catch_block: TRY . endl_opt block_statement endl_opt catch_clause

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 140


State 92

   99 modifier: LET .

    $default  reduce using rule 99 (modifier)


State 93

  100 modifier: CONST .

    $default  reduce using rule 100 (modifier)


State 94

  153 enum_declaration: ENUM . endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 141


State 95

   22 expr: NUMBER_LITERAL .

    $default  reduce using rule 22 (expr)


State 96

   23 expr: STRING_LITERAL .

    $default  reduce using rule 23 (expr)


State 97

   24 expr: TRUE_LITERAL .

    $default  reduce using rule 24 (expr)


State 98

   25 expr: FALSE_LITERAL .

    $default  reduce using rule 25 (expr)


State 99

   19 expr: ID . AS endl_opt type
   26     | ID .
   28     | ID . endl_opt '(' endl_opt expr_list_opt ')'

    ENDL  shift, and go to state 7
    AS    shift, and go to state 142

    ENDL      [reduce using rule 26 (expr)]
    '('       reduce using rule 7 (endl_opt)
    $default  reduce using rule 26 (expr)

    endl      go to state 8
    endl_opt  go to state 143

    shift/reduce conflict on token ENDL:
       26 expr: ID .
        5 endl: . ENDL
      First example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt ID . ENDL '(' endl_opt expr_list_opt ')' stmt_sep endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                          $end
               `-> 1: function_declaration
                      `-> 75: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                            '}'
                                                                                                   `-> 82: stmt_list                                                                               endl_opt
                                                                                                           `-> 83: stmt
                                                                                                                   `-> 87: expr                                                           stmt_sep
                                                                                                                           `-> 28: ID endl_opt             '(' endl_opt expr_list_opt ')'
                                                                                                                                      `-> 8: endl
                                                                                                                                             `-> 5: . ENDL
      Second example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt ID . ENDL endl_opt '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                          $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 75: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                     '}'
                                                                                                          `-> 82: stmt_list                                        endl_opt
                                                                                                                  `-> 83: stmt
                                                                                                                          `-> 87: expr         stmt_sep
                                                                                                                                  `-> 26: ID . `-> 10: endl
                                                                                                                                                       `-> 5: ENDL



State 100

   98 empty_stmt: ';' .

    $default  reduce using rule 98 (empty_stmt)


State 101

   21 expr: '+' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 144


State 102

   20 expr: '-' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 145


State 103

   18 expr: PREF_INCREMENT . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 146


State 104

   16 expr: PREF_DECREMENT . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 147


State 105

   46 expr: NOT . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 148


State 106

   27 expr: '(' . endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 149


State 107

   53 block_statement: '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 150


State 108

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID
   87 stmt: expr . stmt_sep

    ';'               shift, and go to state 151
    ENDL              shift, and go to state 7
    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    endl      go to state 176
    stmt_sep  go to state 177


State 109

   94 stmt: block_statement .

    $default  reduce using rule 94 (stmt)


State 110

   88 stmt: if_stmt .

    $default  reduce using rule 88 (stmt)


State 111

   89 stmt: while_stmt .

    $default  reduce using rule 89 (stmt)


State 112

   91 stmt: do_while_stmt . stmt_sep

    ';'   shift, and go to state 151
    ENDL  shift, and go to state 7

    endl      go to state 176
    stmt_sep  go to state 178


State 113

   90 stmt: for_stmt .

    $default  reduce using rule 90 (stmt)


State 114

   92 stmt: switch_stmt .

    $default  reduce using rule 92 (stmt)


State 115

   97 stmt: return_statement .

    $default  reduce using rule 97 (stmt)


State 116

   93 stmt: try_catch_block .

    $default  reduce using rule 93 (stmt)


State 117

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 179


State 118

   82 stmt_list_opt: stmt_list . endl_opt
   85 stmt_list: stmt_list . stmt
   86          | stmt_list . empty_stmt

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    ENDL            shift, and go to state 7
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    $default  reduce using rule 7 (endl_opt)

    endl              go to state 8
    endl_opt          go to state 180
    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt              go to state 181
    empty_stmt        go to state 182
    modifier          go to state 121
    enum_declaration  go to state 122


State 119

   83 stmt_list: stmt .

    $default  reduce using rule 83 (stmt_list)


State 120

   84 stmt_list: empty_stmt .

    $default  reduce using rule 84 (stmt_list)


State 121

   95 stmt: modifier . endl_opt var_declaration stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 183


State 122

   96 stmt: enum_declaration .

    $default  reduce using rule 96 (stmt)


State 123

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 184


State 124

  150 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt . class_body '}'

    PUBLIC     shift, and go to state 33
    PROTECTED  shift, and go to state 34
    PRIVATE    shift, and go to state 35

    '}'       reduce using rule 147 (class_body)
    $default  reduce using rule 139 (visibility_opt)

    visibility         go to state 36
    visibility_opt     go to state 37
    class_member       go to state 38
    class_member_list  go to state 39
    class_body         go to state 185


State 125

  152 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' . endl_opt class_body '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 186


State 126

  133 readonly_opt: READONLY endl_opt .

    $default  reduce using rule 133 (readonly_opt)


State 127

  111 variable: ID . type_mark_opt
  117 var_declaration: ID . endl_opt type_mark endl_opt dimensions_list
  118                | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'
  142 class_member: visibility_opt static_opt readonly_opt ID . endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
  143             | visibility_opt static_opt readonly_opt ID . endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 109 (type_mark_opt)]
    ':'       reduce using rule 7 (endl_opt)
    '('       reduce using rule 7 (endl_opt)
    $default  reduce using rule 109 (type_mark_opt)

    endl           go to state 8
    endl_opt       go to state 187
    type_mark_opt  go to state 188

    shift/reduce conflict on token ENDL:
      109 type_mark_opt: %empty .
        5 endl: . ENDL
      First example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt ID . ENDL type_mark endl_opt dimensions_list endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                  $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 149: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                            '}'
                                                                              `-> 148: class_member                                                                                                        endl_opt
                                                                                       `-> 141: visibility_opt static_opt readonly_opt var_declaration
                                                                                                                                       `-> 117: ID endl_opt             type_mark endl_opt dimensions_list
                                                                                                                                                   `-> 8: endl
                                                                                                                                                          `-> 5: . ENDL
      Second example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt ID . ENDL '=' endl_opt expr endl_opt '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                     $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 149: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                                               '}'
                                                                              `-> 148: class_member_list                                                                                                                                      endl_opt
                                                                                       `-> 145: class_member
                                                                                                `-> 141: visibility_opt static_opt readonly_opt var_declaration
                                                                                                                                                `-> 116: var_list
                                                                                                                                                         `-> 114: variable                      var_init_opt
                                                                                                                                                                  `-> 111: ID type_mark_opt     `-> 113: endl_opt           '=' endl_opt expr
                                                                                                                                                                              `-> 109: %empty .          `-> 8: endl
                                                                                                                                                                                                                `-> 5: ENDL



State 128

  114 var_list: variable . var_init_opt

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 112 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 112 (var_init_opt)

    endl          go to state 8
    endl_opt      go to state 189
    var_init_opt  go to state 190

    shift/reduce conflict on token ENDL:
      112 var_init_opt: %empty .
        5 endl: . ENDL
      First example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt variable . ENDL '=' endl_opt expr endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                         $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 149: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                   '}'
                                                                              `-> 148: class_member_list                                                                                                          endl_opt
                                                                                       `-> 145: class_member
                                                                                                `-> 141: visibility_opt static_opt readonly_opt var_list
                                                                                                                                                `-> 114: variable var_init_opt
                                                                                                                                                                  `-> 113: endl_opt             '=' endl_opt expr
                                                                                                                                                                           `-> 8: endl
                                                                                                                                                                                  `-> 5: . ENDL
      Second example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt variable . ENDL '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                              $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 149: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                        '}'
                                                                              `-> 148: class_member_list                                                                                     endl_opt
                                                                                       `-> 145: class_member                                                                                 `-> 8: endl
                                                                                                `-> 141: visibility_opt static_opt readonly_opt var_declaration                                     `-> 5: ENDL
                                                                                                                                                `-> 116: var_list
                                                                                                                                                         `-> 114: variable var_init_opt
                                                                                                                                                                           `-> 112: %empty .



State 129

  115 var_list: var_list . endl_opt ',' endl_opt variable var_init_opt
  116 var_declaration: var_list .

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 116 (var_declaration)]
    ','       reduce using rule 7 (endl_opt)
    $default  reduce using rule 116 (var_declaration)

    endl      go to state 8
    endl_opt  go to state 191

    shift/reduce conflict on token ENDL:
      116 var_declaration: var_list .
        5 endl: . ENDL
      First example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt var_list . ENDL ',' endl_opt variable var_init_opt endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                 $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 149: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                           '}'
                                                                              `-> 148: class_member                                                                                                                       endl_opt
                                                                                       `-> 141: visibility_opt static_opt readonly_opt var_declaration
                                                                                                                                       `-> 116: var_list
                                                                                                                                                `-> 115: var_list endl_opt             ',' endl_opt variable var_init_opt
                                                                                                                                                                  `-> 8: endl
                                                                                                                                                                         `-> 5: . ENDL
      Second example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt var_list . ENDL '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                     $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 149: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                               '}'
                                                                              `-> 148: class_member_list                                                            endl_opt
                                                                                       `-> 145: class_member                                                        `-> 8: endl
                                                                                                `-> 141: visibility_opt static_opt readonly_opt var_declaration            `-> 5: ENDL
                                                                                                                                                `-> 116: var_list .



State 130

  141 class_member: visibility_opt static_opt readonly_opt var_declaration .

    $default  reduce using rule 141 (class_member)


State 131

  151 class_declaration: CLASS endl_opt ID endl_opt implements_decl endl_opt '{' endl_opt class_body '}' .

    $default  reduce using rule 151 (class_declaration)


State 132

  123 optional_param: ID endl_opt '?' endl_opt . type_mark

    ':'  shift, and go to state 47

    type_mark  go to state 192


State 133

  125 param_list: param_list endl_opt ',' endl_opt . param
  127           | param_list endl_opt ',' endl_opt . optional_param

    ID  shift, and go to state 43

    param           go to state 193
    optional_param  go to state 194


State 134

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID
   73 return_statement: RETURN expr . stmt_sep

    ';'               shift, and go to state 151
    ENDL              shift, and go to state 7
    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    endl      go to state 176
    stmt_sep  go to state 195


State 135

   62 do_while_stmt: DO endl_opt . stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'
   63              | DO endl_opt . empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt              go to state 196
    empty_stmt        go to state 197
    modifier          go to state 121
    enum_declaration  go to state 122


State 136

   54 if_stmt: IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt block_statement
   55        | IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep
   56        | IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement
   57        | IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep
   58        | IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement
   59        | IF endl_opt . '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    '('  shift, and go to state 198


State 137

   64 for_stmt: FOR endl_opt . '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt
   65         | FOR endl_opt . '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    '('  shift, and go to state 199


State 138

   60 while_stmt: WHILE endl_opt . '(' endl_opt expr endl_opt ')' endl_opt stmt
   61           | WHILE endl_opt . '(' endl_opt expr endl_opt ')' endl_opt empty_stmt

    '('  shift, and go to state 200


State 139

   66 switch_stmt: SWITCH endl_opt . '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}'

    '('  shift, and go to state 201


State 140

   76 try_catch_block: TRY endl_opt . block_statement endl_opt catch_clause

    '{'  shift, and go to state 107

    block_statement  go to state 202


State 141

  153 enum_declaration: ENUM endl_opt . ID endl_opt '{' endl_opt id_list endl_opt '}'

    ID  shift, and go to state 203


State 142

   19 expr: ID AS . endl_opt type

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 204


State 143

   28 expr: ID endl_opt . '(' endl_opt expr_list_opt ')'

    '('  shift, and go to state 205


State 144

   21 expr: '+' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 206


State 145

   20 expr: '-' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 207


State 146

   18 expr: PREF_INCREMENT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 208


State 147

   16 expr: PREF_DECREMENT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 209


State 148

   46 expr: NOT endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 210


State 149

   27 expr: '(' endl_opt . expr endl_opt ')'

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 211


State 150

   53 block_statement: '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    $default  reduce using rule 81 (stmt_list_opt)

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt_list_opt     go to state 212
    stmt_list         go to state 118
    stmt              go to state 119
    empty_stmt        go to state 120
    modifier          go to state 121
    enum_declaration  go to state 122


State 151

    9 stmt_sep: ';' .

    $default  reduce using rule 9 (stmt_sep)


State 152

   40 expr: expr '=' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 213


State 153

   41 expr: expr PLUS_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 214


State 154

   42 expr: expr MINUS_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 215


State 155

   43 expr: expr MUL_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 216


State 156

   44 expr: expr DIV_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 217


State 157

   45 expr: expr MOD_ASSIGN . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 218


State 158

   50 expr: expr '[' . endl_opt expr endl_opt ']'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 219


State 159

   49 expr: expr '?' . endl_opt expr endl_opt ':' endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 220


State 160

   48 expr: expr OR . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 221


State 161

   47 expr: expr AND . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 222


State 162

   38 expr: expr EQUALS . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 223


State 163

   39 expr: expr NOT_EQUALS . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 224


State 164

   34 expr: expr '<' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 225


State 165

   35 expr: expr '>' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 226


State 166

   36 expr: expr LESS_OR_EQUAL . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 227


State 167

   37 expr: expr GREATER_OR_EQUAL . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 228


State 168

   29 expr: expr '+' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 229


State 169

   30 expr: expr '-' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 230


State 170

   31 expr: expr '*' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 231


State 171

   32 expr: expr '/' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 232


State 172

   33 expr: expr '%' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 233


State 173

   17 expr: expr POST_INCREMENT .

    $default  reduce using rule 17 (expr)


State 174

   15 expr: expr POST_DECREMENT .

    $default  reduce using rule 15 (expr)


State 175

   51 expr: expr '.' . endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr '.' . endl_opt ID

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 234


State 176

    6 endl: endl . ENDL
   10 stmt_sep: endl .

    ENDL  shift, and go to state 13

    ENDL      [reduce using rule 10 (stmt_sep)]
    $default  reduce using rule 10 (stmt_sep)

    shift/reduce conflict on token ENDL:
       10 stmt_sep: endl .
        6 endl: endl . ENDL
      Example: expr endl . ENDL
      Shift derivation
        stmt_list_opt
        `-> 82: stmt_list                                       endl_opt
                `-> 83: stmt                                    `-> 82: %empty
                        `-> 87: expr stmt_sep
                                     `-> 10: endl
                                             `-> 6: endl . ENDL
      Reduce derivation
        stmt_list_opt
        `-> 82: stmt_list                           endl_opt
                `-> 83: stmt                        `-> 8: endl
                        `-> 87: expr stmt_sep              `-> 5: ENDL
                                     `-> 10: endl .



State 177

   87 stmt: expr stmt_sep .

    $default  reduce using rule 87 (stmt)


State 178

   91 stmt: do_while_stmt stmt_sep .

    $default  reduce using rule 91 (stmt)


State 179

   75 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 75 (function_declaration)


State 180

   82 stmt_list_opt: stmt_list endl_opt .

    $default  reduce using rule 82 (stmt_list_opt)


State 181

   85 stmt_list: stmt_list stmt .

    $default  reduce using rule 85 (stmt_list)


State 182

   86 stmt_list: stmt_list empty_stmt .

    $default  reduce using rule 86 (stmt_list)


State 183

   95 stmt: modifier endl_opt . var_declaration stmt_sep

    ID  shift, and go to state 235

    variable         go to state 128
    var_list         go to state 129
    var_declaration  go to state 236


State 184

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    $default  reduce using rule 81 (stmt_list_opt)

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt_list_opt     go to state 237
    stmt_list         go to state 118
    stmt              go to state 119
    empty_stmt        go to state 120
    modifier          go to state 121
    enum_declaration  go to state 122


State 185

  150 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body . '}'

    '}'  shift, and go to state 238


State 186

  152 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt . class_body '}'

    PUBLIC     shift, and go to state 33
    PROTECTED  shift, and go to state 34
    PRIVATE    shift, and go to state 35

    '}'       reduce using rule 147 (class_body)
    $default  reduce using rule 139 (visibility_opt)

    visibility         go to state 36
    visibility_opt     go to state 37
    class_member       go to state 38
    class_member_list  go to state 39
    class_body         go to state 239


State 187

  110 type_mark_opt: endl_opt . type_mark
  117 var_declaration: ID endl_opt . type_mark endl_opt dimensions_list
  118                | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'
  142 class_member: visibility_opt static_opt readonly_opt ID endl_opt . param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
  143             | visibility_opt static_opt readonly_opt ID endl_opt . param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}'

    ':'  shift, and go to state 47
    '('  shift, and go to state 22

    type_mark             go to state 240
    param_list_0_or_more  go to state 241


State 188

  111 variable: ID type_mark_opt .

    $default  reduce using rule 111 (variable)


State 189

  113 var_init_opt: endl_opt . '=' endl_opt expr

    '='  shift, and go to state 242


State 190

  114 var_list: variable var_init_opt .

    $default  reduce using rule 114 (var_list)


State 191

  115 var_list: var_list endl_opt . ',' endl_opt variable var_init_opt

    ','  shift, and go to state 243


State 192

  123 optional_param: ID endl_opt '?' endl_opt type_mark .

    $default  reduce using rule 123 (optional_param)


State 193

  125 param_list: param_list endl_opt ',' endl_opt param .

    $default  reduce using rule 125 (param_list)


State 194

  127 param_list: param_list endl_opt ',' endl_opt optional_param .

    $default  reduce using rule 127 (param_list)


State 195

   73 return_statement: RETURN expr stmt_sep .

    $default  reduce using rule 73 (return_statement)


State 196

   62 do_while_stmt: DO endl_opt stmt . endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 244


State 197

   63 do_while_stmt: DO endl_opt empty_stmt . endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 245


State 198

   54 if_stmt: IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt block_statement
   55        | IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt expr stmt_sep
   56        | IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement
   57        | IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep
   58        | IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement
   59        | IF endl_opt '(' . endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 246


State 199

   64 for_stmt: FOR endl_opt '(' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt
   65         | FOR endl_opt '(' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 247


State 200

   60 while_stmt: WHILE endl_opt '(' . endl_opt expr endl_opt ')' endl_opt stmt
   61           | WHILE endl_opt '(' . endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 248


State 201

   66 switch_stmt: SWITCH endl_opt '(' . endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 249


State 202

   76 try_catch_block: TRY endl_opt block_statement . endl_opt catch_clause

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 250


State 203

  153 enum_declaration: ENUM endl_opt ID . endl_opt '{' endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 251


State 204

   19 expr: ID AS endl_opt . type

    UNKNOWN  shift, and go to state 77
    ANY      shift, and go to state 78
    NUMBER   shift, and go to state 79
    STRING   shift, and go to state 80
    VOID     shift, and go to state 81
    BOOLEAN  shift, and go to state 82
    ID       shift, and go to state 83

    type  go to state 252


State 205

   28 expr: ID endl_opt '(' . endl_opt expr_list_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 253


State 206

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   21     | '+' endl_opt expr .
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '.'  shift, and go to state 175

    $default  reduce using rule 21 (expr)


State 207

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   20     | '-' endl_opt expr .
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '.'  shift, and go to state 175

    $default  reduce using rule 20 (expr)


State 208

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   18     | PREF_INCREMENT endl_opt expr .
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 173
    POST_DECREMENT  shift, and go to state 174
    '.'             shift, and go to state 175

    $default  reduce using rule 18 (expr)


State 209

   15 expr: expr . POST_DECREMENT
   16     | PREF_DECREMENT endl_opt expr .
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 173
    POST_DECREMENT  shift, and go to state 174
    '.'             shift, and go to state 175

    $default  reduce using rule 16 (expr)


State 210

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   46     | NOT endl_opt expr .
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '.'  shift, and go to state 175

    $default  reduce using rule 46 (expr)


State 211

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   27     | '(' endl_opt expr . endl_opt ')'
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    ENDL              shift, and go to state 7
    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 254


State 212

   53 block_statement: '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 255


State 213

   40 expr: expr '=' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 256


State 214

   41 expr: expr PLUS_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 257


State 215

   42 expr: expr MINUS_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 258


State 216

   43 expr: expr MUL_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 259


State 217

   44 expr: expr DIV_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 260


State 218

   45 expr: expr MOD_ASSIGN endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 261


State 219

   50 expr: expr '[' endl_opt . expr endl_opt ']'

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 262


State 220

   49 expr: expr '?' endl_opt . expr endl_opt ':' endl_opt expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 263


State 221

   48 expr: expr OR endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 264


State 222

   47 expr: expr AND endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 265


State 223

   38 expr: expr EQUALS endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 266


State 224

   39 expr: expr NOT_EQUALS endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 267


State 225

   34 expr: expr '<' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 268


State 226

   35 expr: expr '>' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 269


State 227

   36 expr: expr LESS_OR_EQUAL endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 270


State 228

   37 expr: expr GREATER_OR_EQUAL endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 271


State 229

   29 expr: expr '+' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 272


State 230

   30 expr: expr '-' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 273


State 231

   31 expr: expr '*' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 274


State 232

   32 expr: expr '/' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 275


State 233

   33 expr: expr '%' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 276


State 234

   51 expr: expr '.' endl_opt . ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr '.' endl_opt . ID

    ID  shift, and go to state 277


State 235

  111 variable: ID . type_mark_opt
  117 var_declaration: ID . endl_opt type_mark endl_opt dimensions_list
  118                | ID . endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 109 (type_mark_opt)]
    ':'       reduce using rule 7 (endl_opt)
    $default  reduce using rule 109 (type_mark_opt)

    endl           go to state 8
    endl_opt       go to state 278
    type_mark_opt  go to state 188

    shift/reduce conflict on token ENDL:
      109 type_mark_opt: %empty .
        5 endl: . ENDL
      First example: ID . ENDL endl_opt type_mark endl_opt dimensions_list stmt_sep
      Shift derivation
        stmt
        `-> 95: ID endl_opt             var_declaration                                      stmt_sep
                   `-> 8: endl          `-> 117: endl_opt type_mark endl_opt dimensions_list
                          `-> 5: . ENDL
      Second example: modifier ID . ENDL
      Reduce derivation
        stmt
        `-> 95: modifier var_declaration                                                 stmt_sep
                         `-> 116: var_list                                               `-> 10: endl
                                  `-> 114: variable                      var_init_opt            `-> 5: ENDL
                                           `-> 111: ID type_mark_opt     `-> 114: %empty
                                                       `-> 109: %empty .



State 236

   95 stmt: modifier endl_opt var_declaration . stmt_sep

    ';'   shift, and go to state 151
    ENDL  shift, and go to state 7

    endl      go to state 176
    stmt_sep  go to state 279


State 237

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 280


State 238

  150 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID endl_opt '{' endl_opt class_body '}' .

    $default  reduce using rule 150 (class_declaration)


State 239

  152 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body . '}'

    '}'  shift, and go to state 281


State 240

  110 type_mark_opt: endl_opt type_mark .
  117 var_declaration: ID endl_opt type_mark . endl_opt dimensions_list
  118                | ID endl_opt type_mark . dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'

    ENDL  shift, and go to state 7
    '['   shift, and go to state 282

    ENDL      [reduce using rule 110 (type_mark_opt)]
    '['       [reduce using rule 7 (endl_opt)]
    $default  reduce using rule 110 (type_mark_opt)

    endl             go to state 8
    endl_opt         go to state 283
    dimensions       go to state 284
    dimensions_list  go to state 285

    shift/reduce conflict on token '[':
        7 endl_opt: %empty .
      119 dimensions: . '[' endl_opt ']'
      First example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt ID endl_opt type_mark . '[' endl_opt ']' endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                       $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 149: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                                                                 '}'
                                                                              `-> 148: class_member                                                                                                                                                             endl_opt
                                                                                       `-> 141: visibility_opt static_opt readonly_opt var_declaration
                                                                                                                                       `-> 118: ID endl_opt type_mark dimensions_list                      endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'
                                                                                                                                                                      `-> 120: dimensions
                                                                                                                                                                               `-> 119: . '[' endl_opt ']'
      Second example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt ID endl_opt type_mark . '[' endl_opt ']' endl_opt '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                         $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 149: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                                   '}'
                                                                              `-> 148: class_member_list                                                                                                                          endl_opt
                                                                                       `-> 145: class_member
                                                                                                `-> 141: visibility_opt static_opt readonly_opt var_declaration
                                                                                                                                                `-> 117: ID endl_opt type_mark endl_opt        dimensions_list
                                                                                                                                                                               `-> 7: %empty . `-> 120: dimensions
                                                                                                                                                                                                        `-> 119: '[' endl_opt ']'

    shift/reduce conflict on token ENDL:
      110 type_mark_opt: endl_opt type_mark .
        5 endl: . ENDL
      First example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt ID endl_opt type_mark . ENDL dimensions_list endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                  $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 149: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                            '}'
                                                                              `-> 148: class_member                                                                                                        endl_opt
                                                                                       `-> 141: visibility_opt static_opt readonly_opt var_declaration
                                                                                                                                       `-> 117: ID endl_opt type_mark endl_opt             dimensions_list
                                                                                                                                                                      `-> 8: endl
                                                                                                                                                                             `-> 5: . ENDL
      Second example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt ID endl_opt type_mark . ENDL '=' endl_opt expr endl_opt '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                 $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 149: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                                                           '}'
                                                                              `-> 148: class_member_list                                                                                                                                                  endl_opt
                                                                                       `-> 145: class_member
                                                                                                `-> 141: visibility_opt static_opt readonly_opt var_declaration
                                                                                                                                                `-> 116: var_list
                                                                                                                                                         `-> 114: variable                                  var_init_opt
                                                                                                                                                                  `-> 111: ID type_mark_opt                 `-> 113: endl_opt           '=' endl_opt expr
                                                                                                                                                                              `-> 110: endl_opt type_mark .          `-> 8: endl
                                                                                                                                                                                                                            `-> 5: ENDL



State 241

  142 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more . endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}'
  143             | visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 286


State 242

  113 var_init_opt: endl_opt '=' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 287


State 243

  115 var_list: var_list endl_opt ',' . endl_opt variable var_init_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 288


State 244

   62 do_while_stmt: DO endl_opt stmt endl_opt . WHILE endl_opt '(' endl_opt expr endl_opt ')'

    WHILE  shift, and go to state 289


State 245

   63 do_while_stmt: DO endl_opt empty_stmt endl_opt . WHILE endl_opt '(' endl_opt expr endl_opt ')'

    WHILE  shift, and go to state 290


State 246

   54 if_stmt: IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt block_statement
   55        | IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt expr stmt_sep
   56        | IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement
   57        | IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep
   58        | IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement
   59        | IF endl_opt '(' endl_opt . expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 291


State 247

   64 for_stmt: FOR endl_opt '(' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt
   65         | FOR endl_opt '(' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 292


State 248

   60 while_stmt: WHILE endl_opt '(' endl_opt . expr endl_opt ')' endl_opt stmt
   61           | WHILE endl_opt '(' endl_opt . expr endl_opt ')' endl_opt empty_stmt

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 293


State 249

   66 switch_stmt: SWITCH endl_opt '(' endl_opt . expr endl_opt ')' endl_opt '{' endl_opt case_list '}'

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 294


State 250

   76 try_catch_block: TRY endl_opt block_statement endl_opt . catch_clause

    CATCH  shift, and go to state 295

    catch_clause  go to state 296


State 251

  153 enum_declaration: ENUM endl_opt ID endl_opt . '{' endl_opt id_list endl_opt '}'

    '{'  shift, and go to state 297


State 252

   19 expr: ID AS endl_opt type .

    $default  reduce using rule 19 (expr)


State 253

   28 expr: ID endl_opt '(' endl_opt . expr_list_opt ')'

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 298
    expr_list_opt  go to state 299
    expr           go to state 300


State 254

   27 expr: '(' endl_opt expr endl_opt . ')'

    ')'  shift, and go to state 301


State 255

   53 block_statement: '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 53 (block_statement)


State 256

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   40     | expr '=' endl_opt expr .
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 40 (expr)


State 257

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   41     | expr PLUS_ASSIGN endl_opt expr .
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 41 (expr)


State 258

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   42     | expr MINUS_ASSIGN endl_opt expr .
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 42 (expr)


State 259

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   43     | expr MUL_ASSIGN endl_opt expr .
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 43 (expr)


State 260

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   44     | expr DIV_ASSIGN endl_opt expr .
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 44 (expr)


State 261

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   45     | expr MOD_ASSIGN endl_opt expr .
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 45 (expr)


State 262

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   50     | expr '[' endl_opt expr . endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    ENDL              shift, and go to state 7
    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 302


State 263

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr '?' endl_opt expr . endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    ENDL              shift, and go to state 7
    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 303


State 264

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   48     | expr OR endl_opt expr .
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 48 (expr)


State 265

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   47     | expr AND endl_opt expr .
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 47 (expr)


State 266

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   38     | expr EQUALS endl_opt expr .
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '+'             shift, and go to state 168
    '-'             shift, and go to state 169
    '*'             shift, and go to state 170
    '/'             shift, and go to state 171
    '%'             shift, and go to state 172
    POST_INCREMENT  shift, and go to state 173
    POST_DECREMENT  shift, and go to state 174
    '.'             shift, and go to state 175

    $default  reduce using rule 38 (expr)


State 267

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   39     | expr NOT_EQUALS endl_opt expr .
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '+'             shift, and go to state 168
    '-'             shift, and go to state 169
    '*'             shift, and go to state 170
    '/'             shift, and go to state 171
    '%'             shift, and go to state 172
    POST_INCREMENT  shift, and go to state 173
    POST_DECREMENT  shift, and go to state 174
    '.'             shift, and go to state 175

    $default  reduce using rule 39 (expr)


State 268

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   34     | expr '<' endl_opt expr .
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '+'             shift, and go to state 168
    '-'             shift, and go to state 169
    '*'             shift, and go to state 170
    '/'             shift, and go to state 171
    '%'             shift, and go to state 172
    POST_INCREMENT  shift, and go to state 173
    POST_DECREMENT  shift, and go to state 174
    '.'             shift, and go to state 175

    $default  reduce using rule 34 (expr)


State 269

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   35     | expr '>' endl_opt expr .
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '+'             shift, and go to state 168
    '-'             shift, and go to state 169
    '*'             shift, and go to state 170
    '/'             shift, and go to state 171
    '%'             shift, and go to state 172
    POST_INCREMENT  shift, and go to state 173
    POST_DECREMENT  shift, and go to state 174
    '.'             shift, and go to state 175

    $default  reduce using rule 35 (expr)


State 270

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   36     | expr LESS_OR_EQUAL endl_opt expr .
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '+'             shift, and go to state 168
    '-'             shift, and go to state 169
    '*'             shift, and go to state 170
    '/'             shift, and go to state 171
    '%'             shift, and go to state 172
    POST_INCREMENT  shift, and go to state 173
    POST_DECREMENT  shift, and go to state 174
    '.'             shift, and go to state 175

    $default  reduce using rule 36 (expr)


State 271

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   37     | expr GREATER_OR_EQUAL endl_opt expr .
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '+'             shift, and go to state 168
    '-'             shift, and go to state 169
    '*'             shift, and go to state 170
    '/'             shift, and go to state 171
    '%'             shift, and go to state 172
    POST_INCREMENT  shift, and go to state 173
    POST_DECREMENT  shift, and go to state 174
    '.'             shift, and go to state 175

    $default  reduce using rule 37 (expr)


State 272

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   29     | expr '+' endl_opt expr .
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '*'             shift, and go to state 170
    '/'             shift, and go to state 171
    '%'             shift, and go to state 172
    POST_INCREMENT  shift, and go to state 173
    POST_DECREMENT  shift, and go to state 174
    '.'             shift, and go to state 175

    $default  reduce using rule 29 (expr)


State 273

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   30     | expr '-' endl_opt expr .
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '*'             shift, and go to state 170
    '/'             shift, and go to state 171
    '%'             shift, and go to state 172
    POST_INCREMENT  shift, and go to state 173
    POST_DECREMENT  shift, and go to state 174
    '.'             shift, and go to state 175

    $default  reduce using rule 30 (expr)


State 274

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   31     | expr '*' endl_opt expr .
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 173
    POST_DECREMENT  shift, and go to state 174
    '.'             shift, and go to state 175

    $default  reduce using rule 31 (expr)


State 275

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   32     | expr '/' endl_opt expr .
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 173
    POST_DECREMENT  shift, and go to state 174
    '.'             shift, and go to state 175

    $default  reduce using rule 32 (expr)


State 276

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   33     | expr '%' endl_opt expr .
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    POST_INCREMENT  shift, and go to state 173
    POST_DECREMENT  shift, and go to state 174
    '.'             shift, and go to state 175

    $default  reduce using rule 33 (expr)


State 277

   51 expr: expr '.' endl_opt ID . endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr '.' endl_opt ID .

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 52 (expr)]
    '('       reduce using rule 7 (endl_opt)
    $default  reduce using rule 52 (expr)

    endl      go to state 8
    endl_opt  go to state 304

    shift/reduce conflict on token ENDL:
       52 expr: expr '.' endl_opt ID .
        5 endl: . ENDL
      First example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt expr '.' endl_opt ID . ENDL '(' endl_opt expr_list_opt ')' stmt_sep endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                            $end
               `-> 1: function_declaration
                      `-> 75: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                              '}'
                                                                                                   `-> 82: stmt_list                                                                                                 endl_opt
                                                                                                           `-> 83: stmt
                                                                                                                   `-> 87: expr                                                                             stmt_sep
                                                                                                                           `-> 51: expr '.' endl_opt ID endl_opt             '(' endl_opt expr_list_opt ')'
                                                                                                                                                        `-> 8: endl
                                                                                                                                                               `-> 5: . ENDL
      Second example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt expr '.' endl_opt ID . ENDL endl_opt '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                            $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 75: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                       '}'
                                                                                                          `-> 82: stmt_list                                                          endl_opt
                                                                                                                  `-> 83: stmt
                                                                                                                          `-> 87: expr                           stmt_sep
                                                                                                                                  `-> 52: expr '.' endl_opt ID . `-> 10: endl
                                                                                                                                                                         `-> 5: ENDL



State 278

  110 type_mark_opt: endl_opt . type_mark
  117 var_declaration: ID endl_opt . type_mark endl_opt dimensions_list
  118                | ID endl_opt . type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'

    ':'  shift, and go to state 47

    type_mark  go to state 240


State 279

   95 stmt: modifier endl_opt var_declaration stmt_sep .

    $default  reduce using rule 95 (stmt)


State 280

   74 function_declaration: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 74 (function_declaration)


State 281

  152 class_declaration: CLASS endl_opt ID endl_opt EXTENDS endl_opt ID implements_decl endl_opt '{' endl_opt class_body '}' .

    $default  reduce using rule 152 (class_declaration)


State 282

  119 dimensions: '[' . endl_opt ']'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 305


State 283

  117 var_declaration: ID endl_opt type_mark endl_opt . dimensions_list

    '['  shift, and go to state 282

    dimensions       go to state 284
    dimensions_list  go to state 306


State 284

  120 dimensions_list: dimensions .

    $default  reduce using rule 120 (dimensions_list)


State 285

  118 var_declaration: ID endl_opt type_mark dimensions_list . endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']'
  121 dimensions_list: dimensions_list . dimensions

    ENDL  shift, and go to state 7
    '['   shift, and go to state 282

    $default  reduce using rule 7 (endl_opt)

    endl        go to state 8
    endl_opt    go to state 307
    dimensions  go to state 308


State 286

  142 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more endl_opt . type_mark endl_opt '{' endl_opt stmt_list_opt '}'
  143             | visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more endl_opt . '{' endl_opt stmt_list_opt '}'

    ':'  shift, and go to state 47
    '{'  shift, and go to state 309

    type_mark  go to state 310


State 287

  113 var_init_opt: endl_opt '=' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 311


State 288

  115 var_list: var_list endl_opt ',' endl_opt . variable var_init_opt

    ID  shift, and go to state 312

    variable  go to state 313


State 289

   62 do_while_stmt: DO endl_opt stmt endl_opt WHILE . endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 314


State 290

   63 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE . endl_opt '(' endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 315


State 291

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID
   54 if_stmt: IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt block_statement
   55        | IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt expr stmt_sep
   56        | IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement
   57        | IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep
   58        | IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement
   59        | IF endl_opt '(' endl_opt expr . endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    ENDL              shift, and go to state 7
    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 316


State 292

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID
   64 for_stmt: FOR endl_opt '(' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt
   65         | FOR endl_opt '(' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 317


State 293

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID
   60 while_stmt: WHILE endl_opt '(' endl_opt expr . endl_opt ')' endl_opt stmt
   61           | WHILE endl_opt '(' endl_opt expr . endl_opt ')' endl_opt empty_stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 318


State 294

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID
   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr . endl_opt ')' endl_opt '{' endl_opt case_list '}'

    ENDL              shift, and go to state 7
    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 319


State 295

   77 catch_clause: CATCH . endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement
   78             | CATCH . endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 320


State 296

   76 try_catch_block: TRY endl_opt block_statement endl_opt catch_clause .

    $default  reduce using rule 76 (try_catch_block)


State 297

  153 enum_declaration: ENUM endl_opt ID endl_opt '{' . endl_opt id_list endl_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 321


State 298

   12 expr_list: expr_list . endl_opt ',' endl_opt expr
   14 expr_list_opt: expr_list .

    ENDL  shift, and go to state 7

    ','       reduce using rule 7 (endl_opt)
    $default  reduce using rule 14 (expr_list_opt)

    endl      go to state 8
    endl_opt  go to state 322


State 299

   28 expr: ID endl_opt '(' endl_opt expr_list_opt . ')'

    ')'  shift, and go to state 323


State 300

   11 expr_list: expr .
   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 11 (expr_list)


State 301

   27 expr: '(' endl_opt expr endl_opt ')' .

    $default  reduce using rule 27 (expr)


State 302

   50 expr: expr '[' endl_opt expr endl_opt . ']'

    ']'  shift, and go to state 324


State 303

   49 expr: expr '?' endl_opt expr endl_opt . ':' endl_opt expr

    ':'  shift, and go to state 325


State 304

   51 expr: expr '.' endl_opt ID endl_opt . '(' endl_opt expr_list_opt ')'

    '('  shift, and go to state 326


State 305

  119 dimensions: '[' endl_opt . ']'

    ']'  shift, and go to state 327


State 306

  117 var_declaration: ID endl_opt type_mark endl_opt dimensions_list .
  121 dimensions_list: dimensions_list . dimensions

    '['  shift, and go to state 282

    $default  reduce using rule 117 (var_declaration)

    dimensions  go to state 308


State 307

  118 var_declaration: ID endl_opt type_mark dimensions_list endl_opt . '=' endl_opt '[' endl_opt expr_list_opt ']'

    '='  shift, and go to state 328


State 308

  121 dimensions_list: dimensions_list dimensions .

    $default  reduce using rule 121 (dimensions_list)


State 309

  143 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 329


State 310

  142 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more endl_opt type_mark . endl_opt '{' endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 330


State 311

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID
  113 var_init_opt: endl_opt '=' endl_opt expr .

    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 113 (var_init_opt)


State 312

  111 variable: ID . type_mark_opt

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 109 (type_mark_opt)]
    ':'       reduce using rule 7 (endl_opt)
    $default  reduce using rule 109 (type_mark_opt)

    endl           go to state 8
    endl_opt       go to state 331
    type_mark_opt  go to state 188

    shift/reduce conflict on token ENDL:
      109 type_mark_opt: %empty .
        5 endl: . ENDL
      First example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt var_list endl_opt ',' ID . ENDL type_mark variable var_init_opt endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                         $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 149: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                                                                   '}'
                                                                              `-> 148: class_member_list                                                                                                                                                          endl_opt
                                                                                       `-> 145: class_member
                                                                                                `-> 141: visibility_opt static_opt readonly_opt var_declaration
                                                                                                                                                `-> 116: var_list
                                                                                                                                                         `-> 115: var_list endl_opt ',' variable                                            variable var_init_opt
                                                                                                                                                                                        `-> 111: ID type_mark_opt
                                                                                                                                                                                                    `-> 110: endl_opt             type_mark
                                                                                                                                                                                                             `-> 8: endl
                                                                                                                                                                                                                    `-> 5: . ENDL
      Second example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt var_list endl_opt ',' endl_opt ID . ENDL '=' endl_opt expr endl_opt '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                    $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 149: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                                                                              '}'
                                                                              `-> 148: class_member_list                                                                                                                                                                     endl_opt
                                                                                       `-> 145: class_member
                                                                                                `-> 141: visibility_opt static_opt readonly_opt var_declaration
                                                                                                                                                `-> 116: var_list
                                                                                                                                                         `-> 115: var_list endl_opt ',' endl_opt variable                      var_init_opt
                                                                                                                                                                                                 `-> 111: ID type_mark_opt     `-> 113: endl_opt           '=' endl_opt expr
                                                                                                                                                                                                             `-> 109: %empty .          `-> 8: endl
                                                                                                                                                                                                                                               `-> 5: ENDL



State 313

  115 var_list: var_list endl_opt ',' endl_opt variable . var_init_opt

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 112 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 112 (var_init_opt)

    endl          go to state 8
    endl_opt      go to state 189
    var_init_opt  go to state 332

    shift/reduce conflict on token ENDL:
      112 var_init_opt: %empty .
        5 endl: . ENDL
      First example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt var_list endl_opt ',' endl_opt variable . ENDL '=' endl_opt expr endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                        $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 149: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                                                  '}'
                                                                              `-> 148: class_member_list                                                                                                                                         endl_opt
                                                                                       `-> 145: class_member
                                                                                                `-> 141: visibility_opt static_opt readonly_opt var_list
                                                                                                                                                `-> 115: var_list endl_opt ',' endl_opt variable var_init_opt
                                                                                                                                                                                                 `-> 113: endl_opt             '=' endl_opt expr
                                                                                                                                                                                                          `-> 8: endl
                                                                                                                                                                                                                 `-> 5: . ENDL
      Second example: CLASS endl_opt ID endl_opt '{' endl_opt visibility_opt static_opt readonly_opt var_list endl_opt ',' endl_opt variable . ENDL '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                             $end
               `-> 1: program_elem
                      `-> 3: class_declaration
                             `-> 149: CLASS endl_opt ID endl_opt '{' endl_opt class_body                                                                                                                                                       '}'
                                                                              `-> 148: class_member_list                                                                                                                    endl_opt
                                                                                       `-> 145: class_member                                                                                                                `-> 8: endl
                                                                                                `-> 141: visibility_opt static_opt readonly_opt var_declaration                                                                    `-> 5: ENDL
                                                                                                                                                `-> 116: var_list
                                                                                                                                                         `-> 115: var_list endl_opt ',' endl_opt variable var_init_opt
                                                                                                                                                                                                          `-> 112: %empty .



State 314

   62 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt . '(' endl_opt expr endl_opt ')'

    '('  shift, and go to state 333


State 315

   63 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt . '(' endl_opt expr endl_opt ')'

    '('  shift, and go to state 334


State 316

   54 if_stmt: IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt block_statement
   55        | IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt expr stmt_sep
   56        | IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement
   57        | IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep
   58        | IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement
   59        | IF endl_opt '(' endl_opt expr endl_opt . ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    ')'  shift, and go to state 335


State 317

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt
   65         | FOR endl_opt '(' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ';'  shift, and go to state 336


State 318

   60 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt . ')' endl_opt stmt
   61           | WHILE endl_opt '(' endl_opt expr endl_opt . ')' endl_opt empty_stmt

    ')'  shift, and go to state 337


State 319

   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt . ')' endl_opt '{' endl_opt case_list '}'

    ')'  shift, and go to state 338


State 320

   77 catch_clause: CATCH endl_opt . '(' endl_opt ID endl_opt ')' endl_opt block_statement
   78             | CATCH endl_opt . '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    '('  shift, and go to state 339


State 321

  153 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt . id_list endl_opt '}'

    ID  shift, and go to state 340

    id_list  go to state 341


State 322

   12 expr_list: expr_list endl_opt . ',' endl_opt expr

    ','  shift, and go to state 342


State 323

   28 expr: ID endl_opt '(' endl_opt expr_list_opt ')' .

    $default  reduce using rule 28 (expr)


State 324

   50 expr: expr '[' endl_opt expr endl_opt ']' .

    $default  reduce using rule 50 (expr)


State 325

   49 expr: expr '?' endl_opt expr endl_opt ':' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 343


State 326

   51 expr: expr '.' endl_opt ID endl_opt '(' . endl_opt expr_list_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 344


State 327

  119 dimensions: '[' endl_opt ']' .

    $default  reduce using rule 119 (dimensions)


State 328

  118 var_declaration: ID endl_opt type_mark dimensions_list endl_opt '=' . endl_opt '[' endl_opt expr_list_opt ']'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 345


State 329

  143 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    $default  reduce using rule 81 (stmt_list_opt)

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt_list_opt     go to state 346
    stmt_list         go to state 118
    stmt              go to state 119
    empty_stmt        go to state 120
    modifier          go to state 121
    enum_declaration  go to state 122


State 330

  142 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt . '{' endl_opt stmt_list_opt '}'

    '{'  shift, and go to state 347


State 331

  110 type_mark_opt: endl_opt . type_mark

    ':'  shift, and go to state 47

    type_mark  go to state 348


State 332

  115 var_list: var_list endl_opt ',' endl_opt variable var_init_opt .

    $default  reduce using rule 115 (var_list)


State 333

   62 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' . endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 349


State 334

   63 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' . endl_opt expr endl_opt ')'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 350


State 335

   54 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt block_statement
   55        | IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt expr stmt_sep
   56        | IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt block_statement endl_opt ELSE endl_opt block_statement
   57        | IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep
   58        | IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement
   59        | IF endl_opt '(' endl_opt expr endl_opt ')' . endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 351


State 336

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt
   65         | FOR endl_opt '(' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 352


State 337

   60 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' . endl_opt stmt
   61           | WHILE endl_opt '(' endl_opt expr endl_opt ')' . endl_opt empty_stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 353


State 338

   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' . endl_opt '{' endl_opt case_list '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 354


State 339

   77 catch_clause: CATCH endl_opt '(' . endl_opt ID endl_opt ')' endl_opt block_statement
   78             | CATCH endl_opt '(' . endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 355


State 340

  154 id_list: ID . var_init_opt

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 112 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 112 (var_init_opt)

    endl          go to state 8
    endl_opt      go to state 189
    var_init_opt  go to state 356

    shift/reduce conflict on token ENDL:
      112 var_init_opt: %empty .
        5 endl: . ENDL
      First example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt ENUM endl_opt ID endl_opt '{' ID . ENDL '=' endl_opt expr id_list endl_opt '}' endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                 $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 75: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                                                            '}'
                                                                                                          `-> 82: stmt_list                                                                                                                               endl_opt
                                                                                                                  `-> 83: stmt
                                                                                                                          `-> 96: enum_declaration
                                                                                                                                  `-> 153: ENUM endl_opt ID endl_opt '{' id_list                                                     id_list endl_opt '}'
                                                                                                                                                                         `-> 154: ID var_init_opt
                                                                                                                                                                                     `-> 113: endl_opt             '=' endl_opt expr
                                                                                                                                                                                              `-> 8: endl
                                                                                                                                                                                                     `-> 5: . ENDL
      Second example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt ENUM endl_opt ID endl_opt '{' endl_opt ID . ENDL '}' endl_opt '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                              $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 75: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                                         '}'
                                                                                                          `-> 82: stmt_list                                                                                                            endl_opt
                                                                                                                  `-> 83: stmt
                                                                                                                          `-> 96: enum_declaration
                                                                                                                                  `-> 153: ENUM endl_opt ID endl_opt '{' endl_opt id_list                       endl_opt           '}'
                                                                                                                                                                                  `-> 154: ID var_init_opt      `-> 8: endl
                                                                                                                                                                                              `-> 112: %empty .        `-> 5: ENDL



State 341

  153 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list . endl_opt '}'
  155 id_list: id_list . endl_opt ',' endl_opt ID var_init_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 357


State 342

   12 expr_list: expr_list endl_opt ',' . endl_opt expr

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 358


State 343

   49 expr: expr '?' endl_opt expr endl_opt ':' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 359


State 344

   51 expr: expr '.' endl_opt ID endl_opt '(' endl_opt . expr_list_opt ')'

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 298
    expr_list_opt  go to state 360
    expr           go to state 300


State 345

  118 var_declaration: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt . '[' endl_opt expr_list_opt ']'

    '['  shift, and go to state 361


State 346

  143 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 362


State 347

  142 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' . endl_opt stmt_list_opt '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 363


State 348

  110 type_mark_opt: endl_opt type_mark .

    $default  reduce using rule 110 (type_mark_opt)


State 349

   62 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt . expr endl_opt ')'

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 364


State 350

   63 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt . expr endl_opt ')'

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 365


State 351

   54 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . block_statement
   55        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . expr stmt_sep
   56        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . block_statement endl_opt ELSE endl_opt block_statement
   57        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . block_statement endl_opt ELSE endl_opt expr stmt_sep
   58        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . expr stmt_sep endl_opt ELSE endl_opt block_statement
   59        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt . expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    expr             go to state 366
    block_statement  go to state 367


State 352

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt
   65         | FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 368


State 353

   60 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt . stmt
   61           | WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt . empty_stmt

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt              go to state 369
    empty_stmt        go to state 370
    modifier          go to state 121
    enum_declaration  go to state 122


State 354

   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt . '{' endl_opt case_list '}'

    '{'  shift, and go to state 371


State 355

   77 catch_clause: CATCH endl_opt '(' endl_opt . ID endl_opt ')' endl_opt block_statement
   78             | CATCH endl_opt '(' endl_opt . ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ID  shift, and go to state 372


State 356

  154 id_list: ID var_init_opt .

    $default  reduce using rule 154 (id_list)


State 357

  153 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt . '}'
  155 id_list: id_list endl_opt . ',' endl_opt ID var_init_opt

    ','  shift, and go to state 373
    '}'  shift, and go to state 374


State 358

   12 expr_list: expr_list endl_opt ',' endl_opt . expr

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 375


State 359

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   49     | expr '?' endl_opt expr endl_opt ':' endl_opt expr .
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 49 (expr)


State 360

   51 expr: expr '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt . ')'

    ')'  shift, and go to state 376


State 361

  118 var_declaration: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' . endl_opt expr_list_opt ']'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 377


State 362

  143 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 143 (class_member)


State 363

  142 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt . stmt_list_opt '}'

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    $default  reduce using rule 81 (stmt_list_opt)

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt_list_opt     go to state 378
    stmt_list         go to state 118
    stmt              go to state 119
    empty_stmt        go to state 120
    modifier          go to state 121
    enum_declaration  go to state 122


State 364

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID
   62 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr . endl_opt ')'

    ENDL              shift, and go to state 7
    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 379


State 365

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID
   63 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr . endl_opt ')'

    ENDL              shift, and go to state 7
    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 380


State 366

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID
   55 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr . stmt_sep
   58        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr . stmt_sep endl_opt ELSE endl_opt block_statement
   59        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr . stmt_sep endl_opt ELSE endl_opt expr stmt_sep

    ';'               shift, and go to state 151
    ENDL              shift, and go to state 7
    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    endl      go to state 176
    stmt_sep  go to state 381


State 367

   54 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement .
   56        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement . endl_opt ELSE endl_opt block_statement
   57        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement . endl_opt ELSE endl_opt expr stmt_sep

    ELSE      reduce using rule 7 (endl_opt)
    $default  reduce using rule 54 (if_stmt)

    endl      go to state 8
    endl_opt  go to state 382


State 368

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID
   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt
   65         | FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 383


State 369

   60 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 60 (while_stmt)


State 370

   61 while_stmt: WHILE endl_opt '(' endl_opt expr endl_opt ')' endl_opt empty_stmt .

    $default  reduce using rule 61 (while_stmt)


State 371

   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' . endl_opt case_list '}'

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 384


State 372

   77 catch_clause: CATCH endl_opt '(' endl_opt ID . endl_opt ')' endl_opt block_statement
   78             | CATCH endl_opt '(' endl_opt ID . endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 385


State 373

  155 id_list: id_list endl_opt ',' . endl_opt ID var_init_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 386


State 374

  153 enum_declaration: ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt '}' .

    $default  reduce using rule 153 (enum_declaration)


State 375

   12 expr_list: expr_list endl_opt ',' endl_opt expr .
   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID

    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 12 (expr_list)


State 376

   51 expr: expr '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')' .

    $default  reduce using rule 51 (expr)


State 377

  118 var_declaration: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt . expr_list_opt ']'

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    $default  reduce using rule 13 (expr_list_opt)

    expr_list      go to state 298
    expr_list_opt  go to state 387
    expr           go to state 300


State 378

  142 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt . '}'

    '}'  shift, and go to state 388


State 379

   62 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt . ')'

    ')'  shift, and go to state 389


State 380

   63 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt . ')'

    ')'  shift, and go to state 390


State 381

   55 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep .
   58        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep . endl_opt ELSE endl_opt block_statement
   59        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep . endl_opt ELSE endl_opt expr stmt_sep

    ELSE      reduce using rule 7 (endl_opt)
    $default  reduce using rule 55 (if_stmt)

    endl      go to state 8
    endl_opt  go to state 391


State 382

   56 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt . ELSE endl_opt block_statement
   57        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt . ELSE endl_opt expr stmt_sep

    ELSE  shift, and go to state 392


State 383

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ')' endl_opt stmt
   65         | FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ';' endl_opt expr endl_opt ')' endl_opt empty_stmt

    ';'  shift, and go to state 393


State 384

   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt . case_list '}'

    DEFAULT  shift, and go to state 394
    CASE     shift, and go to state 395

    case_list  go to state 396
    case_stmt  go to state 397


State 385

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt . ')' endl_opt block_statement
   78             | CATCH endl_opt '(' endl_opt ID endl_opt . ':' endl_opt error_type endl_opt ')' endl_opt block_statement

    ':'  shift, and go to state 398
    ')'  shift, and go to state 399


State 386

  155 id_list: id_list endl_opt ',' endl_opt . ID var_init_opt

    ID  shift, and go to state 400


State 387

  118 var_declaration: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt . ']'

    ']'  shift, and go to state 401


State 388

  142 class_member: visibility_opt static_opt readonly_opt ID endl_opt param_list_0_or_more endl_opt type_mark endl_opt '{' endl_opt stmt_list_opt '}' .

    $default  reduce using rule 142 (class_member)


State 389

   62 do_while_stmt: DO endl_opt stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')' .

    $default  reduce using rule 62 (do_while_stmt)


State 390

   63 do_while_stmt: DO endl_opt empty_stmt endl_opt WHILE endl_opt '(' endl_opt expr endl_opt ')' .

    $default  reduce using rule 63 (do_while_stmt)


State 391

   58 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt . ELSE endl_opt block_statement
   59        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt . ELSE endl_opt expr stmt_sep

    ELSE  shift, and go to state 402


State 392

   56 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE . endl_opt block_statement
   57        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE . endl_opt expr stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 403


State 393

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ')' endl_opt stmt
   65         | FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' . endl_opt expr endl_opt ')' endl_opt empty_stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 404


State 394

   70 case_stmt: DEFAULT . endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 405


State 395

   69 case_stmt: CASE . endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 406


State 396

   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list . '}'
   68 case_list: case_list . case_stmt

    DEFAULT  shift, and go to state 394
    CASE     shift, and go to state 395
    '}'      shift, and go to state 407

    case_stmt  go to state 408


State 397

   67 case_list: case_stmt .

    $default  reduce using rule 67 (case_list)


State 398

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' . endl_opt error_type endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 409


State 399

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' . endl_opt block_statement

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 410


State 400

  155 id_list: id_list endl_opt ',' endl_opt ID . var_init_opt

    ENDL  shift, and go to state 7

    ENDL      [reduce using rule 112 (var_init_opt)]
    '='       reduce using rule 7 (endl_opt)
    $default  reduce using rule 112 (var_init_opt)

    endl          go to state 8
    endl_opt      go to state 189
    var_init_opt  go to state 411

    shift/reduce conflict on token ENDL:
      112 var_init_opt: %empty .
        5 endl: . ENDL
      First example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt ENUM endl_opt ID endl_opt '{' id_list endl_opt ',' endl_opt ID . ENDL '=' endl_opt expr id_list endl_opt '}' endl_opt '}' $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                               $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 75: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                                                                                          '}'
                                                                                                          `-> 82: stmt_list                                                                                                                                                             endl_opt
                                                                                                                  `-> 83: stmt
                                                                                                                          `-> 96: enum_declaration
                                                                                                                                  `-> 153: ENUM endl_opt ID endl_opt '{' id_list                                                                                   id_list endl_opt '}'
                                                                                                                                                                         `-> 155: id_list endl_opt ',' endl_opt ID var_init_opt
                                                                                                                                                                                                                   `-> 113: endl_opt             '=' endl_opt expr
                                                                                                                                                                                                                            `-> 8: endl
                                                                                                                                                                                                                                   `-> 5: . ENDL
      Second example: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt ENUM endl_opt ID endl_opt '{' endl_opt id_list endl_opt ',' endl_opt ID . ENDL '}' endl_opt '}' $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                            $end
               `-> 1: program_elem
                      `-> 4: function_declaration
                             `-> 75: FUNC endl_opt ID endl_opt param_list_0_or_more endl_opt '{' endl_opt stmt_list_opt                                                                                                                                                       '}'
                                                                                                          `-> 82: stmt_list                                                                                                                                          endl_opt
                                                                                                                  `-> 83: stmt
                                                                                                                          `-> 96: enum_declaration
                                                                                                                                  `-> 153: ENUM endl_opt ID endl_opt '{' endl_opt id_list                                                     endl_opt           '}'
                                                                                                                                                                                  `-> 155: id_list endl_opt ',' endl_opt ID var_init_opt      `-> 8: endl
                                                                                                                                                                                                                            `-> 112: %empty .        `-> 5: ENDL



State 401

  118 var_declaration: ID endl_opt type_mark dimensions_list endl_opt '=' endl_opt '[' endl_opt expr_list_opt ']' .

    $default  reduce using rule 118 (var_declaration)


State 402

   58 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE . endl_opt block_statement
   59        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE . endl_opt expr stmt_sep

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 412


State 403

   56 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt . block_statement
   57        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt . expr stmt_sep

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    expr             go to state 413
    block_statement  go to state 414


State 404

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ')' endl_opt stmt
   65         | FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt . expr endl_opt ')' endl_opt empty_stmt

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 415


State 405

   70 case_stmt: DEFAULT endl_opt . ':' endl_opt stmt_list_opt break_opt

    ':'  shift, and go to state 416


State 406

   69 case_stmt: CASE endl_opt . expr endl_opt ':' endl_opt stmt_list_opt break_opt

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106

    expr  go to state 417


State 407

   66 switch_stmt: SWITCH endl_opt '(' endl_opt expr endl_opt ')' endl_opt '{' endl_opt case_list '}' .

    $default  reduce using rule 66 (switch_stmt)


State 408

   68 case_list: case_list case_stmt .

    $default  reduce using rule 68 (case_list)


State 409

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt . error_type endl_opt ')' endl_opt block_statement

    UNKNOWN  shift, and go to state 418
    ANY      shift, and go to state 419

    error_type  go to state 420


State 410

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt . block_statement

    '{'  shift, and go to state 107

    block_statement  go to state 421


State 411

  155 id_list: id_list endl_opt ',' endl_opt ID var_init_opt .

    $default  reduce using rule 155 (id_list)


State 412

   58 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt . block_statement
   59        | IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt . expr stmt_sep

    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    expr             go to state 422
    block_statement  go to state 423


State 413

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID
   57 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt expr . stmt_sep

    ';'               shift, and go to state 151
    ENDL              shift, and go to state 7
    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    endl      go to state 176
    stmt_sep  go to state 424


State 414

   56 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt block_statement .

    $default  reduce using rule 56 (if_stmt)


State 415

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID
   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ')' endl_opt stmt
   65         | FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr . endl_opt ')' endl_opt empty_stmt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 425


State 416

   70 case_stmt: DEFAULT endl_opt ':' . endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 426


State 417

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID
   69 case_stmt: CASE endl_opt expr . endl_opt ':' endl_opt stmt_list_opt break_opt

    ENDL              shift, and go to state 7
    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 427


State 418

   79 error_type: UNKNOWN .

    $default  reduce using rule 79 (error_type)


State 419

   80 error_type: ANY .

    $default  reduce using rule 80 (error_type)


State 420

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type . endl_opt ')' endl_opt block_statement

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 428


State 421

   77 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ')' endl_opt block_statement .

    $default  reduce using rule 77 (catch_clause)


State 422

   15 expr: expr . POST_DECREMENT
   17     | expr . POST_INCREMENT
   29     | expr . '+' endl_opt expr
   30     | expr . '-' endl_opt expr
   31     | expr . '*' endl_opt expr
   32     | expr . '/' endl_opt expr
   33     | expr . '%' endl_opt expr
   34     | expr . '<' endl_opt expr
   35     | expr . '>' endl_opt expr
   36     | expr . LESS_OR_EQUAL endl_opt expr
   37     | expr . GREATER_OR_EQUAL endl_opt expr
   38     | expr . EQUALS endl_opt expr
   39     | expr . NOT_EQUALS endl_opt expr
   40     | expr . '=' endl_opt expr
   41     | expr . PLUS_ASSIGN endl_opt expr
   42     | expr . MINUS_ASSIGN endl_opt expr
   43     | expr . MUL_ASSIGN endl_opt expr
   44     | expr . DIV_ASSIGN endl_opt expr
   45     | expr . MOD_ASSIGN endl_opt expr
   47     | expr . AND endl_opt expr
   48     | expr . OR endl_opt expr
   49     | expr . '?' endl_opt expr endl_opt ':' endl_opt expr
   50     | expr . '[' endl_opt expr endl_opt ']'
   51     | expr . '.' endl_opt ID endl_opt '(' endl_opt expr_list_opt ')'
   52     | expr . '.' endl_opt ID
   59 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr . stmt_sep

    ';'               shift, and go to state 151
    ENDL              shift, and go to state 7
    '='               shift, and go to state 152
    PLUS_ASSIGN       shift, and go to state 153
    MINUS_ASSIGN      shift, and go to state 154
    MUL_ASSIGN        shift, and go to state 155
    DIV_ASSIGN        shift, and go to state 156
    MOD_ASSIGN        shift, and go to state 157
    '['               shift, and go to state 158
    '?'               shift, and go to state 159
    OR                shift, and go to state 160
    AND               shift, and go to state 161
    EQUALS            shift, and go to state 162
    NOT_EQUALS        shift, and go to state 163
    '<'               shift, and go to state 164
    '>'               shift, and go to state 165
    LESS_OR_EQUAL     shift, and go to state 166
    GREATER_OR_EQUAL  shift, and go to state 167
    '+'               shift, and go to state 168
    '-'               shift, and go to state 169
    '*'               shift, and go to state 170
    '/'               shift, and go to state 171
    '%'               shift, and go to state 172
    POST_INCREMENT    shift, and go to state 173
    POST_DECREMENT    shift, and go to state 174
    '.'               shift, and go to state 175

    endl      go to state 176
    stmt_sep  go to state 429


State 423

   58 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt block_statement .

    $default  reduce using rule 58 (if_stmt)


State 424

   57 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt block_statement endl_opt ELSE endl_opt expr stmt_sep .

    $default  reduce using rule 57 (if_stmt)


State 425

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ')' endl_opt stmt
   65         | FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt . ')' endl_opt empty_stmt

    ')'  shift, and go to state 430


State 426

   70 case_stmt: DEFAULT endl_opt ':' endl_opt . stmt_list_opt break_opt

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    $default  reduce using rule 81 (stmt_list_opt)

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt_list_opt     go to state 431
    stmt_list         go to state 118
    stmt              go to state 119
    empty_stmt        go to state 120
    modifier          go to state 121
    enum_declaration  go to state 122


State 427

   69 case_stmt: CASE endl_opt expr endl_opt . ':' endl_opt stmt_list_opt break_opt

    ':'  shift, and go to state 432


State 428

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt . ')' endl_opt block_statement

    ')'  shift, and go to state 433


State 429

   59 if_stmt: IF endl_opt '(' endl_opt expr endl_opt ')' endl_opt expr stmt_sep endl_opt ELSE endl_opt expr stmt_sep .

    $default  reduce using rule 59 (if_stmt)


State 430

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' . endl_opt stmt
   65         | FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' . endl_opt empty_stmt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 434


State 431

   70 case_stmt: DEFAULT endl_opt ':' endl_opt stmt_list_opt . break_opt

    BREAK  shift, and go to state 435

    $default  reduce using rule 71 (break_opt)

    break_opt  go to state 436


State 432

   69 case_stmt: CASE endl_opt expr endl_opt ':' . endl_opt stmt_list_opt break_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 437


State 433

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' . endl_opt block_statement

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 438


State 434

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt . stmt
   65         | FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt . empty_stmt

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt              go to state 439
    empty_stmt        go to state 440
    modifier          go to state 121
    enum_declaration  go to state 122


State 435

   72 break_opt: BREAK . stmt_sep endl_opt

    ';'   shift, and go to state 151
    ENDL  shift, and go to state 7

    endl      go to state 176
    stmt_sep  go to state 441


State 436

   70 case_stmt: DEFAULT endl_opt ':' endl_opt stmt_list_opt break_opt .

    $default  reduce using rule 70 (case_stmt)


State 437

   69 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt . stmt_list_opt break_opt

    RETURN          shift, and go to state 85
    DO              shift, and go to state 86
    IF              shift, and go to state 87
    FOR             shift, and go to state 88
    WHILE           shift, and go to state 89
    SWITCH          shift, and go to state 90
    TRY             shift, and go to state 91
    LET             shift, and go to state 92
    CONST           shift, and go to state 93
    ENUM            shift, and go to state 94
    NUMBER_LITERAL  shift, and go to state 95
    STRING_LITERAL  shift, and go to state 96
    TRUE_LITERAL    shift, and go to state 97
    FALSE_LITERAL   shift, and go to state 98
    ID              shift, and go to state 99
    ';'             shift, and go to state 100
    '+'             shift, and go to state 101
    '-'             shift, and go to state 102
    PREF_INCREMENT  shift, and go to state 103
    PREF_DECREMENT  shift, and go to state 104
    NOT             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 107

    $default  reduce using rule 81 (stmt_list_opt)

    expr              go to state 108
    block_statement   go to state 109
    if_stmt           go to state 110
    while_stmt        go to state 111
    do_while_stmt     go to state 112
    for_stmt          go to state 113
    switch_stmt       go to state 114
    return_statement  go to state 115
    try_catch_block   go to state 116
    stmt_list_opt     go to state 442
    stmt_list         go to state 118
    stmt              go to state 119
    empty_stmt        go to state 120
    modifier          go to state 121
    enum_declaration  go to state 122


State 438

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt . block_statement

    '{'  shift, and go to state 107

    block_statement  go to state 443


State 439

   64 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt stmt .

    $default  reduce using rule 64 (for_stmt)


State 440

   65 for_stmt: FOR endl_opt '(' endl_opt expr endl_opt ';' endl_opt expr endl_opt ';' endl_opt expr endl_opt ')' endl_opt empty_stmt .

    $default  reduce using rule 65 (for_stmt)


State 441

   72 break_opt: BREAK stmt_sep . endl_opt

    ENDL  shift, and go to state 7

    $default  reduce using rule 7 (endl_opt)

    endl      go to state 8
    endl_opt  go to state 444


State 442

   69 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt . break_opt

    BREAK  shift, and go to state 435

    $default  reduce using rule 71 (break_opt)

    break_opt  go to state 445


State 443

   78 catch_clause: CATCH endl_opt '(' endl_opt ID endl_opt ':' endl_opt error_type endl_opt ')' endl_opt block_statement .

    $default  reduce using rule 78 (catch_clause)


State 444

   72 break_opt: BREAK stmt_sep endl_opt .

    $default  reduce using rule 72 (break_opt)


State 445

   69 case_stmt: CASE endl_opt expr endl_opt ':' endl_opt stmt_list_opt break_opt .

    $default  reduce using rule 69 (case_stmt)
